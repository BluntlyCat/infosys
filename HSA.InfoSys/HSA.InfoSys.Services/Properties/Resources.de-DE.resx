<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="COUNTDOWN_SET_NEW_CONFIG" xml:space="preserve">
    <value>Ändere Einstellungen {0} =&gt; {1} für Job {2}.</value>
  </data>
  <data name="COUNTDOWN_TO_STRING" xml:space="preserve">
    <value>Countdown: [{0}], Source: [{1}]</value>
  </data>
  <data name="CRAWL_CONTROLLER_CLIENT_TO_STRING" xml:space="preserve">
    <value>Crawl Client {0}, anwendbar {1}, crawlen{2}, URLs: [{3}], URL Pfad: {4}, seed file {5}, Befehl {6}.</value>
  </data>
  <data name="CRAWL_CONTROLLER_SHUTDOWN" xml:space="preserve">
    <value>Beenden des Services</value>
  </data>
  <data name="CRAWL_CONTROLLER_START" xml:space="preserve">
    <value>Crawl Controller wird gestartet.</value>
  </data>
  <data name="DBMANAGER_ADD_ENTITY" xml:space="preserve">
    <value>Instanz vom Typ {0} wurde erfolgreich in die Datenbank gespeichert.</value>
  </data>
  <data name="DBMANAGER_BYTEAMOUNT_GREATER_THAN_MAX_BYTES" xml:space="preserve">
    <value>Byte Größe {0} &gt; maxbytes {1} an der Stelle: {2}</value>
  </data>
  <data name="DBMANAGER_CREATE_COMPONENT" xml:space="preserve">
    <value>Neue Component [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_ORGUNIT" xml:space="preserve">
    <value>Neue Org Unit [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_ORGUNITCONFIG" xml:space="preserve">
    <value>Neue Org Unit configuration [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_RESULT" xml:space="preserve">
    <value>Neues Result [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_SCHEDULER" xml:space="preserve">
    <value>Neuer Scheduler [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_SOURCE" xml:space="preserve">
    <value>Neue Source [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_CREATE_SYSTEMSERVICE" xml:space="preserve">
    <value>Neuer Systemservice [{0}] erstellt.</value>
  </data>
  <data name="DBMANAGER_DELETE_ENTITY" xml:space="preserve">
    <value>Entity gelöscht [{0}]</value>
  </data>
  <data name="DBMANAGER_EAGER_LOAD_THIS_ENTITIES" xml:space="preserve">
    <value>Lade diese Entity: [{0}] aus der Datenbank.</value>
  </data>
  <data name="DBMANAGER_GET_COMPONENT_BY_ORGUNIT_ID" xml:space="preserve">
    <value>Component erhalten: [{0}] mit dieser GUID: [{1}].</value>
  </data>
  <data name="DBMANAGER_GET_ENTITY" xml:space="preserve">
    <value>Entity vom Typ [{0}] erhalten, mit diesen Werten [{1}] mit dieser GUID [{2}]</value>
  </data>
  <data name="DBMANAGER_GET_ORGUNIT_BY_USERID" xml:space="preserve">
    <value>Org Unit erhalten  [{0}] mit dieser Id [{1}]</value>
  </data>
  <data name="DBMANAGER_GET_RESULTS_BY_COMPONENT_ID" xml:space="preserve">
    <value>Results erhalten: [{0}] mit dieser Component GUID: [{1}].</value>
  </data>
  <data name="DBMANAGER_INCREASE_REQUEST_AMOUNT" xml:space="preserve">
    <value>Anzahl der Anfrage erhöhen.</value>
  </data>
  <data name="DBMANAGER_NO_MANAGER_FOUND" xml:space="preserve">
    <value>DBManager existiert nicht. Es muss erstellt werden.</value>
  </data>
  <data name="DBMANAGER_RESULTS_BYTE_COUNT" xml:space="preserve">
    <value>Gesamte Anzahl der Bytes von Results: {0}</value>
  </data>
  <data name="DBMANAGER_SPLITTED_RESULTS_FROM_TO" xml:space="preserve">
    <value>Holt die Result von Index: {0} bis Index: {1}.</value>
  </data>
  <data name="DBMANAGER_TOTAL_REQUEST_AMOUNT" xml:space="preserve">
    <value>Summe der Anfragen: {0}.</value>
  </data>
  <data name="DBMANAGER_UNPROXY_ORGUNITS" xml:space="preserve">
    <value>OrgUnitConfig nach Aufruf von unproxy: {0}</value>
  </data>
  <data name="DBMANAGER_UPDATE_ENTITY" xml:space="preserve">
    <value>Instanz vom Typ {0} wurde erfolgreich in der Datenbank aktualisiert.</value>
  </data>
  <data name="DBSESSION_NHIBERNATE_CONFIG_READY" xml:space="preserve">
    <value>NHibernate wurde erfolgreich konfiguriert.</value>
  </data>
  <data name="DBSESSION_OPEN_SESSION" xml:space="preserve">
    <value>Neue Session wird geöffnet.</value>
  </data>
  <data name="EMAIL_NOTIFIER_ADD_MAILBODY" xml:space="preserve">
    <value>Inhalt der Mail wurde hinzugefügt: [{0}]</value>
  </data>
  <data name="EMAIL_NOTIFIER_ADD_RECIPIENT" xml:space="preserve">
    <value>Mailempfänger {0} für OrgUnit {1} hinzugefügt.</value>
  </data>
  <data name="EMAIL_NOTIFIER_BUID_MAIL" xml:space="preserve">
    <value>Erstelle Mail von [{0}] mit Betreff: [{1}]</value>
  </data>
  <data name="EMAIL_NOTIFIER_CRAWL_FAILED" xml:space="preserve">
    <value>Crawl für die OrgUnit: [{0}] ist fehlgeschlagen.</value>
  </data>
  <data name="EMAIL_NOTIFIER_CRAWL_FAILED_BODY" xml:space="preserve">
    <value>Crawl für {0} ist fehlgeschlagen.</value>
  </data>
  <data name="EMAIL_NOTIFIER_CRAWL_FAILED_SUBJECT" xml:space="preserve">
    <value>Crawl ist fehlgeschlagen.</value>
  </data>
  <data name="EMAIL_NOTIFIER_DESERIALIZE_ADDESSSES" xml:space="preserve">
    <value>Deserialisierung von Adressen [{0}] ist abgeschlossen.</value>
  </data>
  <data name="EMAIL_NOTIFIER_GET_ORG_UNIT" xml:space="preserve">
    <value>Org Unit [{0}] für Entity [{1}] erhalten.</value>
  </data>
  <data name="EMAIL_NOTIFIER_ISSUE_FOUND_SUBJECT" xml:space="preserve">
    <value>Neue Issues für System {0} gefunden.</value>
  </data>
  <data name="EMAIL_NOTIFIER_NO_ADDRESSES" xml:space="preserve">
    <value>Keine Emailadresse gefunden.</value>
  </data>
  <data name="EMAIL_NOTIFIER_NO_SETTINGS" xml:space="preserve">
    <value>Der E-Mailservice ist nicht konfiguriert. E-Mails werden nicht gesendet.</value>
  </data>
  <data name="EMAIL_NOTIFIER_SEARCH_FINISHED" xml:space="preserve">
    <value>Suche für Org Unit: [{0}] wurde beendet.</value>
  </data>
  <data name="EMAIL_NOTIFIER_SEND_MAIL" xml:space="preserve">
    <value>Sende Mail von {0} mit Betreff {1} an {2}.</value>
  </data>
  <data name="EMAIL_NOTIFIER_SEND_MAIL_TO_ENTITY_OWNER" xml:space="preserve">
    <value>Sende Maill: Entity: [{0}], Betreff: [{1}], Inhalt: [{2}]</value>
  </data>
  <data name="ERROR_TIME_INIT" xml:space="preserve">
    <value>Error during time initialisation, error was:\n{0}</value>
  </data>
  <data name="LOG_COMMON_ERROR" xml:space="preserve">
    <value>Allgemeiner Fehler: {0}</value>
  </data>
  <data name="LOG_COUNTDOWN_INITIALIZE" xml:space="preserve">
    <value>Initialisiere eine neue Instanz für Countdown.</value>
  </data>
  <data name="LOG_COUNTDOWN_SET_REPEAT_TIME" xml:space="preserve">
    <value>Setze neue Zeit für Wiederholung.</value>
  </data>
  <data name="LOG_COUNTDOWN_START_COUNTDOWN" xml:space="preserve">
    <value>Starte neuen Countdown.</value>
  </data>
  <data name="LOG_COUNTDOWN_THREAD_ENDS" xml:space="preserve">
    <value>Thread hat while Schleife verlassen.</value>
  </data>
  <data name="LOG_COUNTDOWN_THREAD_IS_RUNNING" xml:space="preserve">
    <value>Thread läuft.</value>
  </data>
  <data name="LOG_DISPATCHER_ZERO" xml:space="preserve">
    <value>Job dispatcher timer hat Null erreicht.</value>
  </data>
  <data name="LOG_FETCH_JOBS_FROM_DB" xml:space="preserve">
    <value>Hole Jobs aus der Datenbank</value>
  </data>
  <data name="LOG_FILE_CREATION_SUCCESS" xml:space="preserve">
    <value>Ordner {0} in {1} erfolgreich erstellt.</value>
  </data>
  <data name="LOG_FILE_READING_ERROR" xml:space="preserve">
    <value>Fehler beim Lesen {0}, Fehler war: {1}</value>
  </data>
  <data name="LOG_FILE_WRITING_ERROR" xml:space="preserve">
    <value>Fehler beim Schreiben in der Datei {0} an Host {1}, Fehler war: {2}.</value>
  </data>
  <data name="LOG_GOT_SCHEDULER_LIST_FROM_DB" xml:space="preserve">
    <value>SchedulerTimer für die Datebank erhalten:[{0}]</value>
  </data>
  <data name="LOG_INDEX_OUT_OF_RANGE" xml:space="preserve">
    <value>Der Index war außerhalb des Bereichs: {0}.</value>
  </data>
  <data name="LOG_INSTANCIATE_NEW_SCHEDULER" xml:space="preserve">
    <value>Instanziert einen neuen Scheduler.</value>
  </data>
  <data name="LOG_PREFIX_FILE_NOT_FOUND" xml:space="preserve">
    <value>Präfix Ordner wurde nicht gefunden, es muss erstellt werden.</value>
  </data>
  <data name="LOG_RESTART_DISPATCHER" xml:space="preserve">
    <value>Job dispatcher Timer wurde neu gestartet.</value>
  </data>
  <data name="LOG_SCHEDULER_ADD" xml:space="preserve">
    <value>Füge SchedulerTimer [{0}] hinzu.</value>
  </data>
  <data name="LOG_SCHEDULER_ALREADY_EXIST" xml:space="preserve">
    <value>Der SchedulerTimer existiert bereits.</value>
  </data>
  <data name="LOG_SCHEDULER_REMOVE" xml:space="preserve">
    <value>Lösche OrgUnitConfig [{0}].</value>
  </data>
  <data name="LOG_SSH_ERROR" xml:space="preserve">
    <value>SSH Kommunikationsfehler: {0}</value>
  </data>
  <data name="LOG_START_SERVICE" xml:space="preserve">
    <value>Starte Service {0} mit ID: {1}.</value>
  </data>
  <data name="LOG_STOP_SERVICE" xml:space="preserve">
    <value>Stoppe Service {0} mit ID: {1}.</value>
  </data>
  <data name="LOG_TIME_VALIDATION_ERROR" xml:space="preserve">
    <value>Ein Fehler ist in countdown [{0}] aufgetreten, Nachricht war: [{1}].</value>
  </data>
  <data name="NUTCHMANAGER_NO_MANAGER_FOUND" xml:space="preserve">
    <value>NutchManager existiert nicht, es muss erstellt werden.</value>
  </data>
  <data name="NUTCH_CONTROLLER_ADD_URL" xml:space="preserve">
    <value>Füge URL {0} an Cient {1} hinzu.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CHECK_CLIENT_USAGE" xml:space="preserve">
    <value>Überprüfe Client Usability.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENTS_SPLIT" xml:space="preserve">
    <value>Clients erhalten: [{0}].</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_ADD_PREFIX" xml:space="preserve">
    <value>Füge Präfix {0} hinzu.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_AUTHENTICATION_EXCEPTION" xml:space="preserve">
    <value>Authentifizierung fehlgeschlagen für Host {0}: {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_COMMAND_EXECUTED" xml:space="preserve">
    <value>Befehl {0} ausgeführt bei Host {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CONNECT" xml:space="preserve">
    <value>Verbindung zum Host {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CONNECTION_EXEPTION" xml:space="preserve">
    <value>Verbindung fehlgeschlagen zum Host {0}: {1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CRAWLER_LOG" xml:space="preserve">
    <value>Crawler Log für Host {0}:{1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CRAWL_END" xml:space="preserve">
    <value>Crawl beim Host {0} beendet.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CRAWL_FINISHED" xml:space="preserve">
    <value>Crawl beim Host {0} beendet.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CRAWL_PROCESS_CREATED" xml:space="preserve">
    <value>Crawl Prozess {0} wurde erstellt beim Host {1}. </value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CREATE_DIRECTORY" xml:space="preserve">
    <value>Erstelle neues Verzeichnis {0} bei Host {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_CREATE_NEW" xml:space="preserve">
    <value>Erstelle neuen NutchControllerClient: {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_DIRECTORY_CREATION_ERROR" xml:space="preserve">
    <value>Das Verzeichnis {0} konnte nicht beim Host {1} erstellt werden.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_DIRECTORY_CREATION_SUCCESS" xml:space="preserve">
    <value>Das Verzeichnis {0} wurde erfolgreich bei Host {1} erstellt.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_DISCONNECT" xml:space="preserve">
    <value>Verbindung getrennt von Host {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_FILE_EXISTS" xml:space="preserve">
    <value>Ordner {0} vom Type {1} existiert auf Host {2}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_FILE_NOT_EXISTS" xml:space="preserve">
    <value>Ordner {0} vom Type {1} existiert nicht auf Host {2},</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_FILE_READING_SUCCESS" xml:space="preserve">
    <value>Ordner {0} erfolgreich auf Host {1} gelesen.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_GOT_FILE_CONTENT" xml:space="preserve">
    <value>Ordnerinhalt erhalten auf Host{0}: {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_HADOOP_LOG" xml:space="preserve">
    <value>Ein Auszug aus der hadoop.log von host {0} zeigt folgendes: {1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_HOST_IS_USABLE" xml:space="preserve">
    <value>Host {0} kann crawlen {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_NOT_CONNECTED" xml:space="preserve">
    <value>Host {0} ist null oder nicht verbunden.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_NOT_USABLE" xml:space="preserve">
    <value>Client {0} ist nicht anwendbar.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_NUTCH_COMMAND_ERROR" xml:space="preserve">
    <value>Der Remotehost {0} hat einen Fehler bekommen, beim Ausführen von Nutch: {1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_NUTCH_INSTALLED" xml:space="preserve">
    <value>Nutch ist auf Host {0} installiert.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_NUTCH_NOT_INSTALLED" xml:space="preserve">
    <value>Nutch ist nicht auf Host {0} installiert.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_PREFIX_ADDED" xml:space="preserve">
    <value>Neuer Präfix {0} hinzugefügt auf Host {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_PREFIX_EXISTS" xml:space="preserve">
    <value>Präfix {0} existiert bereits auf Host {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_SSH_TIMEOUT_EXCEPTION" xml:space="preserve">
    <value>Verbindungszeit abgelauf für Host {0}: {1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_START_CRAWL" xml:space="preserve">
    <value>Starte Crawl bei Host {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_USER_PATH_IS" xml:space="preserve">
    <value>User Phad bei Host {0} ist {1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_WRITE_FILE" xml:space="preserve">
    <value>Schreibe Inhalt {0} im Ordner {1} in Mode {2} auf Host {3}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CLIENT_WRITING_SUCCESS" xml:space="preserve">
    <value>Inhalt {0} erfolgreich auf Host {1} geschrieben.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CRAWLS_FINISHED" xml:space="preserve">
    <value>Alle Crawls wurden beendet.</value>
  </data>
  <data name="NUTCH_CONTROLLER_CRAWL_FINISHED" xml:space="preserve">
    <value>Crawl beendet, Crawls verbleibend: {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_DISCONNECT" xml:space="preserve">
    <value>Versucht Verbindung zum  Host {0 } zu trennen.</value>
  </data>
  <data name="NUTCH_CONTROLLER_DO_NOT_CRAWL_ON_HOST" xml:space="preserve">
    <value>Host {0} will not be used for crawling. See other log messages for further details.</value>
  </data>
  <data name="NUTCH_CONTROLLER_DO_NOT_CRAWL_ON_HOST_NO_URLS" xml:space="preserve">
    <value>Host {0} wird nicht zum Crawlen verwendet, weil er keine URLs hat: [{1}].</value>
  </data>
  <data name="NUTCH_CONTROLLER_INITIALIZE_CLIENT" xml:space="preserve">
    <value>Initialisiere Clients.</value>
  </data>
  <data name="NUTCH_CONTROLLER_INITIALIZE_CLIENT_FINISHED" xml:space="preserve">
    <value>Clients initialisiert.</value>
  </data>
  <data name="NUTCH_CONTROLLER_INIT_NEXT_CRAWL" xml:space="preserve">
    <value>Initialisiere nächsten Crawl.</value>
  </data>
  <data name="NUTCH_CONTROLLER_IS_ALIVE" xml:space="preserve">
    <value>Nutch controller ist noch aktiv.</value>
  </data>
  <data name="NUTCH_CONTROLLER_NEW_CLIENT_INITIALIZED" xml:space="preserve">
    <value>Neuer Client initialisiert: [{0}].</value>
  </data>
  <data name="NUTCH_CONTROLLER_NO_INITIALIZING_NO_SETTINGS" xml:space="preserve">
    <value>Konnte die Clients nicht initialisieren, weil nutch nicht konfiguriert ist. Bitte konfigurieren Sie zuerst nutch.</value>
  </data>
  <data name="NUTCH_CONTROLLER_NO_SETTINGS" xml:space="preserve">
    <value>Bitte konfigurieren Sie zuerst den Nutch-Controller, überspringe Crawl.</value>
  </data>
  <data name="NUTCH_CONTROLLER_NO_USABLE_CLIENT" xml:space="preserve">
    <value>Konnte auf keinen der angegebenen Hosts{0} verbinden.</value>
  </data>
  <data name="NUTCH_CONTROLLER_RESET_CLIENTS" xml:space="preserve">
    <value>Urls zurücksetzen für Client {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_SET_CRAWL_PROCESS" xml:space="preserve">
    <value>Setze nächsten Crawlprozess für Client {0}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_SET_PENDING_CRAWL" xml:space="preserve">
    <value>Setze bevorstehende Crawls auf Host {0} für Urls: {1}</value>
  </data>
  <data name="NUTCH_CONTROLLER_SET_RUNNING_CRAWLS" xml:space="preserve">
    <value>Neuer Crawl job angekommen, als laufender Crawl gesetzt.</value>
  </data>
  <data name="NUTCH_CONTROLLER_SOCKET_EXCEPTION" xml:space="preserve">
    <value>Kann nicht mit Host {0}:  Verbindung aufnehmen{1}.</value>
  </data>
  <data name="NUTCH_CONTROLLER_START_CRAWL" xml:space="preserve">
    <value>Neuer cawl startet.</value>
  </data>
  <data name="NUTCH_CONTROLLER_UPDATE_SETTINGS" xml:space="preserve">
    <value>Aktualisiere Einstellungen [{0}] =&gt; [{1}].</value>
  </data>
  <data name="NUTCH_CONTROLLER_UPDATE_URLS" xml:space="preserve">
    <value>Update URLs: {0}.</value>
  </data>
  <data name="RESULT_TO_STRING" xml:space="preserve">
    <value>Issue {0} gefunden auf Webseite: {1}, Inhalt: {2} bei {3}</value>
  </data>
  <data name="SCHEDULER_CANT_SET_JOB" xml:space="preserve">
    <value>Job konnte für OrgUnitConfig [{0}] nicht gesetzt werden.</value>
  </data>
  <data name="SCHEDULER_CRAWL_FAILED" xml:space="preserve">
    <value>Crawl fehlgeschlagen: OrgUnit [{0}].</value>
  </data>
  <data name="SCHEDULER_CRAWL_RESTART" xml:space="preserve">
    <value>Scheduler starts new timer for crawl job.</value>
  </data>
  <data name="SCHEDULER_CRAWL_SUCCEEDED" xml:space="preserve">
    <value>Crawl wurde ohne Fehler beendet.</value>
  </data>
  <data name="SCHEDULER_CREATE_NEW_JOB" xml:space="preserve">
    <value>Erstelle neuen Job für OrgUnitConfig [{0}].</value>
  </data>
  <data name="SCHEDULER_ON_TICK" xml:space="preserve">
    <value>Countdown [{0}] verbleibende Zeit: [{1}].</value>
  </data>
  <data name="SCHEDULER_SKIP_NOT_ACTIVE_JOB" xml:space="preserve">
    <value>Überspringe nicht aktiven Job {0}.</value>
  </data>
  <data name="SCHEDULER_UPDATE_JOB" xml:space="preserve">
    <value>Aktualisiere Job {0}.</value>
  </data>
  <data name="SEARCH_RECALL" xml:space="preserve">
    <value>Wiederruf für OrgUnit [{0}]</value>
  </data>
  <data name="SEARCH_RECALL_START_SERVICE" xml:space="preserve">
    <value>Neue Suche gestartet, Suche läuft: [{0}]</value>
  </data>
  <data name="SEARCH_RECALL_THREAD_STATE" xml:space="preserve">
    <value>Aktueller laufender thread Status: {0}, laufende Suchen: {1}, timeout: {2}</value>
  </data>
  <data name="SEARCH_RECALL_THREAD_STATE_END" xml:space="preserve">
    <value>Thread Status am Ende: {0}, laufende Suchen: {1}, Timeout: {2}</value>
  </data>
  <data name="SERVICE_IS_ALREADY_UP" xml:space="preserve">
    <value>Service {0} ist bereist vorhanden.</value>
  </data>
  <data name="SERVICE_IS_NOT_RUNNING" xml:space="preserve">
    <value>Service {0} läuft nicht.</value>
  </data>
  <data name="SOLR_CLIENT_CLOSE_CONNECTION" xml:space="preserve">
    <value>Schließe Verbindung</value>
  </data>
  <data name="SOLR_CLIENT_CONNECTION_ESTABLISHED" xml:space="preserve">
    <value>Verbindung zum Host: [{0}] erstellt.</value>
  </data>
  <data name="SOLR_CLIENT_MESSAGE_SENT" xml:space="preserve">
    <value>Nachricht wurde gesendet: [{0}]</value>
  </data>
  <data name="SOLR_CLIENT_REQUEST_RECEIVED" xml:space="preserve">
    <value>Anfrage für Solr empfangen: [{0}]</value>
  </data>
  <data name="SOLR_CLIENT_RESULT_RECEIVED" xml:space="preserve">
    <value>Nachricht von Host: [{0}] erhalten mit Inhalt: [{1}]</value>
  </data>
  <data name="SOLR_CLIENT_SOCKET_CLOSED" xml:space="preserve">
    <value>Socket zum Host: [{0}] geschlossen.</value>
  </data>
  <data name="SOLR_CLIENT_TRY_GET_RESPONSE" xml:space="preserve">
    <value>Es wird auf Rückmeldung von Solr gewartet.</value>
  </data>
  <data name="SOLR_CLIENT_UNABLE_TO_CONNECT" xml:space="preserve">
    <value>Kann sich nicht mit host: [{0}] verbinden.</value>
  </data>
  <data name="SOLR_SEARCH_COMPONENT_FINISHED" xml:space="preserve">
    <value>Suche für Component {0} beendet.</value>
  </data>
  <data name="SOLR_SEARCH_COMPONENT_STARTED" xml:space="preserve">
    <value>Suche für Component {0} gestartet.</value>
  </data>
  <data name="SOLR_SEARCH_CONTROLLER_NO_COMPONENTS" xml:space="preserve">
    <value>Für die OrgUnit {0} sind keine Komponenten vorhanden.</value>
  </data>
  <data name="SOLR_SEARCH_CONTROLLER_NO_NEW_RESULTS" xml:space="preserve">
    <value>Keine neuen Results gefunden für  {0}.</value>
  </data>
  <data name="SOLR_SEARCH_CONTROLLER_NO_ORGUNIT" xml:space="preserve">
    <value>Es gibt keine OrgUnit mit der ID {0}.</value>
  </data>
  <data name="SOLR_SEARCH_CONTROLLER_NO_SETTINGS" xml:space="preserve">
    <value>Keine Einstellungen gefunden, überspringe Suche. Bitte konfigurieren Sie zuerst Solr. </value>
  </data>
  <data name="SOLR_SEARCH_CONTROLLER_RESULT_ERROR" xml:space="preserve">
    <value>Fehler beim Verarbeiten der Suchergebnisse, Fehler war: {0}.</value>
  </data>
  <data name="SOLR_SEARCH_NO_RESULTS" xml:space="preserve">
    <value>Keine Results für  {0} gefunden.</value>
  </data>
  <data name="SOLR_SEARCH_ORGUNIT_FINISHED" xml:space="preserve">
    <value>Suche für OrgUnit {0} beendet.</value>
  </data>
  <data name="SOLR_SEARCH_RESULT" xml:space="preserve">
    <value>Response für Anfrage [{0}] is: [{1}]</value>
  </data>
  <data name="TIME_TO_STRING" xml:space="preserve">
    <value>Verbleibende Zeit: [ID: {0} - {1}D : {2}H : {3}m : {4}s]</value>
  </data>
  <data name="WCF_COMMUNICATION_ERROR" xml:space="preserve">
    <value>Kommunikationsfehler: {0}</value>
  </data>
  <data name="WCF_CONTROLLER_CLIENT" xml:space="preserve">
    <value>Erstelle Gegenstelle für Proxy.</value>
  </data>
  <data name="WCF_CONTROLLER_CLIENT_CREATE_BINDING" xml:space="preserve">
    <value>Erstelle Bindung für Proxy.</value>
  </data>
  <data name="WCF_CONTROLLER_CLIENT_TRY_GET_PROXY" xml:space="preserve">
    <value>Versuche neuen Proxy zu erstellen.</value>
  </data>
  <data name="WCF_CONTROLLER_WCF_HOST_CLOSED" xml:space="preserve">
    <value>WCF service host {0} beendet.</value>
  </data>
  <data name="WCF_CONTROLLER_WCF_HOST_OPENED" xml:space="preserve">
    <value>WCF service host {0} gestartet.</value>
  </data>
</root>