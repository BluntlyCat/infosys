.TH "NHibernate.Test.NHSpecificTest.NH1483.Fixture" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Test.NHSpecificTest.NH1483.Fixture \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Test\&.NHSpecificTest\&.BugTestCase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBTestLoadFromSecondLevelCache< TBaseClass >\fP ()"
.br
.RI "\fITests that a \fBSubclass\fP can be loaded from second level cache as the specifed type of baseclass \fP"
.ti -1c
.RI "void \fBLoadSubclassFromSecondLevelCache\fP ()"
.br
.RI "\fIVerifies that a subclass can be loaded from the second level cache \fP"
.ti -1c
.RI "void \fBLoadSubclassFromSecondLevelCacheAsBaseClass\fP ()"
.br
.RI "\fIVerifies that a subclass can be loaded from the second level cache \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBOnTearDown\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 8 of file Fixture\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void NHibernate\&.Test\&.NHSpecificTest\&.NH1483\&.Fixture\&.LoadSubclassFromSecondLevelCache ()"

.PP
Verifies that a subclass can be loaded from the second level cache 
.PP
Definition at line 97 of file Fixture\&.cs\&.
.SS "void NHibernate\&.Test\&.NHSpecificTest\&.NH1483\&.Fixture\&.LoadSubclassFromSecondLevelCacheAsBaseClass ()"

.PP
Verifies that a subclass can be loaded from the second level cache 
.PP
Definition at line 106 of file Fixture\&.cs\&.
.SS "void NHibernate\&.Test\&.NHSpecificTest\&.NH1483\&.Fixture\&.TestLoadFromSecondLevelCache< TBaseClass > ()"

.PP
Tests that a \fBSubclass\fP can be loaded from second level cache as the specifed type of baseclass 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fITBaseClass\fP The type of the \fBBaseClass\fP to test\&.
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fITBaseClass\fP : \fIBaseClass\fP
.PP
Definition at line 20 of file Fixture\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
