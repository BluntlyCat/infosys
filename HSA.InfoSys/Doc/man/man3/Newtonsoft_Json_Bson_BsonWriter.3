.TH "Newtonsoft.Json.Bson.BsonWriter" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Newtonsoft.Json.Bson.BsonWriter \- 
.PP
Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBsonWriter\fP (Stream stream)"
.br
.RI "\fIInitializes a new instance of the \fBBsonWriter\fP class\&. \fP"
.ti -1c
.RI "\fBBsonWriter\fP (BinaryWriter writer)"
.br
.RI "\fIInitializes a new instance of the \fBBsonWriter\fP class\&. \fP"
.ti -1c
.RI "override void \fBFlush\fP ()"
.br
.RI "\fIFlushes whatever is in the buffer to the underlying streams and also flushes the underlying stream\&. \fP"
.ti -1c
.RI "</code > containing the 
.br
specified text\&.*</summary > *
.br
< paramname='text'> Text to 
.br
place inside the comment\&.
.br
</param > *override void \fBWriteComment\fP (string text)"
.br
.RI "\fIWrites out a comment \fP"
.ti -1c
.RI "override void \fBWriteStartConstructor\fP (string name)"
.br
.RI "\fIWrites the start of a constructor with the given name\&. \fP"
.ti -1c
.RI "override void \fBWriteRaw\fP (string json)"
.br
.RI "\fIWrites raw JSON\&. \fP"
.ti -1c
.RI "override void \fBWriteRawValue\fP (string json)"
.br
.RI "\fIWrites raw JSON where a value is expected and updates the writer's state\&. \fP"
.ti -1c
.RI "override void \fBWriteStartArray\fP ()"
.br
.RI "\fIWrites the beginning of a \fBJson\fP array\&. \fP"
.ti -1c
.RI "override void \fBWriteStartObject\fP ()"
.br
.RI "\fIWrites the beginning of a \fBJson\fP object\&. \fP"
.ti -1c
.RI "override void \fBWritePropertyName\fP (string name)"
.br
.RI "\fIWrites the property name of a name/value pair on a \fBJson\fP object\&. \fP"
.ti -1c
.RI "override void \fBClose\fP ()"
.br
.RI "\fICloses this stream and the underlying stream\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (object value)"
.br
.RI "\fIWrites a Object value\&. An error will raised if the value cannot be written as a single JSON token\&. \fP"
.ti -1c
.RI "override void \fBWriteNull\fP ()"
.br
.RI "\fIWrites a null value\&. \fP"
.ti -1c
.RI "override void \fBWriteUndefined\fP ()"
.br
.RI "\fIWrites an undefined value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (string value)"
.br
.RI "\fIWrites a String value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (int value)"
.br
.RI "\fIWrites a Int32 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (uint value)"
.br
.RI "\fIWrites a UInt32 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (long value)"
.br
.RI "\fIWrites a Int64 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (ulong value)"
.br
.RI "\fIWrites a UInt64 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (float value)"
.br
.RI "\fIWrites a Single value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (double value)"
.br
.RI "\fIWrites a \fBDouble\fP value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (bool value)"
.br
.RI "\fIWrites a Boolean value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (short value)"
.br
.RI "\fIWrites a Int16 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (ushort value)"
.br
.RI "\fIWrites a UInt16 value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (char value)"
.br
.RI "\fIWrites a Char value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (byte value)"
.br
.RI "\fIWrites a Byte value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (sbyte value)"
.br
.RI "\fIWrites a SByte value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (decimal value)"
.br
.RI "\fIWrites a \fBDecimal\fP value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (\fBDateTime\fP value)"
.br
.RI "\fIWrites a \fBDateTime\fP value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (\fBDateTimeOffset\fP value)"
.br
.RI "\fIWrites a \fBDateTimeOffset\fP value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (byte[] value)"
.br
.RI "\fIWrites a T:Byte[] value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (Guid value)"
.br
.RI "\fIWrites a Guid value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (TimeSpan value)"
.br
.RI "\fIWrites a TimeSpan value\&. \fP"
.ti -1c
.RI "override void \fBWriteValue\fP (Uri value)"
.br
.RI "\fIWrites a Uri value\&. \fP"
.ti -1c
.RI "void \fBWriteObjectId\fP (byte[] value)"
.br
.RI "\fIWrites a T:Byte[] value that represents a BSON object id\&. \fP"
.ti -1c
.RI "void \fBWriteRegex\fP (string pattern, string options)"
.br
.RI "\fIWrites a BSON regex\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBWriteEnd\fP (\fBJsonToken\fP token)"
.br
.RI "\fIWrites the end\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "DateTimeKind \fBDateTimeKindHandling\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the DateTimeKind used when writing \fBDateTime\fP values to BSON\&. When set to DateTimeKind\&.Unspecified no conversion will occur\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data\&. 


.PP
Definition at line 43 of file BsonWriter\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.BsonWriter (Streamstream)"

.PP
Initializes a new instance of the \fBBsonWriter\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstream\fP The stream\&.
.RE
.PP

.PP
Definition at line 66 of file BsonWriter\&.cs\&.
.SS "Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.BsonWriter (BinaryWriterwriter)"

.PP
Initializes a new instance of the \fBBsonWriter\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIwriter\fP The writer\&.
.RE
.PP

.PP
Definition at line 76 of file BsonWriter\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.Close ()\fC [virtual]\fP"

.PP
Closes this stream and the underlying stream\&. 
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 175 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.Flush ()\fC [virtual]\fP"

.PP
Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream\&. 
.PP
Implements \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 85 of file BsonWriter\&.cs\&.
.SS "</code> containing the specified text\&.*</summary> *<paramname='text'> Text to place inside the comment\&.</param> * override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteComment (stringtext)\fC [virtual]\fP"

.PP
Writes out a comment \fC/*\&.\&.\&. \fP
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 109 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteEnd (\fBJsonToken\fPtoken)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Writes the end\&. 
.PP
\fBParameters:\fP
.RS 4
\fItoken\fP The token\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 94 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteNull ()\fC [virtual]\fP"

.PP
Writes a null value\&. 
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 247 of file BsonWriter\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteObjectId (byte[]value)"

.PP
Writes a T:Byte[] value that represents a BSON object id\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Object ID value to write\&.
.RE
.PP

.PP
Definition at line 489 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WritePropertyName (stringname)\fC [virtual]\fP"

.PP
Writes the property name of a name/value pair on a \fBJson\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The name of the property\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 165 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteRaw (stringjson)\fC [virtual]\fP"

.PP
Writes raw JSON\&. 
.PP
\fBParameters:\fP
.RS 4
\fIjson\fP The raw JSON to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 127 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteRawValue (stringjson)\fC [virtual]\fP"

.PP
Writes raw JSON where a value is expected and updates the writer's state\&. 
.PP
\fBParameters:\fP
.RS 4
\fIjson\fP The raw JSON to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 136 of file BsonWriter\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteRegex (stringpattern, stringoptions)"

.PP
Writes a BSON regex\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpattern\fP The regex pattern\&.
.br
\fIoptions\fP The regex options\&.
.RE
.PP

.PP
Definition at line 507 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteStartArray ()\fC [virtual]\fP"

.PP
Writes the beginning of a \fBJson\fP array\&. 
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 144 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteStartConstructor (stringname)\fC [virtual]\fP"

.PP
Writes the start of a constructor with the given name\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The name of the constructor\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 118 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteStartObject ()\fC [virtual]\fP"

.PP
Writes the beginning of a \fBJson\fP object\&. 
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 154 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteUndefined ()\fC [virtual]\fP"

.PP
Writes an undefined value\&. 
.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 256 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (objectvalue)\fC [virtual]\fP"

.PP
Writes a Object value\&. An error will raised if the value cannot be written as a single JSON token\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Object value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 229 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (stringvalue)\fC [virtual]\fP"

.PP
Writes a String value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The String value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 266 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (intvalue)\fC [virtual]\fP"

.PP
Writes a Int32 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Int32 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 279 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (uintvalue)\fC [virtual]\fP"

.PP
Writes a UInt32 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The UInt32 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 290 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (longvalue)\fC [virtual]\fP"

.PP
Writes a Int64 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Int64 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 303 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (ulongvalue)\fC [virtual]\fP"

.PP
Writes a UInt64 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The UInt64 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 314 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (floatvalue)\fC [virtual]\fP"

.PP
Writes a Single value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Single value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 327 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (doublevalue)\fC [virtual]\fP"

.PP
Writes a \fBDouble\fP value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The \fBDouble\fP value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 337 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (boolvalue)\fC [virtual]\fP"

.PP
Writes a Boolean value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Boolean value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 347 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (shortvalue)\fC [virtual]\fP"

.PP
Writes a Int16 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Int16 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 357 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (ushortvalue)\fC [virtual]\fP"

.PP
Writes a UInt16 value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The UInt16 value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 368 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (charvalue)\fC [virtual]\fP"

.PP
Writes a Char value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Char value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 378 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (bytevalue)\fC [virtual]\fP"

.PP
Writes a Byte value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Byte value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 394 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (sbytevalue)\fC [virtual]\fP"

.PP
Writes a SByte value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The SByte value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 405 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (decimalvalue)\fC [virtual]\fP"

.PP
Writes a \fBDecimal\fP value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The \fBDecimal\fP value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 415 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (\fBDateTime\fPvalue)\fC [virtual]\fP"

.PP
Writes a \fBDateTime\fP value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The \fBDateTime\fP value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 425 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (\fBDateTimeOffset\fPvalue)\fC [virtual]\fP"

.PP
Writes a \fBDateTimeOffset\fP value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The \fBDateTimeOffset\fP value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 437 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (byte[]value)\fC [virtual]\fP"

.PP
Writes a T:Byte[] value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The T:Byte[] value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 448 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (Guidvalue)\fC [virtual]\fP"

.PP
Writes a Guid value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Guid value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 458 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (TimeSpanvalue)\fC [virtual]\fP"

.PP
Writes a TimeSpan value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The TimeSpan value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 468 of file BsonWriter\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.WriteValue (Urivalue)\fC [virtual]\fP"

.PP
Writes a Uri value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP The Uri value to write\&.
.RE
.PP

.PP
Reimplemented from \fBNewtonsoft\&.Json\&.JsonWriter\fP\&.
.PP
Definition at line 478 of file BsonWriter\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "DateTimeKind Newtonsoft\&.Json\&.Bson\&.BsonWriter\&.DateTimeKindHandling\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the DateTimeKind used when writing \fBDateTime\fP values to BSON\&. When set to DateTimeKind\&.Unspecified no conversion will occur\&. The DateTimeKind used when writing \fBDateTime\fP values to BSON\&.
.PP
Definition at line 57 of file BsonWriter\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
