.TH "NHibernate.Hql.Ast.ANTLR.Tree.BooleanLiteralNode" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Hql.Ast.ANTLR.Tree.BooleanLiteralNode \- 
.PP
Represents a boolean literal within a query\&. /summary>  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Hql\&.Ast\&.ANTLR\&.Tree\&.LiteralNode\fP, and \fBNHibernate\&.Hql\&.Ast\&.ANTLR\&.Tree\&.IExpectedTypeAwareNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBooleanLiteralNode\fP (IToken token)"
.br
.ti -1c
.RI "override \fBSqlString\fP \fBRenderText\fP (\fBISessionFactoryImplementor\fP sessionFactory)"
.br
.RI "\fIRetrieve the text to be used for rendering this particular node\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override \fBIType\fP \fBDataType\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBIType\fP \fBExpectedType\fP\fC [get, set]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Represents a boolean literal within a query\&. /summary> 
.PP
Definition at line 13 of file BooleanLiteralNode\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override \fBSqlString\fP NHibernate\&.Hql\&.Ast\&.ANTLR\&.Tree\&.BooleanLiteralNode\&.RenderText (\fBISessionFactoryImplementor\fPsessionFactory)\fC [virtual]\fP"

.PP
Retrieve the text to be used for rendering this particular node\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsessionFactory\fP The session factory
.RE
.PP
\fBReturns:\fP
.RS 4
The text to use for rendering
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Hql\&.Ast\&.ANTLR\&.Tree\&.SqlNode\fP\&.
.PP
Definition at line 53 of file BooleanLiteralNode\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "\fBIType\fP NHibernate\&.Hql\&.Ast\&.ANTLR\&.Tree\&.BooleanLiteralNode\&.ExpectedType\fC [get]\fP, \fC [set]\fP"
Expected-types really only pertinent here for boolean literals\&.\&.\&.
.PP
\fBParameters:\fP
.RS 4
\fIexpectedType\fP 
.RE
.PP

.PP
Definition at line 48 of file BooleanLiteralNode\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
