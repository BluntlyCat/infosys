.TH "Org.BouncyCastle.Utilities.Zlib.Deflate" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Org.BouncyCastle.Utilities.Zlib.Deflate \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZStream\fP, and \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ICompressor\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBConfig\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (\fBZStream\fP strm, CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (\fBZStream\fP strm, byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel level, CompressionStrategy strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP (bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (\fBZStream\fP strm, CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (\fBZStream\fP strm, byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel level, CompressionStrategy strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (\fBZStream\fP strm, CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (\fBZStream\fP strm, byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel level, CompressionStrategy strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level)"
.br
.ti -1c
.RI "\fBDeflate\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (byte[] inputBufer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset, int outputCount, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (byte[] bufer, int offset, int count, byte[] p1, int p2, int p3, FlushType flushType)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (\fBZStream\fP strm, CompressionLevel level, int bits)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (\fBZStream\fP strm, CompressionLevel _level, CompressionStrategy _strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (\fBZStream\fP strm, byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (\fBZStream\fP strm, FlushType flush)"
.br
.ti -1c
.RI "void \fBpqdownheap\fP (short[] tree, int k)"
.br
.RI "\fIRestore the heap property by moving down the tree starting at node k, exchanging a node with the smallest of its two sons if necessary, stopping when the heap property is re-established (each father smaller than its two sons)\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 39 of file Deflate\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\&.pqdownheap (short[]tree, intk)"

.PP
Restore the heap property by moving down the tree starting at node k, exchanging a node with the smallest of its two sons if necessary, stopping when the heap property is re-established (each father smaller than its two sons)\&. 
.PP
\fBParameters:\fP
.RS 4
\fItree\fP The tree to restore\&.
.br
\fIk\fP The node to move down\&.
.RE
.PP

.PP
Definition at line 957 of file Deflate\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
