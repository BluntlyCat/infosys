.TH "NHibernate.DomainModel.DoubleStringType" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.DomainModel.DoubleStringType \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.UserTypes\&.ICompositeUserType\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "new bool \fBEquals\fP (object x, object y)"
.br
.ti -1c
.RI "int \fBGetHashCode\fP (object x)"
.br
.RI "\fIGet a hashcode for the instance, consistent with persistence 'equality' \fP"
.ti -1c
.RI "Object \fBDeepCopy\fP (Object x)"
.br
.ti -1c
.RI "Object \fBNullSafeGet\fP (IDataReader rs, string[] names, \fBISessionImplementor\fP session, Object owner)"
.br
.ti -1c
.RI "void \fBNullSafeSet\fP (IDbCommand st, Object value, int index, bool[] settable, \fBISessionImplementor\fP session)"
.br
.ti -1c
.RI "Object \fBGetPropertyValue\fP (Object component, int property)"
.br
.ti -1c
.RI "void \fBSetPropertyValue\fP (Object component, int property, Object value)"
.br
.ti -1c
.RI "object \fBAssemble\fP (object cached, \fBISessionImplementor\fP session, object owner)"
.br
.RI "\fIReconstruct an object from the cacheable representation\&. At the very least this method should perform a deep copy\&. (optional operation) \fP"
.ti -1c
.RI "object \fBDisassemble\fP (Object value, \fBISessionImplementor\fP session)"
.br
.ti -1c
.RI "object \fBReplace\fP (object original, object target, \fBISessionImplementor\fP session, object owner)"
.br
.RI "\fIDuring merge, replace the existing (target) value in the entity we are merging to with a new (original) value from the detached entity we are merging\&. For immutable objects, or null values, it is safe to simply return the first parameter\&. For mutable objects, it is safe to return a copy of the first parameter\&. However, since composite user types often define component values, it might make sense to recursively replace component values in the target object\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "System\&.Type \fBReturnedClass\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBIsMutable\fP\fC [get]\fP"
.br
.ti -1c
.RI "string[] \fBPropertyNames\fP\fC [get]\fP"
.br
.ti -1c
.RI "\fBIType\fP[] \fBPropertyTypes\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 11 of file DoubleStringType\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "object NHibernate\&.DomainModel\&.DoubleStringType\&.Assemble (objectcached, \fBISessionImplementor\fPsession, objectowner)"

.PP
Reconstruct an object from the cacheable representation\&. At the very least this method should perform a deep copy\&. (optional operation) 
.PP
\fBParameters:\fP
.RS 4
\fIcached\fP the object to be cached
.br
\fIsession\fP 
.br
\fIowner\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Implements \fBNHibernate\&.UserTypes\&.ICompositeUserType\fP\&.
.PP
Definition at line 92 of file DoubleStringType\&.cs\&.
.SS "int NHibernate\&.DomainModel\&.DoubleStringType\&.GetHashCode (objectx)"

.PP
Get a hashcode for the instance, consistent with persistence 'equality' 
.PP
Implements \fBNHibernate\&.UserTypes\&.ICompositeUserType\fP\&.
.PP
Definition at line 28 of file DoubleStringType\&.cs\&.
.SS "object NHibernate\&.DomainModel\&.DoubleStringType\&.Replace (objectoriginal, objecttarget, \fBISessionImplementor\fPsession, objectowner)"

.PP
During merge, replace the existing (target) value in the entity we are merging to with a new (original) value from the detached entity we are merging\&. For immutable objects, or null values, it is safe to simply return the first parameter\&. For mutable objects, it is safe to return a copy of the first parameter\&. However, since composite user types often define component values, it might make sense to recursively replace component values in the target object\&. 
.PP
Implements \fBNHibernate\&.UserTypes\&.ICompositeUserType\fP\&.
.PP
Definition at line 105 of file DoubleStringType\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
