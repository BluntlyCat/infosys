.TH "NHibernate.Dialect.FirebirdDialect" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Dialect.FirebirdDialect \- 
.PP
Summary description for \fBFirebirdDialect\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override string \fBGetSelectSequenceNextValString\fP (string sequenceName)"
.br
.RI "\fIGenerate the select expression fragment that will retrieve the next value of a sequence as part of another (typically DML) statement\&. \fP"
.ti -1c
.RI "override string \fBGetSequenceNextValString\fP (string sequenceName)"
.br
.RI "\fIGenerate the appropriate select statement to to retreive the next value of a sequence\&. \fP"
.ti -1c
.RI "override string \fBGetCreateSequenceString\fP (string sequenceName)"
.br
.RI "\fITypically dialects which support sequences can create a sequence with a single command\&. \fP"
.ti -1c
.RI "override string \fBGetDropSequenceString\fP (string sequenceName)"
.br
.RI "\fITypically dialects which support sequences can drop a sequence with a single command\&. \fP"
.ti -1c
.RI "override \fBSqlString\fP \fBGetLimitString\fP (\fBSqlString\fP queryString, \fBSqlString\fP offset, \fBSqlString\fP limit)"
.br
.RI "\fIAttempts to add a \fCLIMIT\fP clause to the given SQL \fCSELECT\fP\&. Expects any database-specific offset and limit adjustments to have already been performed (ex\&. UseMaxForLimit, OffsetStartsAtOne)\&. \fP"
.ti -1c
.RI "override \fBIDataBaseSchema\fP \fBGetDataBaseSchema\fP (DbConnection connection)"
.br
.ti -1c
.RI "override \fBSqlString\fP \fBAddIdentifierOutParameterToInsert\fP (\fBSqlString\fP insertString, string identifierColumnName, string parameterName)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override string \fBAddColumnString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsSequences\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsLimit\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsLimitOffset\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBQuerySequencesString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override long \fBTimestampResolutionInTicks\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsCurrentTimestampSelection\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBCurrentTimestampSelectString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBSelectGUIDString\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Summary description for \fBFirebirdDialect\fP\&. 

The \fBFirebirdDialect\fP defaults the following configuration properties: Property Default Value  connection\&.driver_class \fBNHibernate\&.Driver\&.FirebirdClientDriver\fP  
.PP
Definition at line 30 of file FirebirdDialect\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override string NHibernate\&.Dialect\&.FirebirdDialect\&.GetCreateSequenceString (stringsequenceName)\fC [virtual]\fP"

.PP
Typically dialects which support sequences can create a sequence with a single command\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsequenceName\fP The name of the sequence 
.RE
.PP
\fBReturns:\fP
.RS 4
The sequence creation command 
.RE
.PP
.PP
This is convenience form of \fBGetCreateSequenceStrings(string,int,int)\fP to help facilitate that\&. Dialects which support sequences and can create a sequence in a single command need \fIonly\fP override this method\&. Dialects which support sequences but require multiple commands to create a sequence should instead override \fBGetCreateSequenceStrings(string,int,int)\fP\&. 
.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 160 of file FirebirdDialect\&.cs\&.
.SS "override string NHibernate\&.Dialect\&.FirebirdDialect\&.GetDropSequenceString (stringsequenceName)\fC [virtual]\fP"

.PP
Typically dialects which support sequences can drop a sequence with a single command\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsequenceName\fP The name of the sequence 
.RE
.PP
\fBReturns:\fP
.RS 4
The sequence drop commands 
.RE
.PP
.PP
This is convenience form of \fBGetDropSequenceStrings\fP to help facilitate that\&.
.PP
Dialects which support sequences and can drop a sequence in a single command need \fIonly\fP override this method\&. Dialects which support sequences but require multiple commands to drop a sequence should instead override \fBGetDropSequenceStrings\fP\&. 
.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 165 of file FirebirdDialect\&.cs\&.
.SS "override \fBSqlString\fP NHibernate\&.Dialect\&.FirebirdDialect\&.GetLimitString (\fBSqlString\fPqueryString, \fBSqlString\fPoffset, \fBSqlString\fPlimit)\fC [virtual]\fP"

.PP
Attempts to add a \fCLIMIT\fP clause to the given SQL \fCSELECT\fP\&. Expects any database-specific offset and limit adjustments to have already been performed (ex\&. UseMaxForLimit, OffsetStartsAtOne)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIqueryString\fP The SqlString to base the limit query off\&.
.br
\fIoffset\fP Offset of the first row to be returned by the query\&. This may be represented as a parameter, a string literal, or a null value if no limit is requested\&. This should have already been adjusted to account for OffsetStartsAtOne\&.
.br
\fIlimit\fP Maximum number of rows to be returned by the query\&. This may be represented as a parameter, a string literal, or a null value if no offset is requested\&. This should have already been adjusted to account for UseMaxForLimit\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A new SqlString that contains the \fCLIMIT\fP clause\&. Returns \fCnull\fP if \fIqueryString\fP  represents a SQL statement to which a limit clause cannot be added, for example when the query string is custom SQL invoking a stored procedure\&.
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 185 of file FirebirdDialect\&.cs\&.
.SS "override string NHibernate\&.Dialect\&.FirebirdDialect\&.GetSelectSequenceNextValString (stringsequenceName)\fC [virtual]\fP"

.PP
Generate the select expression fragment that will retrieve the next value of a sequence as part of another (typically DML) statement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsequenceName\fP the name of the sequence 
.RE
.PP
\fBReturns:\fP
.RS 4
The 'nextval' fragment\&. 
.RE
.PP
.PP
This differs from \fBGetSequenceNextValString\fP in that this should return an expression usable within another statement\&. 
.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 150 of file FirebirdDialect\&.cs\&.
.SS "override string NHibernate\&.Dialect\&.FirebirdDialect\&.GetSequenceNextValString (stringsequenceName)\fC [virtual]\fP"

.PP
Generate the appropriate select statement to to retreive the next value of a sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsequenceName\fP the name of the sequence 
.RE
.PP
\fBReturns:\fP
.RS 4
String The 'nextval' select string\&. 
.RE
.PP
.PP
This should be a 'stand alone' select statement\&.
.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 155 of file FirebirdDialect\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
