//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18033
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HSA.InfoSys.Scheduling.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HSA.InfoSys.Scheduling.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error during time initialisation, error was:\n{0} ähnelt.
        /// </summary>
        internal static string ERROR_TIME_INIT {
            get {
                return ResourceManager.GetString("ERROR_TIME_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Job dispatcher timer reached zero. ähnelt.
        /// </summary>
        internal static string LOG_DISPATCHER_ZERO {
            get {
                return ResourceManager.GetString("LOG_DISPATCHER_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch jobs from database. ähnelt.
        /// </summary>
        internal static string LOG_FETCH_JOBS_FROM_DB {
            get {
                return ResourceManager.GetString("LOG_FETCH_JOBS_FROM_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Got SchdulerTimer from database:[{0}] ähnelt.
        /// </summary>
        internal static string LOG_GOT_SCHEDULER_LIST_FROM_DB {
            get {
                return ResourceManager.GetString("LOG_GOT_SCHEDULER_LIST_FROM_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instanciate a new scheduler. ähnelt.
        /// </summary>
        internal static string LOG_INSTANCIATE_NEW_SCHEDULER {
            get {
                return ResourceManager.GetString("LOG_INSTANCIATE_NEW_SCHEDULER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Job dispatcher timer restarted. ähnelt.
        /// </summary>
        internal static string LOG_RESTART_DISPATCHER {
            get {
                return ResourceManager.GetString("LOG_RESTART_DISPATCHER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add SchedulerTimer [{0}] ähnelt.
        /// </summary>
        internal static string LOG_SCHEDULER_ADD {
            get {
                return ResourceManager.GetString("LOG_SCHEDULER_ADD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The SchedulerTimer already exists. ähnelt.
        /// </summary>
        internal static string LOG_SCHEDULER_ALREADY_EXIST {
            get {
                return ResourceManager.GetString("LOG_SCHEDULER_ALREADY_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start service {0}. ähnelt.
        /// </summary>
        internal static string LOG_START_SERVICE {
            get {
                return ResourceManager.GetString("LOG_START_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop service {0} ähnelt.
        /// </summary>
        internal static string LOG_STOP_SERVICE {
            get {
                return ResourceManager.GetString("LOG_STOP_SERVICE", resourceCulture);
            }
        }
    }
}
