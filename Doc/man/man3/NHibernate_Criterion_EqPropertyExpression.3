.TH "NHibernate.Criterion.EqPropertyExpression" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Criterion.EqPropertyExpression \- 
.PP
An \fBICriterion\fP that represents an 'equal' constraint between two properties\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Criterion\&.PropertyExpression\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEqPropertyExpression\fP (string lhsPropertyName, \fBIProjection\fP rhsProjection)"
.br
.RI "\fIInitializes a new instance of the \fBEqPropertyExpression\fP class\&. \fP"
.ti -1c
.RI "\fBEqPropertyExpression\fP (\fBIProjection\fP lhsProjection, \fBIProjection\fP rhsProjection)"
.br
.RI "\fIInitializes a new instance of the \fBEqPropertyExpression\fP class\&. \fP"
.ti -1c
.RI "\fBEqPropertyExpression\fP (\fBIProjection\fP lhsProjection, string rhsPropertyName)"
.br
.RI "\fIInitializes a new instance of the \fBEqPropertyExpression\fP class\&. \fP"
.ti -1c
.RI "\fBEqPropertyExpression\fP (string lhsPropertyName, string rhsPropertyName)"
.br
.RI "\fIInitializes a new instance of the \fBEqPropertyExpression\fP class that compares two mapped properties using an 'equal' constraint\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override string \fBOp\fP\fC [get]\fP"
.br
.RI "\fIGet the Sql operator to use for the \fBEqPropertyExpression\fP\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An \fBICriterion\fP that represents an 'equal' constraint between two properties\&. 


.PP
Definition at line 10 of file EqPropertyExpression\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NHibernate\&.Criterion\&.EqPropertyExpression\&.EqPropertyExpression (stringlhsPropertyName, \fBIProjection\fPrhsProjection)"

.PP
Initializes a new instance of the \fBEqPropertyExpression\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlhsPropertyName\fP Name of the LHS property\&.
.br
\fIrhsProjection\fP The RHS projection\&.
.RE
.PP

.PP
Definition at line 17 of file EqPropertyExpression\&.cs\&.
.SS "NHibernate\&.Criterion\&.EqPropertyExpression\&.EqPropertyExpression (\fBIProjection\fPlhsProjection, \fBIProjection\fPrhsProjection)"

.PP
Initializes a new instance of the \fBEqPropertyExpression\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlhsProjection\fP The LHS projection\&.
.br
\fIrhsProjection\fP The RHS projection\&.
.RE
.PP

.PP
Definition at line 26 of file EqPropertyExpression\&.cs\&.
.SS "NHibernate\&.Criterion\&.EqPropertyExpression\&.EqPropertyExpression (\fBIProjection\fPlhsProjection, stringrhsPropertyName)"

.PP
Initializes a new instance of the \fBEqPropertyExpression\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlhsProjection\fP The projection\&.
.br
\fIrhsPropertyName\fP Name of the RHS property\&.
.RE
.PP

.PP
Definition at line 35 of file EqPropertyExpression\&.cs\&.
.SS "NHibernate\&.Criterion\&.EqPropertyExpression\&.EqPropertyExpression (stringlhsPropertyName, stringrhsPropertyName)"

.PP
Initializes a new instance of the \fBEqPropertyExpression\fP class that compares two mapped properties using an 'equal' constraint\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlhsPropertyName\fP The name of the \fBProperty\fP to use as the left hand side\&.
.br
\fIrhsPropertyName\fP The name of the \fBProperty\fP to use as the right hand side\&.
.RE
.PP

.PP
Definition at line 45 of file EqPropertyExpression\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override string NHibernate\&.Criterion\&.EqPropertyExpression\&.Op\fC [get]\fP, \fC [protected]\fP"

.PP
Get the Sql operator to use for the \fBEqPropertyExpression\fP\&. The string '<c> = </c>'
.PP
Definition at line 55 of file EqPropertyExpression\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
