.TH "log4net.Appender.UdpAppender" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Appender.UdpAppender \- 
.PP
Sends logging events as connectionless UDP datagrams to a remote host or a multicast group using an UdpClient\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Inherited by \fBlog4net\&.Appender\&.RemoteSyslogAppender\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUdpAppender\fP ()"
.br
.RI "\fIInitializes a new instance of the \fBUdpAppender\fP class\&. \fP"
.ti -1c
.RI "override void \fBActivateOptions\fP ()"
.br
.RI "\fIInitialize the appender based on the options set\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBAppend\fP (\fBLoggingEvent\fP loggingEvent)"
.br
.RI "\fIThis method is called by the \fBAppenderSkeleton\&.DoAppend(LoggingEvent)\fP method\&. \fP"
.ti -1c
.RI "override void \fBOnClose\fP ()"
.br
.RI "\fICloses the UDP connection and releases all resources associated with this \fBUdpAppender\fP instance\&. \fP"
.ti -1c
.RI "virtual void \fBInitializeClientConnection\fP ()"
.br
.RI "\fIInitializes the underlying UdpClient connection\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "IPAddress \fBRemoteAddress\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the IP address of the remote host or multicast group to which the underlying UdpClient should sent the logging event\&. \fP"
.ti -1c
.RI "int \fBRemotePort\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the TCP port number of the remote host or multicast group to which the underlying UdpClient should sent the logging event\&. \fP"
.ti -1c
.RI "int \fBLocalPort\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the TCP port number from which the underlying UdpClient will communicate\&. \fP"
.ti -1c
.RI "Encoding \fBEncoding\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets \fBEncoding\fP used to write the packets\&. \fP"
.ti -1c
.RI "UdpClient \fBClient\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the underlying UdpClient\&. \fP"
.ti -1c
.RI "IPEndPoint \fBRemoteEndPoint\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the cached remote endpoint to which the logging events should be sent\&. \fP"
.ti -1c
.RI "override bool \fBRequiresLayout\fP\fC [get]\fP"
.br
.RI "\fIThis appender requires a \fBLayout\fP to be set\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Sends logging events as connectionless UDP datagrams to a remote host or a multicast group using an UdpClient\&. 

UDP guarantees neither that messages arrive, nor that they arrive in the correct order\&. 
.PP
To view the logging results, a custom application can be developed that listens for logging events\&. 
.PP
When decoding events send via this appender remember to use the same encoding to decode the events as was used to send the events\&. See the \fBEncoding\fP property to specify the encoding to use\&. 
.PP
This example shows how to log receive logging events that are sent on IP address 244\&.0\&.0\&.1 and port 8080 to the console\&. The event is encoded in the packet as a unicode string and it is decoded as such\&. 
.PP
.nf
IPEndPoint remoteEndPoint = new IPEndPoint(IPAddress\&.Any, 0);
UdpClient udpClient;
byte[] buffer;
string loggingEvent;

try 
{
    udpClient = new UdpClient(8080);

    while(true) 
    {
        buffer = udpClient\&.Receive(ref remoteEndPoint);
        loggingEvent = System\&.Text\&.Encoding\&.Unicode\&.GetString(buffer);
        Console\&.WriteLine(loggingEvent);
    }
} 
catch(Exception e) 
{
    Console\&.WriteLine(e\&.ToString());
}

.fi
.PP
 
.PP
.nf
Dim remoteEndPoint as IPEndPoint
Dim udpClient as UdpClient
Dim buffer as Byte()
Dim loggingEvent as String

Try 
    remoteEndPoint = new IPEndPoint(IPAddress\&.Any, 0)
    udpClient = new UdpClient(8080)

    While True
        buffer = udpClient\&.Receive(ByRef remoteEndPoint)
        loggingEvent = System\&.Text\&.Encoding\&.Unicode\&.GetString(buffer)
        Console\&.WriteLine(loggingEvent)
    Wend
Catch e As Exception
    Console\&.WriteLine(e\&.ToString())
End Try

.fi
.PP
 
.PP
An example configuration section to log information using this appender to the IP 224\&.0\&.0\&.1 on port 8080: 
.PP
.PP
.nf
<appender name="UdpAppender" type="log4net\&.Appender\&.UdpAppender">
    <remoteAddress value="224\&.0\&.0\&.1" />
    <remotePort value="8080" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%-5level %logger [%ndc] - %message%newline" />
</appender>
.fi
.PP
 
.PP
<author>Gert Driesen</author> <author>Nicko Cadell</author> 
.PP
Definition at line 109 of file UdpAppender\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "log4net\&.Appender\&.UdpAppender\&.UdpAppender ()"

.PP
Initializes a new instance of the \fBUdpAppender\fP class\&. The default constructor initializes all fields to their default values\&. 
.PP
Definition at line 119 of file UdpAppender\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void log4net\&.Appender\&.UdpAppender\&.ActivateOptions ()\fC [virtual]\fP"

.PP
Initialize the appender based on the options set\&. This is part of the IOptionHandler delayed object activation scheme\&. The \fBActivateOptions\fP method must be called on this object after the configuration properties have been set\&. Until \fBActivateOptions\fP is called this object is in an undefined state and must not be used\&. 
.PP
If any of the configuration properties are modified then \fBActivateOptions\fP must be called again\&. 
.PP
The appender will be ignored if no \fBRemoteAddress\fP was specified or an invalid remote or local TCP port number was specified\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentNullException\fP The required property \fBRemoteAddress\fP was not specified\&.
.br
\fIArgumentOutOfRangeException\fP The TCP port number assigned to \fBLocalPort\fP or \fBRemotePort\fP is less than IPEndPoint\&.MinPort or greater than IPEndPoint\&.MaxPort\&.
.RE
.PP

.PP
Reimplemented from \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Definition at line 354 of file UdpAppender\&.cs\&.
.SS "override void log4net\&.Appender\&.UdpAppender\&.Append (\fBLoggingEvent\fPloggingEvent)\fC [protected]\fP, \fC [virtual]\fP"

.PP
This method is called by the \fBAppenderSkeleton\&.DoAppend(LoggingEvent)\fP method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIloggingEvent\fP The event to log\&.
.RE
.PP
.PP
Sends the event using an UDP datagram\&. 
.PP
Exceptions are passed to the \fBAppenderSkeleton\&.ErrorHandler\fP\&. 
.PP
Implements \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Definition at line 401 of file UdpAppender\&.cs\&.
.SS "virtual void log4net\&.Appender\&.UdpAppender\&.InitializeClientConnection ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Initializes the underlying UdpClient connection\&. The underlying UdpClient is initialized and binds to the port number from which you intend to communicate\&. 
.PP
Exceptions are passed to the \fBAppenderSkeleton\&.ErrorHandler\fP\&. 
.PP
Definition at line 471 of file UdpAppender\&.cs\&.
.SS "override void log4net\&.Appender\&.UdpAppender\&.OnClose ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Closes the UDP connection and releases all resources associated with this \fBUdpAppender\fP instance\&. Disables the underlying UdpClient and releases all managed and unmanaged resources associated with the \fBUdpAppender\fP\&. 
.PP
Reimplemented from \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Definition at line 444 of file UdpAppender\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "UdpClient log4net\&.Appender\&.UdpAppender\&.Client\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Gets or sets the underlying UdpClient\&. The underlying UdpClient\&. 
.PP
\fBUdpAppender\fP creates a UdpClient to send logging events over a network\&. Classes deriving from \fBUdpAppender\fP can use this property to get or set this UdpClient\&. Use the underlying UdpClient returned from \fBClient\fP if you require access beyond that which \fBUdpAppender\fP provides\&. 
.PP
Definition at line 306 of file UdpAppender\&.cs\&.
.SS "Encoding log4net\&.Appender\&.UdpAppender\&.Encoding\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets \fBEncoding\fP used to write the packets\&. The \fBEncoding\fP used to write the packets\&. 
.PP
The \fBEncoding\fP used to write the packets\&. 
.PP
Definition at line 283 of file UdpAppender\&.cs\&.
.SS "int log4net\&.Appender\&.UdpAppender\&.LocalPort\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the TCP port number from which the underlying UdpClient will communicate\&. An integer value in the range IPEndPoint\&.MinPort to IPEndPoint\&.MaxPort indicating the TCP port number from which the underlying UdpClient will communicate\&. 
.PP
The underlying UdpClient will bind to this port for sending messages\&. 
.PP
Setting the value to 0 (the default) will cause the udp client not to bind to a local port\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentOutOfRangeException\fP The value specified is less than IPEndPoint\&.MinPort or greater than IPEndPoint\&.MaxPort\&.
.RE
.PP

.PP
Definition at line 252 of file UdpAppender\&.cs\&.
.SS "IPAddress log4net\&.Appender\&.UdpAppender\&.RemoteAddress\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the IP address of the remote host or multicast group to which the underlying UdpClient should sent the logging event\&. The IP address of the remote host or multicast group to which the logging event will be sent\&. 
.PP
Multicast addresses are identified by IP class \fBD\fP addresses (in the range 224\&.0\&.0\&.0 to 239\&.255\&.255\&.255)\&. Multicast packets can pass across different networks through routers, so it is possible to use multicasts in an Internet scenario as long as your network provider supports multicasting\&. 
.PP
Hosts that want to receive particular multicast messages must register their interest by joining the multicast group\&. Multicast messages are not sent to networks where no host has joined the multicast group\&. Class \fBD\fP IP addresses are used for multicast groups, to differentiate them from normal host addresses, allowing nodes to easily detect if a message is of interest\&. 
.PP
Static multicast addresses that are needed globally are assigned by IANA\&. A few examples are listed in the table below: 
.PP
IP Address Description  224\&.0\&.0\&.1 Sends a message to all system on the subnet\&. 
.PP
224\&.0\&.0\&.2  
.PP
Sends a message to all routers on the subnet\&. 
.PP
224\&.0\&.0\&.12  
.PP
The DHCP server answers messages on the IP address 224\&.0\&.0\&.12, but only on a subnet\&. 
.PP
A complete list of actually reserved multicast addresses and their owners in the ranges defined by RFC 3171 can be found at the \fCIANA web site\fP\&. 
.PP
The address range 239\&.0\&.0\&.0 to 239\&.255\&.255\&.255 is reserved for administrative scope-relative addresses\&. These addresses can be reused with other local groups\&. Routers are typically configured with filters to prevent multicast traffic in this range from flowing outside of the local network\&. 
.PP
Definition at line 195 of file UdpAppender\&.cs\&.
.SS "IPEndPoint log4net\&.Appender\&.UdpAppender\&.RemoteEndPoint\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Gets or sets the cached remote endpoint to which the logging events should be sent\&. The cached remote endpoint to which the logging events will be sent\&. 
.PP
The \fBActivateOptions\fP method will initialize the remote endpoint with the values of the \fBRemoteAddress\fP and \fBRemotePort\fP properties\&. 
.PP
Definition at line 323 of file UdpAppender\&.cs\&.
.SS "int log4net\&.Appender\&.UdpAppender\&.RemotePort\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the TCP port number of the remote host or multicast group to which the underlying UdpClient should sent the logging event\&. An integer value in the range IPEndPoint\&.MinPort to IPEndPoint\&.MaxPort indicating the TCP port number of the remote host or multicast group to which the logging event will be sent\&. 
.PP
The underlying UdpClient will send messages to this TCP port number on the remote host or multicast group\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentOutOfRangeException\fP The value specified is less than IPEndPoint\&.MinPort or greater than IPEndPoint\&.MaxPort\&.
.RE
.PP

.PP
Definition at line 215 of file UdpAppender\&.cs\&.
.SS "override bool log4net\&.Appender\&.UdpAppender\&.RequiresLayout\fC [get]\fP, \fC [protected]\fP"

.PP
This appender requires a \fBLayout\fP to be set\&. \fCtrue\fP
.PP
This appender requires a \fBLayout\fP to be set\&. 
.PP
Definition at line 430 of file UdpAppender\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
