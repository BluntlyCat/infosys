.TH "Org.BouncyCastle.Utilities.Zlib.ZStream" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Org.BouncyCastle.Utilities.Zlib.ZStream \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits Stream\&.
.PP
Inherited by \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.Deflate\fP, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, Org\&.BouncyCastle\&.Utilities\&.Zlib\&.Inflate, \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZInputStream\fP, and \fBOrg\&.BouncyCastle\&.Utilities\&.Zlib\&.ZOutputStream\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBfree\fP ()"
.br
.ti -1c
.RI "void \fBfree\fP ()"
.br
.ti -1c
.RI "void \fBfree\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflate\fP (FlushType flush)"
.br
.ti -1c
.RI "int \fBinflateInit\fP ()"
.br
.ti -1c
.RI "int \fBinflateInit\fP (bool nowrap)"
.br
.ti -1c
.RI "int \fBinflateInit\fP (int w)"
.br
.ti -1c
.RI "int \fBinflateInit\fP (int w, bool nowrap)"
.br
.ti -1c
.RI "int \fBinflate\fP (int f)"
.br
.ti -1c
.RI "int \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "int \fBinflateSync\fP ()"
.br
.ti -1c
.RI "int \fBinflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "int \fBdeflateInit\fP (int level)"
.br
.ti -1c
.RI "int \fBdeflateInit\fP (int level, bool nowrap)"
.br
.ti -1c
.RI "int \fBdeflateInit\fP (int level, int bits)"
.br
.ti -1c
.RI "int \fBdeflateInit\fP (int level, int bits, bool nowrap)"
.br
.ti -1c
.RI "int \fBdeflate\fP (int flush)"
.br
.ti -1c
.RI "int \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "int \fBdeflateParams\fP (int level, int strategy)"
.br
.ti -1c
.RI "int \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.ti -1c
.RI "void \fBfree\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "long \fBadler\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP (bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP (int w)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateInit\fP (int w, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBinflate\fP (FlushType f)"
.br
.ti -1c
.RI "ZLibStatus \fBinflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBinflateSync\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateInit\fP (CompressionLevel level, int bits, bool nowrap)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateEnd\fP ()"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateParams\fP (CompressionLevel level, CompressionStrategy strategy)"
.br
.ti -1c
.RI "ZLibStatus \fBdeflateSetDictionary\fP (byte[] dictionary, int dictLength)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const int \fBMAX_WBITS\fP = 15"
.br
.ti -1c
.RI "const int \fBDEF_WBITS\fP = MAX_WBITS"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "byte[] \fBnext_in\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBnext_in_index\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBavail_in\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "long \fBtotal_in\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "byte[] \fBnext_out\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBnext_out_index\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBavail_out\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "long \fBtotal_out\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "String \fBmsg\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "long \fBAdler\fP\fC [get, set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 69 of file ZStream\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
