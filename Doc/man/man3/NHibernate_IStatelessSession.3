.TH "NHibernate.IStatelessSession" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.IStatelessSession \- 
.PP
A command-oriented API for performing bulk operations against a database\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IDisposable\&.
.PP
Inherited by \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBISessionImplementor\fP \fBGetSessionImplementation\fP ()"
.br
.RI "\fIGets the stateless session implementation\&. \fP"
.ti -1c
.RI "void \fBClose\fP ()"
.br
.RI "\fIClose the stateless session and release the ADO\&.NET connection\&.\fP"
.ti -1c
.RI "object \fBInsert\fP (object entity)"
.br
.RI "\fIInsert an entity\&.\fP"
.ti -1c
.RI "object \fBInsert\fP (string entityName, object entity)"
.br
.RI "\fIInsert a row\&.\fP"
.ti -1c
.RI "void \fBUpdate\fP (object entity)"
.br
.RI "\fIUpdate an entity\&.\fP"
.ti -1c
.RI "void \fBUpdate\fP (string entityName, object entity)"
.br
.RI "\fIUpdate an entity\&.\fP"
.ti -1c
.RI "void \fBDelete\fP (object entity)"
.br
.RI "\fIDelete an entity\&.\fP"
.ti -1c
.RI "void \fBDelete\fP (string entityName, object entity)"
.br
.RI "\fIDelete an entity\&.\fP"
.ti -1c
.RI "object \fBGet\fP (string entityName, object id)"
.br
.RI "\fIRetrieve a entity\&.\fP"
.ti -1c
.RI "T \fBGet< T >\fP (object id)"
.br
.RI "\fIRetrieve an entity\&. \fP"
.ti -1c
.RI "object \fBGet\fP (string entityName, object id, \fBLockMode\fP lockMode)"
.br
.RI "\fIRetrieve an entity, obtaining the specified lock mode\&. \fP"
.ti -1c
.RI "T \fBGet< T >\fP (object id, \fBLockMode\fP lockMode)"
.br
.RI "\fIRetrieve an entity, obtaining the specified lock mode\&. \fP"
.ti -1c
.RI "void \fBRefresh\fP (object entity)"
.br
.RI "\fIRefresh the entity instance state from the database\&. \fP"
.ti -1c
.RI "void \fBRefresh\fP (string entityName, object entity)"
.br
.RI "\fIRefresh the entity instance state from the database\&. \fP"
.ti -1c
.RI "void \fBRefresh\fP (object entity, \fBLockMode\fP lockMode)"
.br
.RI "\fIRefresh the entity instance state from the database\&. \fP"
.ti -1c
.RI "void \fBRefresh\fP (string entityName, object entity, \fBLockMode\fP lockMode)"
.br
.RI "\fIRefresh the entity instance state from the database\&. \fP"
.ti -1c
.RI "\fBIQuery\fP \fBCreateQuery\fP (string queryString)"
.br
.RI "\fICreate a new instance of \fCQuery\fP for the given HQL query string\&. \fP"
.ti -1c
.RI "\fBIQuery\fP \fBGetNamedQuery\fP (string queryName)"
.br
.RI "\fIObtain an instance of \fBIQuery \fP for a named query string defined in the mapping file\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria< T >\fP ()"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria< T >\fP (string alias)"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class, with the given alias\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria\fP (System\&.Type entityType)"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria\fP (System\&.Type entityType, string alias)"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class, with the given alias\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria\fP (string entityName)"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity name\&. \fP"
.ti -1c
.RI "\fBICriteria\fP \fBCreateCriteria\fP (string entityName, string alias)"
.br
.RI "\fICreate a new \fBICriteria \fP instance, for the given entity name, with the given alias\&. \fP"
.ti -1c
.RI "\fBIQueryOver\fP< T, T > \fBQueryOver< T >\fP ()"
.br
.RI "\fICreates a new \fC\fBIQueryOver\fP<T>\fP for the entity class\&. \fP"
.ti -1c
.RI "\fBIQueryOver\fP< T, T > \fBQueryOver< T >\fP (Expression< Func< T >> alias)"
.br
.RI "\fICreates a new \fC\fBIQueryOver\fP<T>\fP for the entity class\&. \fP"
.ti -1c
.RI "\fBISQLQuery\fP \fBCreateSQLQuery\fP (string queryString)"
.br
.RI "\fICreate a new instance of \fBISQLQuery \fP for the given SQL query string\&. Entities returned by the query are detached\&. \fP"
.ti -1c
.RI "\fBITransaction\fP \fBBeginTransaction\fP ()"
.br
.RI "\fIBegin a \fBNHibernate\fP transaction \fP"
.ti -1c
.RI "\fBITransaction\fP \fBBeginTransaction\fP (IsolationLevel isolationLevel)"
.br
.RI "\fIBegin a \fBNHibernate\fP transaction with the specified isolation level \fP"
.ti -1c
.RI "\fBIStatelessSession\fP \fBSetBatchSize\fP (int batchSize)"
.br
.RI "\fISets the batch size of the session \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "IDbConnection \fBConnection\fP\fC [get]\fP"
.br
.RI "\fIReturns the current ADO\&.NET connection associated with this instance\&. \fP"
.ti -1c
.RI "\fBITransaction\fP \fBTransaction\fP\fC [get]\fP"
.br
.RI "\fIGet the current \fBNHibernate\fP transaction\&.\fP"
.ti -1c
.RI "bool \fBIsOpen\fP\fC [get]\fP"
.br
.RI "\fIIs the \fC\fBIStatelessSession\fP\fP still open? \fP"
.ti -1c
.RI "bool \fBIsConnected\fP\fC [get]\fP"
.br
.RI "\fIIs the \fC\fBIStatelessSession\fP\fP currently connected? \fP"
.in -1c
.SH "Detailed Description"
.PP 
A command-oriented API for performing bulk operations against a database\&. 

A stateless session does not implement a first-level cache nor interact with any second-level cache, nor does it implement transactional write-behind or automatic dirty checking, nor do operations cascade to associated instances\&. Collections are ignored by a stateless session\&. Operations performed via a stateless session bypass \fBNHibernate\fP's event model and interceptors\&. Stateless sessions are vulnerable to data aliasing effects, due to the lack of a first-level cache\&. 
.PP
For certain kinds of transactions, a stateless session may perform slightly faster than a stateful session\&. 
.PP
Definition at line 24 of file IStatelessSession\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBITransaction\fP NHibernate\&.IStatelessSession\&.BeginTransaction ()"

.PP
Begin a \fBNHibernate\fP transaction 
.PP
\fBReturns:\fP
.RS 4
A \fBNHibernate\fP transaction
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBITransaction\fP NHibernate\&.IStatelessSession\&.BeginTransaction (IsolationLevelisolationLevel)"

.PP
Begin a \fBNHibernate\fP transaction with the specified isolation level 
.PP
\fBParameters:\fP
.RS 4
\fIisolationLevel\fP The isolation level
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBNHibernate\fP transaction
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Close ()"

.PP
Close the stateless session and release the ADO\&.NET connection\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBICriteria\fP NHibernate\&.IStatelessSession\&.CreateCriteria (System\&.TypeentityType)"

.PP
Create a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityType\fP A class, which is persistent, or has persistent subclasses
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBICriteria\fP NHibernate\&.IStatelessSession\&.CreateCriteria (System\&.TypeentityType, stringalias)"

.PP
Create a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class, with the given alias\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityType\fP A class, which is persistent, or has persistent subclasses
.br
\fIalias\fP The alias of the entity
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBICriteria\fP NHibernate\&.IStatelessSession\&.CreateCriteria (stringentityName)"

.PP
Create a new \fBICriteria \fP instance, for the given entity name\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The entity name\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBICriteria\fP NHibernate\&.IStatelessSession\&.CreateCriteria (stringentityName, stringalias)"

.PP
Create a new \fBICriteria \fP instance, for the given entity name, with the given alias\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The entity name\&.
.br
\fIalias\fP The alias of the entity
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBICriteria\fP \fBNHibernate\&.IStatelessSession\&.CreateCriteria\fP< T > ()"

.PP
Create a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A class, which is persistent, or has persistent subclasses
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIclass\fP
.SS "\fBICriteria\fP \fBNHibernate\&.IStatelessSession\&.CreateCriteria\fP< T > (stringalias)"

.PP
Create a new \fBICriteria \fP instance, for the given entity class, or a superclass of an entity class, with the given alias\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A class, which is persistent, or has persistent subclasses
.RE
.PP
\fBParameters:\fP
.RS 4
\fIalias\fP The alias of the entity
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBICriteria \fP\&.
.RE
.PP
.PP
Entities returned by the query are detached\&.
.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIclass\fP
.SS "\fBIQuery\fP NHibernate\&.IStatelessSession\&.CreateQuery (stringqueryString)"

.PP
Create a new instance of \fCQuery\fP for the given HQL query string\&. Entities returned by the query are detached\&.
.SS "\fBISQLQuery\fP NHibernate\&.IStatelessSession\&.CreateSQLQuery (stringqueryString)"

.PP
Create a new instance of \fBISQLQuery \fP for the given SQL query string\&. Entities returned by the query are detached\&. 
.PP
\fBParameters:\fP
.RS 4
\fIqueryString\fP A SQL query
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBISQLQuery \fP
.RE
.PP

.SS "void NHibernate\&.IStatelessSession\&.Delete (objectentity)"

.PP
Delete an entity\&.
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Delete (stringentityName, objectentity)"

.PP
Delete an entity\&.
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The name of the entity to be deleted
.br
\fIentity\fP A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "object NHibernate\&.IStatelessSession\&.Get (stringentityName, objectid)"

.PP
Retrieve a entity\&.
.PP
\fBReturns:\fP
.RS 4
A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "object NHibernate\&.IStatelessSession\&.Get (stringentityName, objectid, \fBLockMode\fPlockMode)"

.PP
Retrieve an entity, obtaining the specified lock mode\&. 
.PP
\fBReturns:\fP
.RS 4
A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "T \fBNHibernate\&.IStatelessSession\&.Get\fP< T > (objectid)"

.PP
Retrieve an entity\&. 
.PP
\fBReturns:\fP
.RS 4
A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "T \fBNHibernate\&.IStatelessSession\&.Get\fP< T > (objectid, \fBLockMode\fPlockMode)"

.PP
Retrieve an entity, obtaining the specified lock mode\&. 
.PP
\fBReturns:\fP
.RS 4
A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBIQuery\fP NHibernate\&.IStatelessSession\&.GetNamedQuery (stringqueryName)"

.PP
Obtain an instance of \fBIQuery \fP for a named query string defined in the mapping file\&. The query can be either in \fCHQL\fP or \fCSQL\fP format\&. Entities returned by the query are detached\&. 
.SS "\fBISessionImplementor\fP NHibernate\&.IStatelessSession\&.GetSessionImplementation ()"

.PP
Gets the stateless session implementation\&. This method is provided in order to get the \fB\fBNHibernate\fP\fP implementation of the session from wrapper implementations\&. Implementors of the 
.PP
\fBSee Also:\fP
.RS 4
\fBIStatelessSession \fP
.PP
.RE
.PP
interface should return the \fBNHibernate\fP implementation of this method\&. 
.PP
\fBReturns:\fP
.RS 4
An \fBNHibernate\fP implementation of the ISessionImplementor  interface 
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "object NHibernate\&.IStatelessSession\&.Insert (objectentity)"

.PP
Insert an entity\&.
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP A new transient instance
.RE
.PP
\fBReturns:\fP
.RS 4
The identifier of the instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "object NHibernate\&.IStatelessSession\&.Insert (stringentityName, objectentity)"

.PP
Insert a row\&.
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The name of the entity to be inserted
.br
\fIentity\fP A new transient instance
.RE
.PP
\fBReturns:\fP
.RS 4
The identifier of the instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBIQueryOver\fP<T,T> NHibernate\&.IStatelessSession\&.QueryOver< T > (Expression< Func< T >>alias)"

.PP
Creates a new \fC\fBIQueryOver\fP<T>\fP for the entity class\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP The entity class
.RE
.PP
\fBReturns:\fP
.RS 4
An \fBICriteria\fP<T> object
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIclass\fP
.SS "\fBIQueryOver\fP<T,T> NHibernate\&.IStatelessSession\&.QueryOver< T > ()"

.PP
Creates a new \fC\fBIQueryOver\fP<T>\fP for the entity class\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP The entity class
.RE
.PP
\fBReturns:\fP
.RS 4
An \fBICriteria\fP<T> object
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIclass\fP
.SS "void NHibernate\&.IStatelessSession\&.Refresh (objectentity)"

.PP
Refresh the entity instance state from the database\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity to be refreshed\&.
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Refresh (stringentityName, objectentity)"

.PP
Refresh the entity instance state from the database\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The name of the entity to be refreshed\&.
.br
\fIentity\fP The entity to be refreshed\&.
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Refresh (objectentity, \fBLockMode\fPlockMode)"

.PP
Refresh the entity instance state from the database\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity to be refreshed\&.
.br
\fIlockMode\fP The \fBLockMode\fP to be applied\&.
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Refresh (stringentityName, objectentity, \fBLockMode\fPlockMode)"

.PP
Refresh the entity instance state from the database\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The name of the entity to be refreshed\&.
.br
\fIentity\fP The entity to be refreshed\&.
.br
\fIlockMode\fP The \fBLockMode\fP to be applied\&.
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "\fBIStatelessSession\fP NHibernate\&.IStatelessSession\&.SetBatchSize (intbatchSize)"

.PP
Sets the batch size of the session 
.PP
\fBParameters:\fP
.RS 4
\fIbatchSize\fP The batch size\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The same instance of the session for methods chain\&.
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Update (objectentity)"

.PP
Update an entity\&.
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SS "void NHibernate\&.IStatelessSession\&.Update (stringentityName, objectentity)"

.PP
Update an entity\&.
.PP
\fBParameters:\fP
.RS 4
\fIentityName\fP The name of the entity to be updated
.br
\fIentity\fP A detached entity instance
.RE
.PP

.PP
Implemented in \fBNHibernate\&.Impl\&.StatelessSessionImpl\fP\&.
.SH "Property Documentation"
.PP 
.SS "IDbConnection NHibernate\&.IStatelessSession\&.Connection\fC [get]\fP"

.PP
Returns the current ADO\&.NET connection associated with this instance\&. If the session is using aggressive connection release (as in a CMT environment), it is the application's responsibility to close the connection returned by this call\&. Otherwise, the application should not close the connection\&. 
.PP
Definition at line 35 of file IStatelessSession\&.cs\&.
.SS "bool NHibernate\&.IStatelessSession\&.IsConnected\fC [get]\fP"

.PP
Is the \fC\fBIStatelessSession\fP\fP currently connected? 
.PP
Definition at line 48 of file IStatelessSession\&.cs\&.
.SS "bool NHibernate\&.IStatelessSession\&.IsOpen\fC [get]\fP"

.PP
Is the \fC\fBIStatelessSession\fP\fP still open? 
.PP
Definition at line 43 of file IStatelessSession\&.cs\&.
.SS "\fBITransaction\fP NHibernate\&.IStatelessSession\&.Transaction\fC [get]\fP"

.PP
Get the current \fBNHibernate\fP transaction\&.
.PP
Definition at line 38 of file IStatelessSession\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
