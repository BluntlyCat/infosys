.TH "NHibernate.Properties.FieldAccessor.FieldSetter" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Properties.FieldAccessor.FieldSetter \- 
.PP
An \fBIGetter\fP that uses a Field instead of the Property \fCset\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Properties\&.ISetter\fP, and \fBNHibernate\&.Properties\&.IOptimizableSetter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFieldSetter\fP (FieldInfo field, System\&.Type clazz, string name)"
.br
.RI "\fIInitializes a new instance of \fBFieldSetter\fP\&. \fP"
.ti -1c
.RI "void \fBSet\fP (object target, object value)"
.br
.RI "\fISets the value of the Field on the object\&. \fP"
.ti -1c
.RI "void \fBEmit\fP (ILGenerator il)"
.br
.RI "\fIEmit IL to set the property of an object to the value\&. The object is loaded onto the stack first, then the value, then this method is called\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBPropertyName\fP\fC [get]\fP"
.br
.RI "\fIGets the name of the Property\&. \fP"
.ti -1c
.RI "MethodInfo \fBMethod\fP\fC [get]\fP"
.br
.RI "\fIGets the PropertyInfo for the Property\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
An \fBIGetter\fP that uses a Field instead of the Property \fCset\fP\&. 


.PP
Definition at line 245 of file FieldAccessor\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NHibernate\&.Properties\&.FieldAccessor\&.FieldSetter\&.FieldSetter (FieldInfofield, System\&.Typeclazz, stringname)"

.PP
Initializes a new instance of \fBFieldSetter\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIclazz\fP The System\&.Type that contains the Field to use for the Property \fCset\fP\&.
.br
\fIfield\fP The FieldInfo for reflection\&.
.br
\fIname\fP The name of the Field\&.
.RE
.PP

.PP
Definition at line 257 of file FieldAccessor\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void NHibernate\&.Properties\&.FieldAccessor\&.FieldSetter\&.Emit (ILGeneratoril)"

.PP
Emit IL to set the property of an object to the value\&. The object is loaded onto the stack first, then the value, then this method is called\&. 
.PP
Implements \fBNHibernate\&.Properties\&.IOptimizableSetter\fP\&.
.PP
Definition at line 325 of file FieldAccessor\&.cs\&.
.SS "void NHibernate\&.Properties\&.FieldAccessor\&.FieldSetter\&.Set (objecttarget, objectvalue)"

.PP
Sets the value of the Field on the object\&. 
.PP
\fBParameters:\fP
.RS 4
\fItarget\fP The object to set the Field value in\&.
.br
\fIvalue\fP The value to set the Field to\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBPropertyAccessException\fP\fP Thrown when there is a problem setting the value in the target\&. 
.RE
.PP

.PP
Implements \fBNHibernate\&.Properties\&.ISetter\fP\&.
.PP
Definition at line 274 of file FieldAccessor\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "MethodInfo NHibernate\&.Properties\&.FieldAccessor\&.FieldSetter\&.Method\fC [get]\fP"

.PP
Gets the PropertyInfo for the Property\&. since this is a Field - not a Property\&.
.PP
Definition at line 319 of file FieldAccessor\&.cs\&.
.SS "string NHibernate\&.Properties\&.FieldAccessor\&.FieldSetter\&.PropertyName\fC [get]\fP"

.PP
Gets the name of the Property\&. since this is a Field - not a Property\&.
.PP
Definition at line 310 of file FieldAccessor\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
