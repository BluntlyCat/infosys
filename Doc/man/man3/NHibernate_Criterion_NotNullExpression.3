.TH "NHibernate.Criterion.NotNullExpression" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Criterion.NotNullExpression \- 
.PP
An \fBICriterion\fP that represents 'not null' constraint\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Criterion\&.AbstractCriterion\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNotNullExpression\fP (\fBIProjection\fP projection)"
.br
.RI "\fIInitializes a new instance of the \fBNotNullExpression\fP class\&. \fP"
.ti -1c
.RI "\fBNotNullExpression\fP (string propertyName)"
.br
.RI "\fIInitialize a new instance of the \fBNotNullExpression\fP class for a named \fBProperty\fP that should not be null\&. \fP"
.ti -1c
.RI "override \fBSqlString\fP \fBToSqlString\fP (\fBICriteria\fP criteria, \fBICriteriaQuery\fP criteriaQuery, IDictionary< string, \fBIFilter\fP > enabledFilters)"
.br
.RI "\fIRender a SqlString for the expression\&. \fP"
.ti -1c
.RI "override \fBTypedValue\fP[] \fBGetTypedValues\fP (\fBICriteria\fP criteria, \fBICriteriaQuery\fP criteriaQuery)"
.br
.RI "\fIReturn typed values for all parameters in the rendered SQL fragment \fP"
.ti -1c
.RI "override \fBIProjection\fP[] \fBGetProjections\fP ()"
.br
.RI "\fIReturn all projections used in this criterion \fP"
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "\fIGets a string representation of the \fBAbstractCriterion\fP\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An \fBICriterion\fP that represents 'not null' constraint\&. 


.PP
Definition at line 12 of file NotNullExpression\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NHibernate\&.Criterion\&.NotNullExpression\&.NotNullExpression (\fBIProjection\fPprojection)"

.PP
Initializes a new instance of the \fBNotNullExpression\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprojection\fP The projection\&.
.RE
.PP

.PP
Definition at line 21 of file NotNullExpression\&.cs\&.
.SS "NHibernate\&.Criterion\&.NotNullExpression\&.NotNullExpression (stringpropertyName)"

.PP
Initialize a new instance of the \fBNotNullExpression\fP class for a named \fBProperty\fP that should not be null\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpropertyName\fP The name of the \fBProperty\fP in the class\&.
.RE
.PP

.PP
Definition at line 33 of file NotNullExpression\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override \fBIProjection\fP [] NHibernate\&.Criterion\&.NotNullExpression\&.GetProjections ()\fC [virtual]\fP"

.PP
Return all projections used in this criterion 
.PP
\fBReturns:\fP
.RS 4
An array of \fBIProjection\fP used by the \fBExpression\fP\&.
.RE
.PP

.PP
Implements \fBNHibernate\&.Criterion\&.AbstractCriterion\fP\&.
.PP
Definition at line 74 of file NotNullExpression\&.cs\&.
.SS "override \fBTypedValue\fP [] NHibernate\&.Criterion\&.NotNullExpression\&.GetTypedValues (\fBICriteria\fPcriteria, \fBICriteriaQuery\fPcriteriaQuery)\fC [virtual]\fP"

.PP
Return typed values for all parameters in the rendered SQL fragment 
.PP
\fBReturns:\fP
.RS 4
An array of TypedValues for the \fBExpression\fP\&.
.RE
.PP

.PP
Implements \fBNHibernate\&.Criterion\&.AbstractCriterion\fP\&.
.PP
Definition at line 69 of file NotNullExpression\&.cs\&.
.SS "override \fBSqlString\fP NHibernate\&.Criterion\&.NotNullExpression\&.ToSqlString (\fBICriteria\fPcriteria, \fBICriteriaQuery\fPcriteriaQuery, IDictionary< string, \fBIFilter\fP >enabledFilters)\fC [virtual]\fP"

.PP
Render a SqlString for the expression\&. 
.PP
\fBReturns:\fP
.RS 4
A SqlString that contains a valid Sql fragment\&.
.RE
.PP

.PP
Implements \fBNHibernate\&.Criterion\&.AbstractCriterion\fP\&.
.PP
Definition at line 38 of file NotNullExpression\&.cs\&.
.SS "override string NHibernate\&.Criterion\&.NotNullExpression\&.ToString ()\fC [virtual]\fP"

.PP
Gets a string representation of the \fBAbstractCriterion\fP\&. 
.PP
\fBReturns:\fP
.RS 4
A String that shows the contents of the \fBAbstractCriterion\fP\&. 
.RE
.PP
.PP
This is not a well formed Sql fragment\&. It is useful for logging what the \fBAbstractCriterion\fP looks like\&. 
.PP
Implements \fBNHibernate\&.Criterion\&.AbstractCriterion\fP\&.
.PP
Definition at line 83 of file NotNullExpression\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
