.TH "NHibernate.Test.DialectTest.DialectFixture" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Test.DialectTest.DialectFixture \- 
.PP
Summary description for \fBDialectFixture\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBNHibernate\&.Test\&.DialectTest\&.MsSqlDialectFixture\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBSetUp\fP ()"
.br
.ti -1c
.RI "void \fBIsQuotedTrue\fP ()"
.br
.ti -1c
.RI "void \fBIsQuotedFalse\fP ()"
.br
.RI "\fI\fBTest\fP that only the first char identifies that the Identifier is Quoted - regardless of what chars are contained in it\&. \fP"
.ti -1c
.RI "void \fBWhenNullOrEmptyIsQuotedFalse\fP ()"
.br
.ti -1c
.RI "void \fBQuoteTableNameNeeded\fP ()"
.br
.ti -1c
.RI "void \fBQuoteTableNameNotNeeded\fP ()"
.br
.ti -1c
.RI "void \fBQuoteTableNameAlreadyQuoted\fP ()"
.br
.ti -1c
.RI "void \fBUnQuoteAlreadyQuoted\fP ()"
.br
.RI "\fI\fBTest\fP that it does not matter if the name passed in has been quoted or not already\&. The UnQuote should take care of it and return the same result\&. \fP"
.ti -1c
.RI "void \fBUnQuoteNeedingQuote\fP ()"
.br
.ti -1c
.RI "void \fBUnQuoteArray\fP ()"
.br
.ti -1c
.RI "void \fBGetDialectUntrimmedName\fP ()"
.br
.ti -1c
.RI "void \fBCurrentTimestampSelection\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBDialect\&.Dialect\fP \fBd\fP = null"
.br
.ti -1c
.RI "string[] \fBtableWithNothingToBeQuoted\fP"
.br
.ti -1c
.RI "string[] \fBtableAlreadyQuoted\fP"
.br
.ti -1c
.RI "string[] \fBtableThatNeedsToBeQuoted\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Summary description for \fBDialectFixture\fP\&. 


.PP
Definition at line 19 of file DialectFixture\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void NHibernate\&.Test\&.DialectTest\&.DialectFixture\&.IsQuotedFalse ()"

.PP
\fBTest\fP that only the first char identifies that the Identifier is Quoted - regardless of what chars are contained in it\&. 
.PP
Definition at line 60 of file DialectFixture\&.cs\&.
.SS "void NHibernate\&.Test\&.DialectTest\&.DialectFixture\&.UnQuoteAlreadyQuoted ()"

.PP
\fBTest\fP that it does not matter if the name passed in has been quoted or not already\&. The UnQuote should take care of it and return the same result\&. 
.PP
Definition at line 102 of file DialectFixture\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
