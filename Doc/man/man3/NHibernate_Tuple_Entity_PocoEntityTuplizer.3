.TH "NHibernate.Tuple.Entity.PocoEntityTuplizer" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Tuple.Entity.PocoEntityTuplizer \- 
.PP
An \fBIEntityTuplizer\fP specific to the POCO entity mode\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Inherited by \fBNHibernate\&.Test\&.DynamicEntity\&.Tuplizer\&.MyEntityTuplizer\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPocoEntityTuplizer\fP (\fBEntityMetamodel\fP entityMetamodel, \fBPersistentClass\fP mappedEntity)"
.br
.ti -1c
.RI "override void \fBAfterInitialize\fP (object entity, bool lazyPropertiesAreUnfetched, \fBISessionImplementor\fP session)"
.br
.RI "\fICalled just after the entities properties have been initialized\&. \fP"
.ti -1c
.RI "override object[] \fBGetPropertyValues\fP (object entity)"
.br
.RI "\fIExtract the current values contained on the given entity\&. \fP"
.ti -1c
.RI "override object[] \fBGetPropertyValuesToInsert\fP (object entity, System\&.Collections\&.IDictionary mergeMap, \fBISessionImplementor\fP session)"
.br
.ti -1c
.RI "override bool \fBHasUninitializedLazyProperties\fP (object entity)"
.br
.RI "\fIDoes the given entity instance have any currently uninitialized lazy properties? \fP"
.ti -1c
.RI "override void \fBSetPropertyValues\fP (object entity, object[] values)"
.br
.RI "\fIInject the given values into the given entity\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBSetReflectionOptimizer\fP ()"
.br
.ti -1c
.RI "override \fBIGetter\fP \fBBuildPropertyGetter\fP (\fBMapping\&.Property\fP mappedProperty, \fBPersistentClass\fP mappedEntity)"
.br
.RI "\fIBuild an appropriate Getter for the given property\&. \fP"
.ti -1c
.RI "override \fBISetter\fP \fBBuildPropertySetter\fP (\fBMapping\&.Property\fP mappedProperty, \fBPersistentClass\fP mappedEntity)"
.br
.RI "\fIBuild an appropriate Setter for the given property\&. \fP"
.ti -1c
.RI "override \fBIInstantiator\fP \fBBuildInstantiator\fP (\fBPersistentClass\fP persistentClass)"
.br
.RI "\fIBuild an appropriate Instantiator for the given mapped entity\&. \fP"
.ti -1c
.RI "override \fBIProxyFactory\fP \fBBuildProxyFactory\fP (\fBPersistentClass\fP persistentClass, \fBIGetter\fP idGetter, \fBISetter\fP idSetter)"
.br
.RI "\fIBuild an appropriate ProxyFactory for the given mapped entity\&. \fP"
.ti -1c
.RI "virtual \fBIProxyFactory\fP \fBBuildProxyFactoryInternal\fP (\fBPersistentClass\fP @class, \fBIGetter\fP getter, \fBISetter\fP setter)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override System\&.Type \fBConcreteProxyClass\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBIsInstrumented\fP\fC [get]\fP"
.br
.ti -1c
.RI "override System\&.Type \fBMappedClass\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBIsLifecycleImplementor\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBIsValidatableImplementor\fP\fC [get]\fP"
.br
.ti -1c
.RI "override \fBEntityMode\fP \fBEntityMode\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An \fBIEntityTuplizer\fP specific to the POCO entity mode\&. 


.PP
Definition at line 20 of file PocoEntityTuplizer\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.AfterInitialize (objectentity, boollazyPropertiesAreUnfetched, \fBISessionImplementor\fPsession)\fC [virtual]\fP"

.PP
Called just after the entities properties have been initialized\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity being initialized\&. 
.br
\fIlazyPropertiesAreUnfetched\fP Are defined lazy properties currently unfecthed 
.br
\fIsession\fP The session initializing this entity\&. 
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 227 of file PocoEntityTuplizer\&.cs\&.
.SS "override \fBIInstantiator\fP NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.BuildInstantiator (\fBPersistentClass\fPmappingInfo)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Build an appropriate Instantiator for the given mapped entity\&. 
.PP
\fBParameters:\fP
.RS 4
\fImappingInfo\fP The mapping information regarding the mapped entity\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
An appropriate Instantiator instance\&. 
.RE
.PP

.PP
Implements \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Reimplemented in \fBNHibernate\&.Test\&.DynamicEntity\&.Tuplizer\&.MyEntityTuplizer\fP\&.
.PP
Definition at line 104 of file PocoEntityTuplizer\&.cs\&.
.SS "override \fBIGetter\fP NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.BuildPropertyGetter (\fBMapping\&.Property\fPmappedProperty, \fBPersistentClass\fPmappedEntity)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Build an appropriate Getter for the given property\&. 
.PP
\fBParameters:\fP
.RS 4
\fImappedProperty\fP The property to be accessed via the built Getter\&. 
.br
\fImappedEntity\fP The entity information regarding the mapped entity owning this property\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
An appropriate Getter instance\&. 
.RE
.PP

.PP
Implements \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 94 of file PocoEntityTuplizer\&.cs\&.
.SS "override \fBISetter\fP NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.BuildPropertySetter (\fBMapping\&.Property\fPmappedProperty, \fBPersistentClass\fPmappedEntity)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Build an appropriate Setter for the given property\&. 
.PP
\fBParameters:\fP
.RS 4
\fImappedProperty\fP The property to be accessed via the built Setter\&. 
.br
\fImappedEntity\fP The entity information regarding the mapped entity owning this property\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
An appropriate Setter instance\&. 
.RE
.PP

.PP
Implements \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 99 of file PocoEntityTuplizer\&.cs\&.
.SS "override \fBIProxyFactory\fP NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.BuildProxyFactory (\fBPersistentClass\fPmappingInfo, \fBIGetter\fPidGetter, \fBISetter\fPidSetter)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Build an appropriate ProxyFactory for the given mapped entity\&. 
.PP
\fBParameters:\fP
.RS 4
\fImappingInfo\fP The mapping information regarding the mapped entity\&. 
.br
\fIidGetter\fP The constructed Getter relating to the entity's id property\&. 
.br
\fIidSetter\fP The constructed Setter relating to the entity's id property\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
An appropriate ProxyFactory instance\&. 
.RE
.PP

.PP
Implements \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Reimplemented in \fBNHibernate\&.Test\&.DynamicEntity\&.Tuplizer\&.MyEntityTuplizer\fP\&.
.PP
Definition at line 118 of file PocoEntityTuplizer\&.cs\&.
.SS "override object [] NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.GetPropertyValues (objectentity)\fC [virtual]\fP"

.PP
Extract the current values contained on the given entity\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity from which to extract values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The current property values\&. 
.RE
.PP
<throws> \fBHibernateException\fP </throws> 
.PP
Reimplemented from \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 238 of file PocoEntityTuplizer\&.cs\&.
.SS "override bool NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.HasUninitializedLazyProperties (objectentity)\fC [virtual]\fP"

.PP
Does the given entity instance have any currently uninitialized lazy properties? 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity to be check for uninitialized lazy properties\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if uninitialized lazy properties were found; false otherwise\&. 
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 267 of file PocoEntityTuplizer\&.cs\&.
.SS "override void NHibernate\&.Tuple\&.Entity\&.PocoEntityTuplizer\&.SetPropertyValues (objectentity, object[]values)\fC [virtual]\fP"

.PP
Inject the given values into the given entity\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP The entity\&. 
.br
\fIvalues\fP The values to be injected\&. 
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Tuple\&.Entity\&.AbstractEntityTuplizer\fP\&.
.PP
Definition at line 285 of file PocoEntityTuplizer\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
