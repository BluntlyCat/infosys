.TH "NHibernate.Collection.Generic" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Collection.Generic \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "package \fBSetHelpers\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPersistentGenericBag< T >\fP"
.br
.RI "\fIAn unordered, unkeyed collection that can contain the same element multiple times\&. The \&.NET collections API, has no \fCBag\fP\&. Most developers seem to use IList{T} to represent bag semantics, so \fBNHibernate\fP follows this practice\&. \fP"
.ti -1c
.RI "class \fBPersistentIdentifierBag< T >\fP"
.br
.RI "\fIImplements 'bag' semantics more efficiently than \fBPersistentBag\fP by adding a synthetic identifier column to the table\&. \fP"
.ti -1c
.RI "class \fBPersistentGenericList< T >\fP"
.br
.RI "\fIA persistent wrapper for an IList{T} \fP"
.ti -1c
.RI "class \fBPersistentGenericMap< TKey, TValue >\fP"
.br
.RI "\fIA persistent wrapper for a IDictionary{TKey,TValue}\&. Underlying collection is a Dictionary{TKey,TValue} \fP"
.ti -1c
.RI "class \fBPersistentGenericSet< T >\fP"
.br
.RI "\fIA persistent wrapper for an ISet{T}\&. \fP"
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
