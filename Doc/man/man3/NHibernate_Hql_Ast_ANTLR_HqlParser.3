.TH "NHibernate.Hql.Ast.ANTLR.HqlParser" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Hql.Ast.ANTLR.HqlParser \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits Parser\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBadditiveExpression_return\fP"
.br
.ti -1c
.RI "class \fBaggregate_return\fP"
.br
.ti -1c
.RI "class \fBaggregateDistinctAll_return\fP"
.br
.ti -1c
.RI "class \fBalias_return\fP"
.br
.ti -1c
.RI "class \fBaliasedExpression_return\fP"
.br
.ti -1c
.RI "class \fBaltWhenClause_return\fP"
.br
.ti -1c
.RI "class \fBasAlias_return\fP"
.br
.ti -1c
.RI "class \fBascendingOrDescending_return\fP"
.br
.ti -1c
.RI "class \fBassignment_return\fP"
.br
.ti -1c
.RI "class \fBatom_return\fP"
.br
.ti -1c
.RI "class \fBbetweenList_return\fP"
.br
.ti -1c
.RI "class \fBbitwiseAndExpression_return\fP"
.br
.ti -1c
.RI "class \fBbitwiseNotExpression_return\fP"
.br
.ti -1c
.RI "class \fBbitwiseOrExpression_return\fP"
.br
.ti -1c
.RI "class \fBbitwiseXOrExpression_return\fP"
.br
.ti -1c
.RI "class \fBcaseExpression_return\fP"
.br
.ti -1c
.RI "class \fBcollectionExpr_return\fP"
.br
.ti -1c
.RI "class \fBcompoundExpr_return\fP"
.br
.ti -1c
.RI "class \fBconcatenation_return\fP"
.br
.ti -1c
.RI "class \fBconstant_return\fP"
.br
.ti -1c
.RI "class \fBdeleteStatement_return\fP"
.br
.ti -1c
.RI "class \fBelseClause_return\fP"
.br
.ti -1c
.RI "class \fBequalityExpression_return\fP"
.br
.ti -1c
.RI "class \fBexpression_return\fP"
.br
.ti -1c
.RI "class \fBexpressionOrVector_return\fP"
.br
.ti -1c
.RI "class \fBexprList_return\fP"
.br
.ti -1c
.RI "class \fBfromClassOrOuterQueryPath_return\fP"
.br
.ti -1c
.RI "class \fBfromClause_return\fP"
.br
.ti -1c
.RI "class \fBfromJoin_return\fP"
.br
.ti -1c
.RI "class \fBfromRange_return\fP"
.br
.ti -1c
.RI "class \fBgroupByClause_return\fP"
.br
.ti -1c
.RI "class \fBhavingClause_return\fP"
.br
.ti -1c
.RI "class \fBidentifier_return\fP"
.br
.ti -1c
.RI "class \fBidentPrimary_return\fP"
.br
.ti -1c
.RI "class \fBinClassDeclaration_return\fP"
.br
.ti -1c
.RI "class \fBinCollectionDeclaration_return\fP"
.br
.ti -1c
.RI "class \fBinCollectionElementsDeclaration_return\fP"
.br
.ti -1c
.RI "class \fBinList_return\fP"
.br
.ti -1c
.RI "class \fBinnerSubQuery_return\fP"
.br
.ti -1c
.RI "class \fBinsertablePropertySpec_return\fP"
.br
.ti -1c
.RI "class \fBinsertStatement_return\fP"
.br
.ti -1c
.RI "class \fBintoClause_return\fP"
.br
.ti -1c
.RI "class \fBlikeEscape_return\fP"
.br
.ti -1c
.RI "class \fBlogicalAndExpression_return\fP"
.br
.ti -1c
.RI "class \fBlogicalExpression_return\fP"
.br
.ti -1c
.RI "class \fBlogicalOrExpression_return\fP"
.br
.ti -1c
.RI "class \fBmultiplyExpression_return\fP"
.br
.ti -1c
.RI "class \fBnegatedExpression_return\fP"
.br
.ti -1c
.RI "class \fBnewExpression_return\fP"
.br
.ti -1c
.RI "class \fBnewValue_return\fP"
.br
.ti -1c
.RI "class \fBoptionalFromTokenFromClause2_return\fP"
.br
.ti -1c
.RI "class \fBoptionalFromTokenFromClause_return\fP"
.br
.ti -1c
.RI "class \fBorderByClause_return\fP"
.br
.ti -1c
.RI "class \fBorderElement_return\fP"
.br
.ti -1c
.RI "class \fBparameter_return\fP"
.br
.ti -1c
.RI "class \fBpath_return\fP"
.br
.ti -1c
.RI "class \fBprimaryExpression_return\fP"
.br
.ti -1c
.RI "class \fBpropertyFetch_return\fP"
.br
.ti -1c
.RI "class \fBquantifiedExpression_return\fP"
.br
.ti -1c
.RI "class \fBqueryRule_return\fP"
.br
.ti -1c
.RI "class \fBrelationalExpression_return\fP"
.br
.ti -1c
.RI "class \fBselectClause_return\fP"
.br
.ti -1c
.RI "class \fBselectedPropertiesList_return\fP"
.br
.ti -1c
.RI "class \fBselectFrom_return\fP"
.br
.ti -1c
.RI "class \fBselectObject_return\fP"
.br
.ti -1c
.RI "class \fBselectStatement_return\fP"
.br
.ti -1c
.RI "class \fBsetClause_return\fP"
.br
.ti -1c
.RI "class \fBskipClause_return\fP"
.br
.ti -1c
.RI "class \fBstateField_return\fP"
.br
.ti -1c
.RI "class \fBstatement_return\fP"
.br
.ti -1c
.RI "class \fBsubQuery_return\fP"
.br
.ti -1c
.RI "class \fBtakeClause_return\fP"
.br
.ti -1c
.RI "class \fBunaryExpression_return\fP"
.br
.ti -1c
.RI "class \fBupdateStatement_return\fP"
.br
.ti -1c
.RI "class \fBvectorExpr_return\fP"
.br
.ti -1c
.RI "class \fBwhenClause_return\fP"
.br
.ti -1c
.RI "class \fBwhereClause_return\fP"
.br
.ti -1c
.RI "class \fBwithClause_return\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBHqlParser\fP (ITokenStream input)"
.br
.ti -1c
.RI "\fBHqlParser\fP (ITokenStream input, RecognizerSharedState state)"
.br
.ti -1c
.RI "\fBHqlParser\&.statement_return\fP \fBstatement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.updateStatement_return\fP \fBupdateStatement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.setClause_return\fP \fBsetClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.assignment_return\fP \fBassignment\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.stateField_return\fP \fBstateField\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.newValue_return\fP \fBnewValue\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.deleteStatement_return\fP \fBdeleteStatement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.optionalFromTokenFromClause_return\fP \fBoptionalFromTokenFromClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.optionalFromTokenFromClause2_return\fP \fBoptionalFromTokenFromClause2\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.selectStatement_return\fP \fBselectStatement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.insertStatement_return\fP \fBinsertStatement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.intoClause_return\fP \fBintoClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.insertablePropertySpec_return\fP \fBinsertablePropertySpec\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.queryRule_return\fP \fBqueryRule\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.selectFrom_return\fP \fBselectFrom\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.selectClause_return\fP \fBselectClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.newExpression_return\fP \fBnewExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.selectObject_return\fP \fBselectObject\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.fromClause_return\fP \fBfromClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.fromJoin_return\fP \fBfromJoin\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.withClause_return\fP \fBwithClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.fromRange_return\fP \fBfromRange\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.fromClassOrOuterQueryPath_return\fP \fBfromClassOrOuterQueryPath\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.inClassDeclaration_return\fP \fBinClassDeclaration\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.inCollectionDeclaration_return\fP \fBinCollectionDeclaration\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.inCollectionElementsDeclaration_return\fP \fBinCollectionElementsDeclaration\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.asAlias_return\fP \fBasAlias\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.alias_return\fP \fBalias\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.propertyFetch_return\fP \fBpropertyFetch\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.groupByClause_return\fP \fBgroupByClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.orderByClause_return\fP \fBorderByClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.skipClause_return\fP \fBskipClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.takeClause_return\fP \fBtakeClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.parameter_return\fP \fBparameter\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.orderElement_return\fP \fBorderElement\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.ascendingOrDescending_return\fP \fBascendingOrDescending\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.havingClause_return\fP \fBhavingClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.whereClause_return\fP \fBwhereClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.selectedPropertiesList_return\fP \fBselectedPropertiesList\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.aliasedExpression_return\fP \fBaliasedExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.logicalExpression_return\fP \fBlogicalExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.expression_return\fP \fBexpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.logicalOrExpression_return\fP \fBlogicalOrExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.logicalAndExpression_return\fP \fBlogicalAndExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.negatedExpression_return\fP \fBnegatedExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.equalityExpression_return\fP \fBequalityExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.relationalExpression_return\fP \fBrelationalExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.likeEscape_return\fP \fBlikeEscape\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.inList_return\fP \fBinList\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.betweenList_return\fP \fBbetweenList\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.concatenation_return\fP \fBconcatenation\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.bitwiseNotExpression_return\fP \fBbitwiseNotExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.bitwiseOrExpression_return\fP \fBbitwiseOrExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.bitwiseXOrExpression_return\fP \fBbitwiseXOrExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.bitwiseAndExpression_return\fP \fBbitwiseAndExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.additiveExpression_return\fP \fBadditiveExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.multiplyExpression_return\fP \fBmultiplyExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.unaryExpression_return\fP \fBunaryExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.caseExpression_return\fP \fBcaseExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.whenClause_return\fP \fBwhenClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.altWhenClause_return\fP \fBaltWhenClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.elseClause_return\fP \fBelseClause\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.quantifiedExpression_return\fP \fBquantifiedExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.atom_return\fP \fBatom\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.primaryExpression_return\fP \fBprimaryExpression\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.expressionOrVector_return\fP \fBexpressionOrVector\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.vectorExpr_return\fP \fBvectorExpr\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.identPrimary_return\fP \fBidentPrimary\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.aggregate_return\fP \fBaggregate\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.aggregateDistinctAll_return\fP \fBaggregateDistinctAll\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.collectionExpr_return\fP \fBcollectionExpr\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.compoundExpr_return\fP \fBcompoundExpr\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.exprList_return\fP \fBexprList\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.subQuery_return\fP \fBsubQuery\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.innerSubQuery_return\fP \fBinnerSubQuery\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.constant_return\fP \fBconstant\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.path_return\fP \fBpath\fP ()"
.br
.ti -1c
.RI "\fBHqlParser\&.identifier_return\fP \fBidentifier\fP ()"
.br
.ti -1c
.RI "override void \fBReportError\fP (RecognitionException e)"
.br
.ti -1c
.RI "void \fBWeakKeywords\fP ()"
.br
.ti -1c
.RI "void \fBWeakKeywords2\fP ()"
.br
.ti -1c
.RI "\fBIASTNode\fP \fBNegateNode\fP (\fBIASTNode\fP node)"
.br
.ti -1c
.RI "\fBIASTNode\fP \fBProcessEqualityExpression\fP (object o)"
.br
.ti -1c
.RI "void \fBHandleDotIdent\fP ()"
.br
.ti -1c
.RI "\fBIASTNode\fP \fBProcessMemberOf\fP (IToken n, \fBIASTNode\fP p, \fBIASTNode\fP root)"
.br
.ti -1c
.RI "\fBIASTNode\fP \fBHandleIdentifierError\fP (IToken token, RecognitionException ex)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBEXPONENT\fP = 130"
.br
.ti -1c
.RI "const int \fBLT\fP = 109"
.br
.ti -1c
.RI "const int \fBFLOAT_SUFFIX\fP = 131"
.br
.ti -1c
.RI "const int \fBSTAR\fP = 120"
.br
.ti -1c
.RI "const int \fBLITERAL_by\fP = 56"
.br
.ti -1c
.RI "const int \fBCASE\fP = 57"
.br
.ti -1c
.RI "const int \fBNEW\fP = 37"
.br
.ti -1c
.RI "const int \fBFILTER_ENTITY\fP = 76"
.br
.ti -1c
.RI "const int \fBPARAM\fP = 106"
.br
.ti -1c
.RI "const int \fBCOUNT\fP = 12"
.br
.ti -1c
.RI "const int \fBNOT\fP = 38"
.br
.ti -1c
.RI "const int \fBEOF\fP = -1"
.br
.ti -1c
.RI "const int \fBUNARY_PLUS\fP = 91"
.br
.ti -1c
.RI "const int \fBQUOTED_String\fP = 124"
.br
.ti -1c
.RI "const int \fBESCqs\fP = 128"
.br
.ti -1c
.RI "const int \fBWEIRD_IDENT\fP = 93"
.br
.ti -1c
.RI "const int \fBOPEN_BRACKET\fP = 122"
.br
.ti -1c
.RI "const int \fBFULL\fP = 23"
.br
.ti -1c
.RI "const int \fBORDER_ELEMENT\fP = 85"
.br
.ti -1c
.RI "const int \fBINSERT\fP = 29"
.br
.ti -1c
.RI "const int \fBESCAPE\fP = 18"
.br
.ti -1c
.RI "const int \fBIS_NULL\fP = 80"
.br
.ti -1c
.RI "const int \fBBOTH\fP = 64"
.br
.ti -1c
.RI "const int \fBNUM_DECIMAL\fP = 97"
.br
.ti -1c
.RI "const int \fBEQ\fP = 102"
.br
.ti -1c
.RI "const int \fBVERSIONED\fP = 54"
.br
.ti -1c
.RI "const int \fBSELECT\fP = 45"
.br
.ti -1c
.RI "const int \fBINTO\fP = 30"
.br
.ti -1c
.RI "const int \fBNE\fP = 107"
.br
.ti -1c
.RI "const int \fBGE\fP = 112"
.br
.ti -1c
.RI "const int \fBTAKE\fP = 50"
.br
.ti -1c
.RI "const int \fBID_LETTER\fP = 127"
.br
.ti -1c
.RI "const int \fBCONCAT\fP = 113"
.br
.ti -1c
.RI "const int \fBNULL\fP = 39"
.br
.ti -1c
.RI "const int \fBELSE\fP = 59"
.br
.ti -1c
.RI "const int \fBSELECT_FROM\fP = 89"
.br
.ti -1c
.RI "const int \fBNUM_LONG\fP = 99"
.br
.ti -1c
.RI "const int \fBON\fP = 62"
.br
.ti -1c
.RI "const int \fBTRAILING\fP = 70"
.br
.ti -1c
.RI "const int \fBNUM_DOUBLE\fP = 96"
.br
.ti -1c
.RI "const int \fBUNARY_MINUS\fP = 90"
.br
.ti -1c
.RI "const int \fBDELETE\fP = 13"
.br
.ti -1c
.RI "const int \fBINDICES\fP = 27"
.br
.ti -1c
.RI "const int \fBOF\fP = 69"
.br
.ti -1c
.RI "const int \fBMETHOD_CALL\fP = 81"
.br
.ti -1c
.RI "const int \fBLEADING\fP = 66"
.br
.ti -1c
.RI "const int \fBSKIP\fP = 47"
.br
.ti -1c
.RI "const int \fBEMPTY\fP = 65"
.br
.ti -1c
.RI "const int \fBGROUP\fP = 24"
.br
.ti -1c
.RI "const int \fBWS\fP = 129"
.br
.ti -1c
.RI "const int \fBFETCH\fP = 21"
.br
.ti -1c
.RI "const int \fBVECTOR_EXPR\fP = 92"
.br
.ti -1c
.RI "const int \fBNOT_IN\fP = 83"
.br
.ti -1c
.RI "const int \fBNUM_INT\fP = 95"
.br
.ti -1c
.RI "const int \fBOR\fP = 40"
.br
.ti -1c
.RI "const int \fBALIAS\fP = 72"
.br
.ti -1c
.RI "const int \fBJAVA_CONSTANT\fP = 100"
.br
.ti -1c
.RI "const int \fBCONSTANT\fP = 94"
.br
.ti -1c
.RI "const int \fBGT\fP = 110"
.br
.ti -1c
.RI "const int \fBQUERY\fP = 86"
.br
.ti -1c
.RI "const int \fBBNOT\fP = 114"
.br
.ti -1c
.RI "const int \fBINDEX_OP\fP = 78"
.br
.ti -1c
.RI "const int \fBNUM_FLOAT\fP = 98"
.br
.ti -1c
.RI "const int \fBFROM\fP = 22"
.br
.ti -1c
.RI "const int \fBEND\fP = 58"
.br
.ti -1c
.RI "const int \fBFALSE\fP = 20"
.br
.ti -1c
.RI "const int \fBDISTINCT\fP = 16"
.br
.ti -1c
.RI "const int \fBCONSTRUCTOR\fP = 73"
.br
.ti -1c
.RI "const int \fBT__133\fP = 133"
.br
.ti -1c
.RI "const int \fBT__134\fP = 134"
.br
.ti -1c
.RI "const int \fBCLOSE_BRACKET\fP = 123"
.br
.ti -1c
.RI "const int \fBWHERE\fP = 55"
.br
.ti -1c
.RI "const int \fBCLASS\fP = 11"
.br
.ti -1c
.RI "const int \fBMEMBER\fP = 67"
.br
.ti -1c
.RI "const int \fBINNER\fP = 28"
.br
.ti -1c
.RI "const int \fBPROPERTIES\fP = 43"
.br
.ti -1c
.RI "const int \fBORDER\fP = 41"
.br
.ti -1c
.RI "const int \fBMAX\fP = 35"
.br
.ti -1c
.RI "const int \fBUPDATE\fP = 53"
.br
.ti -1c
.RI "const int \fBSQL_NE\fP = 108"
.br
.ti -1c
.RI "const int \fBAND\fP = 6"
.br
.ti -1c
.RI "const int \fBSUM\fP = 49"
.br
.ti -1c
.RI "const int \fBASCENDING\fP = 8"
.br
.ti -1c
.RI "const int \fBEXPR_LIST\fP = 75"
.br
.ti -1c
.RI "const int \fBAS\fP = 7"
.br
.ti -1c
.RI "const int \fBIN\fP = 26"
.br
.ti -1c
.RI "const int \fBTHEN\fP = 60"
.br
.ti -1c
.RI "const int \fBOBJECT\fP = 68"
.br
.ti -1c
.RI "const int \fBCOMMA\fP = 101"
.br
.ti -1c
.RI "const int \fBIS\fP = 31"
.br
.ti -1c
.RI "const int \fBLEFT\fP = 33"
.br
.ti -1c
.RI "const int \fBAVG\fP = 9"
.br
.ti -1c
.RI "const int \fBSOME\fP = 48"
.br
.ti -1c
.RI "const int \fBBOR\fP = 115"
.br
.ti -1c
.RI "const int \fBALL\fP = 4"
.br
.ti -1c
.RI "const int \fBIDENT\fP = 125"
.br
.ti -1c
.RI "const int \fBPLUS\fP = 118"
.br
.ti -1c
.RI "const int \fBBXOR\fP = 116"
.br
.ti -1c
.RI "const int \fBCASE2\fP = 74"
.br
.ti -1c
.RI "const int \fBEXISTS\fP = 19"
.br
.ti -1c
.RI "const int \fBDOT\fP = 15"
.br
.ti -1c
.RI "const int \fBLIKE\fP = 34"
.br
.ti -1c
.RI "const int \fBWITH\fP = 63"
.br
.ti -1c
.RI "const int \fBOUTER\fP = 42"
.br
.ti -1c
.RI "const int \fBID_START_LETTER\fP = 126"
.br
.ti -1c
.RI "const int \fBROW_STAR\fP = 88"
.br
.ti -1c
.RI "const int \fBNOT_LIKE\fP = 84"
.br
.ti -1c
.RI "const int \fBHEX_DIGIT\fP = 132"
.br
.ti -1c
.RI "const int \fBNOT_BETWEEN\fP = 82"
.br
.ti -1c
.RI "const int \fBRANGE\fP = 87"
.br
.ti -1c
.RI "const int \fBRIGHT\fP = 44"
.br
.ti -1c
.RI "const int \fBSET\fP = 46"
.br
.ti -1c
.RI "const int \fBHAVING\fP = 25"
.br
.ti -1c
.RI "const int \fBMIN\fP = 36"
.br
.ti -1c
.RI "const int \fBMINUS\fP = 119"
.br
.ti -1c
.RI "const int \fBIS_NOT_NULL\fP = 79"
.br
.ti -1c
.RI "const int \fBBAND\fP = 117"
.br
.ti -1c
.RI "const int \fBELEMENTS\fP = 17"
.br
.ti -1c
.RI "const int \fBTRUE\fP = 51"
.br
.ti -1c
.RI "const int \fBJOIN\fP = 32"
.br
.ti -1c
.RI "const int \fBUNION\fP = 52"
.br
.ti -1c
.RI "const int \fBIN_LIST\fP = 77"
.br
.ti -1c
.RI "const int \fBCOLON\fP = 105"
.br
.ti -1c
.RI "const int \fBOPEN\fP = 103"
.br
.ti -1c
.RI "const int \fBANY\fP = 5"
.br
.ti -1c
.RI "const int \fBCLOSE\fP = 104"
.br
.ti -1c
.RI "const int \fBWHEN\fP = 61"
.br
.ti -1c
.RI "const int \fBDIV\fP = 121"
.br
.ti -1c
.RI "const int \fBDESCENDING\fP = 14"
.br
.ti -1c
.RI "const int \fBBETWEEN\fP = 10"
.br
.ti -1c
.RI "const int \fBAGGREGATE\fP = 71"
.br
.ti -1c
.RI "const int \fBLE\fP = 111"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static readonly string[] \fBtokenNames\fP"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_updateStatement_in_statement611\fP = new BitSet(new ulong[]{0x0000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_deleteStatement_in_statement615\fP = new BitSet(new ulong[]{0x0000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectStatement_in_statement619\fP = new BitSet(new ulong[]{0x0000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_insertStatement_in_statement623\fP = new BitSet(new ulong[]{0x0000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_EOF_in_statement627\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_UPDATE_in_updateStatement639\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_VERSIONED_in_updateStatement643\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_optionalFromTokenFromClause_in_updateStatement649\fP = new BitSet(new ulong[]{0x0000400000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_setClause_in_updateStatement653\fP = new BitSet(new ulong[]{0x0080000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_whereClause_in_updateStatement658\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SET_in_setClause672\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_assignment_in_setClause675\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_setClause678\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_assignment_in_setClause681\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_stateField_in_assignment695\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000004000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_EQ_in_assignment697\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_newValue_in_assignment700\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_stateField713\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_newValue726\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DELETE_in_deleteStatement737\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_optionalFromTokenFromClause_in_deleteStatement743\fP = new BitSet(new ulong[]{0x0080000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_whereClause_in_deleteStatement749\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_optionalFromTokenFromClause2_in_optionalFromTokenFromClause764\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_optionalFromTokenFromClause766\fP = new BitSet(new ulong[]{0x0040000000400082UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_asAlias_in_optionalFromTokenFromClause769\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FROM_in_optionalFromTokenFromClause2800\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_queryRule_in_selectStatement814\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_INSERT_in_insertStatement843\fP = new BitSet(new ulong[]{0x0000000040000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_intoClause_in_insertStatement846\fP = new BitSet(new ulong[]{0x0084A20003400000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectStatement_in_insertStatement848\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_INTO_in_intoClause859\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_intoClause862\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_insertablePropertySpec_in_intoClause866\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_insertablePropertySpec877\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_primaryExpression_in_insertablePropertySpec879\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000012000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_insertablePropertySpec883\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_primaryExpression_in_insertablePropertySpec885\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000012000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_insertablePropertySpec890\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectFrom_in_queryRule916\fP = new BitSet(new ulong[]{0x0084820003000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_whereClause_in_queryRule921\fP = new BitSet(new ulong[]{0x0004820003000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_groupByClause_in_queryRule928\fP = new BitSet(new ulong[]{0x0004820002000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_havingClause_in_queryRule935\fP = new BitSet(new ulong[]{0x0004820000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_orderByClause_in_queryRule942\fP = new BitSet(new ulong[]{0x0004800000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_skipClause_in_queryRule949\fP = new BitSet(new ulong[]{0x0004000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_takeClause_in_queryRule956\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectClause_in_selectFrom974\fP = new BitSet(new ulong[]{0x0000000000400002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_fromClause_in_selectFrom981\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SELECT_in_selectClause1030\fP = new BitSet(new ulong[]{0x024B00F8085B1230UL,0x30C4068F80000012UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DISTINCT_in_selectClause1042\fP = new BitSet(new ulong[]{0x024B00F8085B1230UL,0x30C4068F80000012UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectedPropertiesList_in_selectClause1048\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_newExpression_in_selectClause1052\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectObject_in_selectClause1056\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NEW_in_newExpression1070\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_newExpression1072\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_newExpression1077\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_selectedPropertiesList_in_newExpression1079\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_newExpression1081\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OBJECT_in_selectObject1107\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_selectObject1110\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_selectObject1113\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_selectObject1115\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FROM_in_fromClause1133\fP = new BitSet(new ulong[]{0x0040000004420080UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_fromRange_in_fromClause1138\fP = new BitSet(new ulong[]{0x0000100310800002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_fromJoin_in_fromClause1142\fP = new BitSet(new ulong[]{0x0000100310800002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_fromClause1146\fP = new BitSet(new ulong[]{0x0040000004420080UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_fromRange_in_fromClause1151\fP = new BitSet(new ulong[]{0x0000100310800002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_set_in_fromJoin1169\fP = new BitSet(new ulong[]{0x0000040100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OUTER_in_fromJoin1180\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FULL_in_fromJoin1188\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_INNER_in_fromJoin1192\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_JOIN_in_fromJoin1197\fP = new BitSet(new ulong[]{0x0040000000600000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FETCH_in_fromJoin1201\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_fromJoin1205\fP = new BitSet(new ulong[]{0x8040000000600082UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_asAlias_in_fromJoin1208\fP = new BitSet(new ulong[]{0x8000000000200002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_propertyFetch_in_fromJoin1213\fP = new BitSet(new ulong[]{0x8000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_withClause_in_fromJoin1218\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_set_in_fromJoin1229\fP = new BitSet(new ulong[]{0x0000040100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OUTER_in_fromJoin1240\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FULL_in_fromJoin1248\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_INNER_in_fromJoin1252\fP = new BitSet(new ulong[]{0x0000000100000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_JOIN_in_fromJoin1257\fP = new BitSet(new ulong[]{0x0000000000220000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FETCH_in_fromJoin1261\fP = new BitSet(new ulong[]{0x0000000000020000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ELEMENTS_in_fromJoin1265\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_fromJoin1268\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_fromJoin1271\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_fromJoin1273\fP = new BitSet(new ulong[]{0x8040000000600082UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_asAlias_in_fromJoin1277\fP = new BitSet(new ulong[]{0x8000000000200002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_propertyFetch_in_fromJoin1282\fP = new BitSet(new ulong[]{0x8000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_withClause_in_fromJoin1287\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_WITH_in_withClause1300\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalExpression_in_withClause1303\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_fromClassOrOuterQueryPath_in_fromRange1314\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_inClassDeclaration_in_fromRange1319\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_inCollectionDeclaration_in_fromRange1324\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_inCollectionElementsDeclaration_in_fromRange1329\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_fromClassOrOuterQueryPath1341\fP = new BitSet(new ulong[]{0x0040000000600082UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_asAlias_in_fromClassOrOuterQueryPath1346\fP = new BitSet(new ulong[]{0x0000000000200002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_propertyFetch_in_fromClassOrOuterQueryPath1351\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_alias_in_inClassDeclaration1381\fP = new BitSet(new ulong[]{0x0000000004000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IN_in_inClassDeclaration1383\fP = new BitSet(new ulong[]{0x0040000000400800UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLASS_in_inClassDeclaration1385\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_inClassDeclaration1388\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IN_in_inCollectionDeclaration1416\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_inCollectionDeclaration1418\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_inCollectionDeclaration1420\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_inCollectionDeclaration1422\fP = new BitSet(new ulong[]{0x0040000000400080UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_alias_in_inCollectionDeclaration1424\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_alias_in_inCollectionElementsDeclaration1458\fP = new BitSet(new ulong[]{0x0000000004000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IN_in_inCollectionElementsDeclaration1460\fP = new BitSet(new ulong[]{0x0000000000020000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ELEMENTS_in_inCollectionElementsDeclaration1462\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_inCollectionElementsDeclaration1464\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_inCollectionElementsDeclaration1466\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_inCollectionElementsDeclaration1468\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ELEMENTS_in_inCollectionElementsDeclaration1490\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_inCollectionElementsDeclaration1492\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_inCollectionElementsDeclaration1494\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_inCollectionElementsDeclaration1496\fP = new BitSet(new ulong[]{0x0000000000000080UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AS_in_inCollectionElementsDeclaration1498\fP = new BitSet(new ulong[]{0x0040000000400080UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_alias_in_inCollectionElementsDeclaration1500\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AS_in_asAlias1532\fP = new BitSet(new ulong[]{0x0040000000400080UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_alias_in_asAlias1537\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_alias1549\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FETCH_in_propertyFetch1568\fP = new BitSet(new ulong[]{0x0000000000000010UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ALL_in_propertyFetch1570\fP = new BitSet(new ulong[]{0x0000080000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_PROPERTIES_in_propertyFetch1573\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_GROUP_in_groupByClause1585\fP = new BitSet(new ulong[]{0x0100000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LITERAL_by_in_groupByClause1591\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_groupByClause1594\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_groupByClause1598\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_groupByClause1601\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ORDER_in_orderByClause1615\fP = new BitSet(new ulong[]{0x0100000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LITERAL_by_in_orderByClause1618\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_orderElement_in_orderByClause1621\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_orderByClause1625\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_orderElement_in_orderByClause1628\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SKIP_in_skipClause1642\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000060080000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NUM_INT_in_skipClause1646\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_parameter_in_skipClause1650\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_TAKE_in_takeClause1662\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000060080000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NUM_INT_in_takeClause1666\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_parameter_in_takeClause1670\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COLON_in_parameter1682\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_parameter1685\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_PARAM_in_parameter1690\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000080000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NUM_INT_in_parameter1694\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_orderElement1707\fP = new BitSet(new ulong[]{0x0000000000004102UL,0x0000000000000000UL,0x0000000000000060UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ascendingOrDescending_in_orderElement1711\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ASCENDING_in_ascendingOrDescending1729\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_133_in_ascendingOrDescending1735\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DESCENDING_in_ascendingOrDescending1755\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_134_in_ascendingOrDescending1761\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_HAVING_in_havingClause1782\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalExpression_in_havingClause1785\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_WHERE_in_whereClause1796\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalExpression_in_whereClause1799\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_aliasedExpression_in_selectedPropertiesList1810\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_selectedPropertiesList1814\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_aliasedExpression_in_selectedPropertiesList1817\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_aliasedExpression1832\fP = new BitSet(new ulong[]{0x0000000000000082UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AS_in_aliasedExpression1836\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_aliasedExpression1839\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_logicalExpression1878\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalOrExpression_in_expression1890\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalAndExpression_in_logicalOrExpression1902\fP = new BitSet(new ulong[]{0x0000010000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OR_in_logicalOrExpression1906\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalAndExpression_in_logicalOrExpression1909\fP = new BitSet(new ulong[]{0x0000010000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_negatedExpression_in_logicalAndExpression1924\fP = new BitSet(new ulong[]{0x0000000000000042UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AND_in_logicalAndExpression1928\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_negatedExpression_in_logicalAndExpression1931\fP = new BitSet(new ulong[]{0x0000000000000042UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NOT_in_negatedExpression1952\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_negatedExpression_in_negatedExpression1956\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_equalityExpression_in_negatedExpression1969\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_relationalExpression_in_equalityExpression1999\fP = new BitSet(new ulong[]{0x0000000080000002UL,0x0000184000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_EQ_in_equalityExpression2007\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IS_in_equalityExpression2016\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NOT_in_equalityExpression2022\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NE_in_equalityExpression2034\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SQL_NE_in_equalityExpression2043\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_relationalExpression_in_equalityExpression2054\fP = new BitSet(new ulong[]{0x0000000080000002UL,0x0000184000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_relationalExpression2071\fP = new BitSet(new ulong[]{0x0000004404000402UL,0x0001E00000000008UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LT_in_relationalExpression2083\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_GT_in_relationalExpression2088\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LE_in_relationalExpression2093\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_GE_in_relationalExpression2098\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseNotExpression_in_relationalExpression2103\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0001E00000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NOT_in_relationalExpression2120\fP = new BitSet(new ulong[]{0x0000000404000400UL,0x0000000000000008UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IN_in_relationalExpression2141\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_inList_in_relationalExpression2150\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BETWEEN_in_relationalExpression2161\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_betweenList_in_relationalExpression2170\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LIKE_in_relationalExpression2182\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_relationalExpression2191\fP = new BitSet(new ulong[]{0x0000000000040000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_likeEscape_in_relationalExpression2193\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_MEMBER_in_relationalExpression2202\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000020UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OF_in_relationalExpression2206\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_relationalExpression2213\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ESCAPE_in_likeEscape2240\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_likeEscape2243\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_compoundExpr_in_inList2256\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_betweenList2277\fP = new BitSet(new ulong[]{0x0000000000000040UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AND_in_betweenList2279\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_concatenation_in_betweenList2282\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseNotExpression_in_concatenation2301\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0002000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CONCAT_in_concatenation2309\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseNotExpression_in_concatenation2318\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0002000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CONCAT_in_concatenation2325\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseNotExpression_in_concatenation2328\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0002000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BNOT_in_bitwiseNotExpression2352\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseOrExpression_in_bitwiseNotExpression2355\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseOrExpression_in_bitwiseNotExpression2361\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseXOrExpression_in_bitwiseOrExpression2373\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0008000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BOR_in_bitwiseOrExpression2376\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseXOrExpression_in_bitwiseOrExpression2379\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0008000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseAndExpression_in_bitwiseXOrExpression2393\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0010000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BXOR_in_bitwiseXOrExpression2396\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_bitwiseAndExpression_in_bitwiseXOrExpression2399\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0010000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_additiveExpression_in_bitwiseAndExpression2413\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0020000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BAND_in_bitwiseAndExpression2416\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_additiveExpression_in_bitwiseAndExpression2419\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0020000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_multiplyExpression_in_additiveExpression2433\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x00C0000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_PLUS_in_additiveExpression2439\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_MINUS_in_additiveExpression2444\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_multiplyExpression_in_additiveExpression2449\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x00C0000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_multiplyExpression2464\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0300000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_STAR_in_multiplyExpression2470\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DIV_in_multiplyExpression2475\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_multiplyExpression2480\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0300000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_MINUS_in_unaryExpression2498\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_unaryExpression2502\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_PLUS_in_unaryExpression2519\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_unaryExpression2523\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_caseExpression_in_unaryExpression2540\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_quantifiedExpression_in_unaryExpression2554\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_atom_in_unaryExpression2569\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CASE_in_caseExpression2588\fP = new BitSet(new ulong[]{0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_whenClause_in_caseExpression2591\fP = new BitSet(new ulong[]{0x2C00000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_elseClause_in_caseExpression2596\fP = new BitSet(new ulong[]{0x0400000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_END_in_caseExpression2600\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CASE_in_caseExpression2620\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_caseExpression2622\fP = new BitSet(new ulong[]{0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_altWhenClause_in_caseExpression2625\fP = new BitSet(new ulong[]{0x2C00000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_elseClause_in_caseExpression2630\fP = new BitSet(new ulong[]{0x0400000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_END_in_caseExpression2634\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_WHEN_in_whenClause2663\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_logicalExpression_in_whenClause2666\fP = new BitSet(new ulong[]{0x1000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_THEN_in_whenClause2668\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_whenClause2671\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_WHEN_in_altWhenClause2685\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_unaryExpression_in_altWhenClause2688\fP = new BitSet(new ulong[]{0x1000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_THEN_in_altWhenClause2690\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_altWhenClause2693\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ELSE_in_elseClause2707\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_elseClause2710\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SOME_in_quantifiedExpression2725\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_EXISTS_in_quantifiedExpression2730\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ALL_in_quantifiedExpression2735\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ANY_in_quantifiedExpression2740\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_quantifiedExpression2749\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_collectionExpr_in_quantifiedExpression2753\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_quantifiedExpression2758\fP = new BitSet(new ulong[]{0x0084A20003400000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_subQuery_in_quantifiedExpression2763\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_quantifiedExpression2767\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_primaryExpression_in_atom2786\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0400000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DOT_in_atom2795\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_atom2798\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0400008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_atom2826\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4078F80000047UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_exprList_in_atom2831\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_atom2833\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0400000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_BRACKET_in_atom2847\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_atom2852\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_BRACKET_in_atom2854\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0400000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identPrimary_in_primaryExpression2874\fP = new BitSet(new ulong[]{0x0000000000008002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DOT_in_primaryExpression2887\fP = new BitSet(new ulong[]{0x0000000000000800UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLASS_in_primaryExpression2890\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_constant_in_primaryExpression2900\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COLON_in_primaryExpression2907\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_primaryExpression2910\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_primaryExpression2919\fP = new BitSet(new ulong[]{0x02CFA2D80B5A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expressionOrVector_in_primaryExpression2923\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_subQuery_in_primaryExpression2927\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_primaryExpression2930\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_PARAM_in_primaryExpression2938\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000080000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_NUM_INT_in_primaryExpression2942\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_expressionOrVector2960\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_vectorExpr_in_expressionOrVector2966\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_vectorExpr3005\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_vectorExpr3008\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_vectorExpr3011\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_vectorExpr3014\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_identPrimary3030\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DOT_in_identPrimary3048\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000010UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_identPrimary3053\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OBJECT_in_identPrimary3059\fP = new BitSet(new ulong[]{0x0000000000008002UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_identPrimary3077\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4078F80000047UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_exprList_in_identPrimary3082\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_identPrimary3084\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_aggregate_in_identPrimary3100\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_SUM_in_aggregate3121\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AVG_in_aggregate3127\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_MAX_in_aggregate3133\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_MIN_in_aggregate3139\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_aggregate3143\fP = new BitSet(new ulong[]{0x024B0098085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_additiveExpression_in_aggregate3145\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_aggregate3147\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COUNT_in_aggregate3166\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_aggregate3168\fP = new BitSet(new ulong[]{0x0042001808431210UL,0x2100000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_STAR_in_aggregate3174\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_aggregateDistinctAll_in_aggregate3180\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_aggregate3184\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_collectionExpr_in_aggregate3216\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_set_in_aggregateDistinctAll3229\fP = new BitSet(new ulong[]{0x0042001808421200UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_aggregateDistinctAll3242\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_collectionExpr_in_aggregateDistinctAll3246\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_ELEMENTS_in_collectionExpr3265\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_INDICES_in_collectionExpr3270\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000008000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_collectionExpr3274\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_collectionExpr3277\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_collectionExpr3279\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_collectionExpr_in_compoundExpr3334\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_path_in_compoundExpr3339\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_OPEN_in_compoundExpr3345\fP = new BitSet(new ulong[]{0x02CFA2D80B5A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_subQuery_in_compoundExpr3350\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000010000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_compoundExpr3355\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000012000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_compoundExpr3358\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_compoundExpr3361\fP = new BitSet(new ulong[]{0x0000000000000000UL,0x0000012000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_CLOSE_in_compoundExpr3368\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_TRAILING_in_exprList3387\fP = new BitSet(new ulong[]{0x024B00D8085A1232UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_LEADING_in_exprList3400\fP = new BitSet(new ulong[]{0x024B00D8085A1232UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_BOTH_in_exprList3413\fP = new BitSet(new ulong[]{0x024B00D8085A1232UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_exprList3437\fP = new BitSet(new ulong[]{0x0000000000400082UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_COMMA_in_exprList3442\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_exprList3445\fP = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FROM_in_exprList3460\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_exprList3462\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_AS_in_exprList3474\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_exprList3477\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_FROM_in_exprList3491\fP = new BitSet(new ulong[]{0x024B00D8085A1230UL,0x30C4068F80000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_expression_in_exprList3493\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_innerSubQuery_in_subQuery3513\fP = new BitSet(new ulong[]{0x0010000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_UNION_in_subQuery3516\fP = new BitSet(new ulong[]{0x0084A20003400000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_innerSubQuery_in_subQuery3519\fP = new BitSet(new ulong[]{0x0010000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_queryRule_in_innerSubQuery3533\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_set_in_constant0\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_path3621\fP = new BitSet(new ulong[]{0x0000000000008002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_DOT_in_path3625\fP = new BitSet(new ulong[]{0x0040000000400000UL,0x2000000000000000UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_identifier_in_path3630\fP = new BitSet(new ulong[]{0x0000000000008002UL})"
.br
.ti -1c
.RI "static readonly BitSet \fBFOLLOW_IDENT_in_identifier3646\fP = new BitSet(new ulong[]{0x0000000000000002UL})"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override object \fBRecoverFromMismatchedToken\fP (IIntStream input, int ttype, BitSet follow)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "ITreeAdaptor \fBadaptor\fP = new CommonTreeAdaptor()"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "ITreeAdaptor \fBTreeAdaptor\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "override string[] \fBTokenNames\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBGrammarFileName\fP\fC [get]\fP"
.br
.ti -1c
.RI "\fBIParseErrorHandler\fP \fBParseErrorHandler\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBFilter\fP\fC [get, set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 24 of file HqlParser\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
