.TH "log4net.Appender.AdoNetAppender" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Appender.AdoNetAppender \- 
.PP
\fBAppender\fP that logs to a database\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlog4net\&.Appender\&.BufferingAppenderSkeleton\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAdoNetAppender\fP ()"
.br
.RI "\fIInitializes a new instance of the \fBAdoNetAppender\fP class\&. \fP"
.ti -1c
.RI "override void \fBActivateOptions\fP ()"
.br
.RI "\fIInitialize the appender based on the options set \fP"
.ti -1c
.RI "void \fBAddParameter\fP (\fBAdoNetAppenderParameter\fP parameter)"
.br
.RI "\fIAdds a parameter to the command\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBOnClose\fP ()"
.br
.RI "\fIOverride the parent method to close the database \fP"
.ti -1c
.RI "override void \fBSendBuffer\fP (\fBLoggingEvent\fP[] events)"
.br
.RI "\fIInserts the events into the database\&. \fP"
.ti -1c
.RI "virtual void \fBSendBuffer\fP (IDbTransaction dbTran, \fBLoggingEvent\fP[] events)"
.br
.RI "\fIWrites the events to the database using the transaction specified\&. \fP"
.ti -1c
.RI "virtual string \fBGetLogStatement\fP (\fBLoggingEvent\fP logEvent)"
.br
.RI "\fIFormats the log message into database statement text\&. \fP"
.ti -1c
.RI "virtual IDbConnection \fBCreateConnection\fP (Type connectionType, string connectionString)"
.br
.RI "\fICreates an IDbConnection instance used to connect to the database\&. \fP"
.ti -1c
.RI "virtual string \fBResolveConnectionString\fP (out string connectionStringContext)"
.br
.RI "\fIResolves the connection string from the ConnectionString, ConnectionStringName, or AppSettingsKey property\&. \fP"
.ti -1c
.RI "virtual Type \fBResolveConnectionType\fP ()"
.br
.RI "\fIRetrieves the class type of the ADO\&.NET provider\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_usePreparedCommand\fP"
.br
.RI "\fIFlag to indicate if we are using a command object \fP"
.ti -1c
.RI "ArrayList \fBm_parameters\fP"
.br
.RI "\fIThe list of \fBAdoNetAppenderParameter\fP objects\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBConnectionString\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the database connection string that is used to connect to the database\&. \fP"
.ti -1c
.RI "string \fBAppSettingsKey\fP\fC [get, set]\fP"
.br
.RI "\fIThe appSettings key from App\&.Config that contains the connection string\&. \fP"
.ti -1c
.RI "string \fBConnectionType\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the type name of the IDbConnection connection that should be created\&. \fP"
.ti -1c
.RI "string \fBCommandText\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the command text that is used to insert logging events into the database\&. \fP"
.ti -1c
.RI "CommandType \fBCommandType\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the command type to execute\&. \fP"
.ti -1c
.RI "bool \fBUseTransactions\fP\fC [get, set]\fP"
.br
.RI "\fIShould transactions be used to insert logging events in the database\&. \fP"
.ti -1c
.RI "\fBSecurityContext\fP \fBSecurityContext\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the \fBSecurityContext\fP used to call the NetSend method\&. \fP"
.ti -1c
.RI "bool \fBReconnectOnError\fP\fC [get, set]\fP"
.br
.RI "\fIShould this appender try to reconnect to the database on error\&. \fP"
.ti -1c
.RI "IDbConnection \fBConnection\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the underlying IDbConnection\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBAppender\fP that logs to a database\&. 

\fBAdoNetAppender\fP appends logging events to a table within a database\&. The appender can be configured to specify the connection string by setting the \fBConnectionString\fP property\&. The connection type (provider) can be specified by setting the \fBConnectionType\fP property\&. For more information on database connection strings for your specific database see \fChttp://www\&.connectionstrings\&.com/\fP\&. 
.PP
Records are written into the database either using a prepared statement or a stored procedure\&. The \fBCommandType\fP property is set to System\&.Data\&.CommandType\&.Text (\fCSystem\&.Data\&.CommandType\&.Text\fP) to specify a prepared statement or to System\&.Data\&.CommandType\&.StoredProcedure (\fCSystem\&.Data\&.CommandType\&.StoredProcedure\fP) to specify a stored procedure\&. 
.PP
The prepared statement text or the name of the stored procedure must be set in the \fBCommandText\fP property\&. 
.PP
The prepared statement or stored procedure can take a number of parameters\&. Parameters are added using the \fBAddParameter\fP method\&. This adds a single \fBAdoNetAppenderParameter\fP to the ordered list of parameters\&. The \fBAdoNetAppenderParameter\fP type may be subclassed if required to provide database specific functionality\&. The \fBAdoNetAppenderParameter\fP specifies the parameter name, database type, size, and how the value should be generated using a ILayout\&. 
.PP
An example of a SQL Server table that could be logged to: 
.PP
.nf
CREATE TABLE [dbo]\&.[Log] ( 
  [ID] [int] IDENTITY (1, 1) NOT NULL ,
  [Date] [datetime] NOT NULL ,
  [Thread] [varchar] (255) NOT NULL ,
  [Level] [varchar] (20) NOT NULL ,
  [Logger] [varchar] (255) NOT NULL ,
  [Message] [varchar] (4000) NOT NULL 
) ON [PRIMARY]

.fi
.PP
 
.PP
An example configuration to log to the above table: 
.PP
.nf
<appender name="AdoNetAppender_SqlServer" type="log4net\&.Appender\&.AdoNetAppender" >
  <connectionType value="System\&.Data\&.SqlClient\&.SqlConnection, System\&.Data, Version=1\&.0\&.3300\&.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <connectionString value="data source=SQLSVR;initial catalog=test_log4net;integrated security=false;persist security info=True;User ID=sa;Password=sa" />
  <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message]) VALUES (@log_date, @thread, @log_level, @logger, @message)" />
  <parameter>
    <parameterName value="@log_date" />
    <dbType value="DateTime" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%date{yyyy'-'MM'-'dd HH':'mm':'ss'\&.'fff}" />
  </parameter>
  <parameter>
    <parameterName value="@thread" />
    <dbType value="String" />
    <size value="255" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%thread" />
  </parameter>
  <parameter>
    <parameterName value="@log_level" />
    <dbType value="String" />
    <size value="50" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%level" />
  </parameter>
  <parameter>
    <parameterName value="@logger" />
    <dbType value="String" />
    <size value="255" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%logger" />
  </parameter>
  <parameter>
    <parameterName value="@message" />
    <dbType value="String" />
    <size value="4000" />
    <layout type="log4net\&.Layout\&.PatternLayout" value="%message" />
  </parameter>
</appender>

.fi
.PP
 
.PP
<author>Julian Biddle</author> <author>Nicko Cadell</author> <author>Gert Driesen</author> <author>Lance Nehring</author> 
.PP
Definition at line 125 of file AdoNetAppender\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "log4net\&.Appender\&.AdoNetAppender\&.AdoNetAppender ()"

.PP
Initializes a new instance of the \fBAdoNetAppender\fP class\&. Public default constructor to initialize a new instance of this class\&. 
.PP
Definition at line 135 of file AdoNetAppender\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void log4net\&.Appender\&.AdoNetAppender\&.ActivateOptions ()\fC [virtual]\fP"

.PP
Initialize the appender based on the options set This is part of the IOptionHandler delayed object activation scheme\&. The \fBActivateOptions\fP method must be called on this object after the configuration properties have been set\&. Until \fBActivateOptions\fP is called this object is in an undefined state and must not be used\&. 
.PP
If any of the configuration properties are modified then \fBActivateOptions\fP must be called again\&. 
.PP
Reimplemented from \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Definition at line 403 of file AdoNetAppender\&.cs\&.
.SS "void log4net\&.Appender\&.AdoNetAppender\&.AddParameter (\fBAdoNetAppenderParameter\fPparameter)"

.PP
Adds a parameter to the command\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparameter\fP The parameter to add to the command\&.
.RE
.PP
.PP
Adds a parameter to the ordered list of command parameters\&. 
.PP
Definition at line 519 of file AdoNetAppender\&.cs\&.
.SS "virtual IDbConnection log4net\&.Appender\&.AdoNetAppender\&.CreateConnection (TypeconnectionType, stringconnectionString)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Creates an IDbConnection instance used to connect to the database\&. This method is called whenever a new IDbConnection is needed (i\&.e\&. when a reconnect is necessary)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconnectionType\fP The Type of the IDbConnection object\&.
.br
\fIconnectionString\fP The connectionString output from the ResolveConnectionString method\&.
.RE
.PP
\fBReturns:\fP
.RS 4
An IDbConnection instance with a valid connection string\&.
.RE
.PP

.PP
Definition at line 628 of file AdoNetAppender\&.cs\&.
.SS "virtual string log4net\&.Appender\&.AdoNetAppender\&.GetLogStatement (\fBLoggingEvent\fPlogEvent)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Formats the log message into database statement text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlogEvent\fP The event being logged\&.
.RE
.PP
.PP
This method can be overridden by subclasses to provide more control over the format of the database statement\&. 
.PP
\fBReturns:\fP
.RS 4
Text that can be passed to a System\&.Data\&.IDbCommand\&. 
.RE
.PP

.PP
Definition at line 604 of file AdoNetAppender\&.cs\&.
.SS "override void log4net\&.Appender\&.AdoNetAppender\&.OnClose ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override the parent method to close the database Closes the database command and database connection\&. 
.PP
Reimplemented from \fBlog4net\&.Appender\&.AppenderSkeleton\fP\&.
.PP
Definition at line 431 of file AdoNetAppender\&.cs\&.
.SS "virtual string log4net\&.Appender\&.AdoNetAppender\&.ResolveConnectionString (out stringconnectionStringContext)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Resolves the connection string from the ConnectionString, ConnectionStringName, or AppSettingsKey property\&. ConnectiongStringName is only supported on \&.NET 2\&.0 and higher\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconnectionStringContext\fP Additional information describing the connection string\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A connection string used to connect to the database\&.
.RE
.PP

.PP
Definition at line 644 of file AdoNetAppender\&.cs\&.
.SS "virtual Type log4net\&.Appender\&.AdoNetAppender\&.ResolveConnectionType ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Retrieves the class type of the ADO\&.NET provider\&. Gets the Type of the ADO\&.NET provider to use to connect to the database\&. This method resolves the type specified in the \fBConnectionType\fP property\&. 
.PP
Subclasses can override this method to return a different type if necessary\&. 
.PP
\fBReturns:\fP
.RS 4
The Type of the ADO\&.NET provider
.RE
.PP

.PP
Definition at line 698 of file AdoNetAppender\&.cs\&.
.SS "override void log4net\&.Appender\&.AdoNetAppender\&.SendBuffer (\fBLoggingEvent\fP[]events)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Inserts the events into the database\&. 
.PP
\fBParameters:\fP
.RS 4
\fIevents\fP The events to insert into the database\&.
.RE
.PP
.PP
Insert all the events specified in the \fIevents\fP  array into the database\&. 
.PP
Implements \fBlog4net\&.Appender\&.BufferingAppenderSkeleton\fP\&.
.PP
Definition at line 452 of file AdoNetAppender\&.cs\&.
.SS "virtual void log4net\&.Appender\&.AdoNetAppender\&.SendBuffer (IDbTransactiondbTran, \fBLoggingEvent\fP[]events)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Writes the events to the database using the transaction specified\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdbTran\fP The transaction that the events will be executed under\&.
.br
\fIevents\fP The array of events to insert into the database\&.
.RE
.PP
.PP
The transaction argument can be \fCnull\fP if the appender has been configured not to use transactions\&. See \fBUseTransactions\fP property for more information\&. 
.PP
Definition at line 541 of file AdoNetAppender\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "ArrayList log4net\&.Appender\&.AdoNetAppender\&.m_parameters\fC [protected]\fP"

.PP
The list of \fBAdoNetAppenderParameter\fP objects\&. The list of \fBAdoNetAppenderParameter\fP objects\&. 
.PP
Definition at line 886 of file AdoNetAppender\&.cs\&.
.SS "bool log4net\&.Appender\&.AdoNetAppender\&.m_usePreparedCommand\fC [protected]\fP"

.PP
Flag to indicate if we are using a command object Set to \fCtrue\fP when the appender is to use a prepared statement or stored procedure to insert into the database\&. 
.PP
Definition at line 876 of file AdoNetAppender\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "string log4net\&.Appender\&.AdoNetAppender\&.AppSettingsKey\fC [get]\fP, \fC [set]\fP"

.PP
The appSettings key from App\&.Config that contains the connection string\&. 
.PP
Definition at line 180 of file AdoNetAppender\&.cs\&.
.SS "string log4net\&.Appender\&.AdoNetAppender\&.CommandText\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the command text that is used to insert logging events into the database\&. The command text used to insert logging events into the database\&. 
.PP
Either the text of the prepared statement or the name of the stored procedure to execute to write into the database\&. 
.PP
The \fBCommandType\fP property determines if this text is a prepared statement or a stored procedure\&. 
.PP
Definition at line 257 of file AdoNetAppender\&.cs\&.
.SS "CommandType log4net\&.Appender\&.AdoNetAppender\&.CommandType\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the command type to execute\&. The command type to execute\&. 
.PP
This value may be either System\&.Data\&.CommandType\&.Text (\fCSystem\&.Data\&.CommandType\&.Text\fP) to specify that the \fBCommandText\fP is a prepared statement to execute, or System\&.Data\&.CommandType\&.StoredProcedure (\fCSystem\&.Data\&.CommandType\&.StoredProcedure\fP) to specify that the \fBCommandText\fP property is the name of a stored procedure to execute\&. 
.PP
The default value is System\&.Data\&.CommandType\&.Text (\fCSystem\&.Data\&.CommandType\&.Text\fP)\&. 
.PP
Definition at line 281 of file AdoNetAppender\&.cs\&.
.SS "IDbConnection log4net\&.Appender\&.AdoNetAppender\&.Connection\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Gets or sets the underlying IDbConnection\&. The underlying IDbConnection\&. 
.PP
\fBAdoNetAppender\fP creates a IDbConnection to insert logging events into a database\&. Classes deriving from \fBAdoNetAppender\fP can use this property to get or set this IDbConnection\&. Use the underlying IDbConnection returned from \fBConnection\fP if you require access beyond that which \fBAdoNetAppender\fP provides\&. 
.PP
Definition at line 378 of file AdoNetAppender\&.cs\&.
.SS "string log4net\&.Appender\&.AdoNetAppender\&.ConnectionString\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the database connection string that is used to connect to the database\&. The database connection string used to connect to the database\&. 
.PP
The connections string is specific to the connection type\&. See \fBConnectionType\fP for more information\&. 
.PP
Connection string for MS Access via ODBC: 
.PP
.nf
"DSN=MS Access Database;UID=admin;PWD=;SystemDB=C:\data\System\&.mdw;SafeTransactions = 0;FIL=MS Access;DriverID = 25;DBQ=C:\data\train33\&.mdb"

.fi
.PP
 
.PP
Another connection string for MS Access via ODBC: 
.PP
.nf
"Driver={Microsoft Access Driver (*\&.mdb)};DBQ=C:\Work\cvs_root\log4net-1\&.2\access\&.mdb;UID=;PWD=;"

.fi
.PP
 
.PP
Connection string for MS Access via OLE DB: 
.PP
.nf
"Provider=Microsoft\&.Jet\&.OLEDB\&.4\&.0;Data Source=C:\Work\cvs_root\log4net-1\&.2\access\&.mdb;User Id=;Password=;"

.fi
.PP
 
.PP
Definition at line 171 of file AdoNetAppender\&.cs\&.
.SS "string log4net\&.Appender\&.AdoNetAppender\&.ConnectionType\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the type name of the IDbConnection connection that should be created\&. The type name of the IDbConnection connection\&. 
.PP
The type name of the ADO\&.NET provider to use\&. 
.PP
The default is to use the OLE DB provider\&. 
.PP
Use the OLE DB Provider\&. This is the default value\&. 
.PP
.nf
System\&.Data\&.OleDb\&.OleDbConnection, System\&.Data, Version=1\&.0\&.3300\&.0, Culture=neutral, PublicKeyToken=b77a5c561934e089

.fi
.PP
 
.PP
Use the MS SQL Server Provider\&. 
.PP
.nf
System\&.Data\&.SqlClient\&.SqlConnection, System\&.Data, Version=1\&.0\&.3300\&.0, Culture=neutral, PublicKeyToken=b77a5c561934e089

.fi
.PP
 
.PP
Use the ODBC Provider\&. 
.PP
.nf
Microsoft\&.Data\&.Odbc\&.OdbcConnection,Microsoft\&.Data\&.Odbc,version=1\&.0\&.3300\&.0,publicKeyToken=b77a5c561934e089,culture=neutral

.fi
.PP
 This is an optional package that you can download from \fChttp://msdn\&.microsoft\&.com/downloads\fP search for \fBODBC \&.NET Data Provider\fP\&. 
.PP
Use the Oracle Provider\&. 
.PP
.nf
System\&.Data\&.OracleClient\&.OracleConnection, System\&.Data\&.OracleClient, Version=1\&.0\&.3300\&.0, Culture=neutral, PublicKeyToken=b77a5c561934e089

.fi
.PP
 This is an optional package that you can download from \fChttp://msdn\&.microsoft\&.com/downloads\fP search for \fB\&.NET Managed Provider for Oracle\fP\&. 
.PP
Definition at line 233 of file AdoNetAppender\&.cs\&.
.SS "bool log4net\&.Appender\&.AdoNetAppender\&.ReconnectOnError\fC [get]\fP, \fC [set]\fP"

.PP
Should this appender try to reconnect to the database on error\&. \fCtrue\fP if the appender should try to reconnect to the database after an error has occurred, otherwise \fCfalse\fP\&. The default value is \fCfalse\fP, i\&.e\&. not to try to reconnect\&. 
.PP
The default behaviour is for the appender not to try to reconnect to the database if an error occurs\&. Subsequent logging events are discarded\&. 
.PP
To force the appender to attempt to reconnect to the database set this property to \fCtrue\fP\&. 
.PP
<note> When the appender attempts to connect to the database there may be a delay of up to the connection timeout specified in the connection string\&. This delay will block the calling application's thread\&. Until the connection can be reestablished this potential delay may occur multiple times\&. </note> 
.PP
Definition at line 355 of file AdoNetAppender\&.cs\&.
.SS "\fBSecurityContext\fP log4net\&.Appender\&.AdoNetAppender\&.SecurityContext\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the \fBSecurityContext\fP used to call the NetSend method\&. The \fBSecurityContext\fP used to call the NetSend method\&. 
.PP
Unless a \fBSecurityContext\fP specified here for this appender the SecurityContextProvider\&.DefaultProvider is queried for the security context to use\&. The default behavior is to use the security context of the current thread\&. 
.PP
Definition at line 325 of file AdoNetAppender\&.cs\&.
.SS "bool log4net\&.Appender\&.AdoNetAppender\&.UseTransactions\fC [get]\fP, \fC [set]\fP"

.PP
Should transactions be used to insert logging events in the database\&. \fCtrue\fP if transactions should be used to insert logging events in the database, otherwise \fCfalse\fP\&. The default value is \fCtrue\fP\&. 
.PP
Gets or sets a value that indicates whether transactions should be used to insert logging events in the database\&. 
.PP
When set a single transaction will be used to insert the buffered events into the database\&. Otherwise each event will be inserted without using an explicit transaction\&. 
.PP
Definition at line 305 of file AdoNetAppender\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
