.TH "Newtonsoft.Json.Linq.JArray" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Newtonsoft.Json.Linq.JArray \- 
.PP
Represents a JSON array\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNewtonsoft\&.Json\&.Linq\&.JContainer\fP, and IList< JToken >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBJArray\fP ()"
.br
.RI "\fIInitializes a new instance of the \fBJArray\fP class\&. \fP"
.ti -1c
.RI "\fBJArray\fP (\fBJArray\fP other)"
.br
.RI "\fIInitializes a new instance of the \fBJArray\fP class from another \fBJArray\fP object\&. \fP"
.ti -1c
.RI "\fBJArray\fP (params object[] content)"
.br
.RI "\fIInitializes a new instance of the \fBJArray\fP class with the specified content\&. \fP"
.ti -1c
.RI "\fBJArray\fP (object content)"
.br
.RI "\fIInitializes a new instance of the \fBJArray\fP class with the specified content\&. \fP"
.ti -1c
.RI "override void \fBWriteTo\fP (\fBJsonWriter\fP writer, params \fBJsonConverter\fP[] converters)"
.br
.RI "\fIWrites this token to a \fBJsonWriter\fP\&. \fP"
.ti -1c
.RI "int \fBIndexOf\fP (\fBJToken\fP item)"
.br
.RI "\fIDetermines the index of a specific item in the T:System\&.Collections\&.Generic\&.IList`1\&. \fP"
.ti -1c
.RI "void \fBInsert\fP (int index, \fBJToken\fP item)"
.br
.RI "\fIInserts an item to the T:System\&.Collections\&.Generic\&.IList`1 at the specified index\&. \fP"
.ti -1c
.RI "void \fBRemoveAt\fP (int index)"
.br
.RI "\fIRemoves the T:System\&.Collections\&.Generic\&.IList`1 item at the specified index\&. \fP"
.ti -1c
.RI "IEnumerator< \fBJToken\fP > \fBGetEnumerator\fP ()"
.br
.RI "\fIReturns an enumerator that iterates through the collection\&. \fP"
.ti -1c
.RI "void \fBAdd\fP (\fBJToken\fP item)"
.br
.RI "\fIAdds an item to the T:System\&.Collections\&.Generic\&.ICollection`1\&. \fP"
.ti -1c
.RI "void \fBClear\fP ()"
.br
.RI "\fIRemoves all items from the T:System\&.Collections\&.Generic\&.ICollection`1\&. \fP"
.ti -1c
.RI "bool \fBContains\fP (\fBJToken\fP item)"
.br
.RI "\fIDetermines whether the T:System\&.Collections\&.Generic\&.ICollection`1 contains a specific value\&. \fP"
.ti -1c
.RI "void \fBCopyTo\fP (\fBJToken\fP[] array, int arrayIndex)"
.br
.RI "\fICopies to\&. \fP"
.ti -1c
.RI "bool \fBRemove\fP (\fBJToken\fP item)"
.br
.RI "\fIRemoves the first occurrence of a specific object from the T:System\&.Collections\&.Generic\&.ICollection`1\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static new \fBJArray\fP \fBLoad\fP (\fBJsonReader\fP reader)"
.br
.RI "\fILoads an \fBJArray\fP from a \fBJsonReader\fP\&. \fP"
.ti -1c
.RI "static new \fBJArray\fP \fBParse\fP (string json)"
.br
.RI "\fILoad a \fBJArray\fP from a string that contains JSON\&. \fP"
.ti -1c
.RI "static new \fBJArray\fP \fBFromObject\fP (object o)"
.br
.RI "\fICreates a \fBJArray\fP from an object\&. \fP"
.ti -1c
.RI "static new \fBJArray\fP \fBFromObject\fP (object o, \fBJsonSerializer\fP jsonSerializer)"
.br
.RI "\fICreates a \fBJArray\fP from an object\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override IList< \fBJToken\fP > \fBChildrenTokens\fP\fC [get]\fP"
.br
.RI "\fIGets the container's children tokens\&. \fP"
.ti -1c
.RI "override \fBJTokenType\fP \fBType\fP\fC [get]\fP"
.br
.RI "\fIGets the node type for this \fBJToken\fP\&. \fP"
.ti -1c
.RI "override \fBJToken\fP \fBthis[object key]\fP\fC [get, set]\fP"
.br
.RI "\fIGets the \fBJToken\fP with the specified key\&. \fP"
.ti -1c
.RI "\fBJToken\fP \fBthis[int index]\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the \fBNewtonsoft\&.Json\&.Linq\&.JToken\fP at the specified index\&. \fP"
.ti -1c
.RI "bool \fBIsReadOnly\fP\fC [get]\fP"
.br
.RI "\fIGets a value indicating whether the T:System\&.Collections\&.Generic\&.ICollection`1 is read-only\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Represents a JSON array\&. 

\fC \fP
.PP
\fC \fP
.PP
Definition at line 40 of file JArray\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Newtonsoft\&.Json\&.Linq\&.JArray\&.JArray ()"

.PP
Initializes a new instance of the \fBJArray\fP class\&. 
.PP
Definition at line 65 of file JArray\&.cs\&.
.SS "Newtonsoft\&.Json\&.Linq\&.JArray\&.JArray (\fBJArray\fPother)"

.PP
Initializes a new instance of the \fBJArray\fP class from another \fBJArray\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP A \fBJArray\fP object to copy from\&.
.RE
.PP

.PP
Definition at line 73 of file JArray\&.cs\&.
.SS "Newtonsoft\&.Json\&.Linq\&.JArray\&.JArray (params object[]content)"

.PP
Initializes a new instance of the \fBJArray\fP class with the specified content\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcontent\fP The contents of the array\&.
.RE
.PP

.PP
Definition at line 82 of file JArray\&.cs\&.
.SS "Newtonsoft\&.Json\&.Linq\&.JArray\&.JArray (objectcontent)"

.PP
Initializes a new instance of the \fBJArray\fP class with the specified content\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcontent\fP The contents of the array\&.
.RE
.PP

.PP
Definition at line 91 of file JArray\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Newtonsoft\&.Json\&.Linq\&.JArray\&.Add (\fBJToken\fPitem)"

.PP
Adds an item to the T:System\&.Collections\&.Generic\&.ICollection`1\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitem\fP The object to add to the T:System\&.Collections\&.Generic\&.ICollection`1\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIT:System\&.NotSupportedException\fP The T:System\&.Collections\&.Generic\&.ICollection`1 is read-only\&.
.RE
.PP

.PP
Definition at line 294 of file JArray\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Linq\&.JArray\&.Clear ()"

.PP
Removes all items from the T:System\&.Collections\&.Generic\&.ICollection`1\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIT:System\&.NotSupportedException\fP The T:System\&.Collections\&.Generic\&.ICollection`1 is read-only\&. 
.RE
.PP

.PP
Definition at line 303 of file JArray\&.cs\&.
.SS "bool Newtonsoft\&.Json\&.Linq\&.JArray\&.Contains (\fBJToken\fPitem)"

.PP
Determines whether the T:System\&.Collections\&.Generic\&.ICollection`1 contains a specific value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitem\fP The object to locate in the T:System\&.Collections\&.Generic\&.ICollection`1\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if \fIitem\fP  is found in the T:System\&.Collections\&.Generic\&.ICollection`1; otherwise, false\&. 
.RE
.PP

.PP
Definition at line 315 of file JArray\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Linq\&.JArray\&.CopyTo (\fBJToken\fP[]array, intarrayIndex)"

.PP
Copies to\&. 
.PP
\fBParameters:\fP
.RS 4
\fIarray\fP The array\&.
.br
\fIarrayIndex\fP Index of the array\&.
.RE
.PP

.PP
Definition at line 325 of file JArray\&.cs\&.
.SS "static new \fBJArray\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.FromObject (objecto)\fC [static]\fP"

.PP
Creates a \fBJArray\fP from an object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIo\fP The object that will be used to create \fBJArray\fP\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBJArray\fP with the values of the specified object
.RE
.PP

.PP
Definition at line 161 of file JArray\&.cs\&.
.SS "static new \fBJArray\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.FromObject (objecto, \fBJsonSerializer\fPjsonSerializer)\fC [static]\fP"

.PP
Creates a \fBJArray\fP from an object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIo\fP The object that will be used to create \fBJArray\fP\&.
.br
\fIjsonSerializer\fP The \fBJsonSerializer\fP that will be used to read the object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBJArray\fP with the values of the specified object
.RE
.PP

.PP
Definition at line 172 of file JArray\&.cs\&.
.SS "IEnumerator<\fBJToken\fP> Newtonsoft\&.Json\&.Linq\&.JArray\&.GetEnumerator ()"

.PP
Returns an enumerator that iterates through the collection\&. 
.PP
\fBReturns:\fP
.RS 4
A T:System\&.Collections\&.Generic\&.IEnumerator`1 that can be used to iterate through the collection\&. 
.RE
.PP

.PP
Definition at line 280 of file JArray\&.cs\&.
.SS "int Newtonsoft\&.Json\&.Linq\&.JArray\&.IndexOf (\fBJToken\fPitem)"

.PP
Determines the index of a specific item in the T:System\&.Collections\&.Generic\&.IList`1\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitem\fP The object to locate in the T:System\&.Collections\&.Generic\&.IList`1\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The index of \fIitem\fP  if found in the list; otherwise, -1\&. 
.RE
.PP

.PP
Definition at line 244 of file JArray\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Linq\&.JArray\&.Insert (intindex, \fBJToken\fPitem)"

.PP
Inserts an item to the T:System\&.Collections\&.Generic\&.IList`1 at the specified index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP The zero-based index at which \fIitem\fP  should be inserted\&.
.br
\fIitem\fP The object to insert into the T:System\&.Collections\&.Generic\&.IList`1\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIT:System\&.ArgumentOutOfRangeException\fP \fIindex\fP  is not a valid index in the T:System\&.Collections\&.Generic\&.IList`1\&.
.br
\fIT:System\&.NotSupportedException\fP The T:System\&.Collections\&.Generic\&.IList`1 is read-only\&.
.RE
.PP

.PP
Definition at line 257 of file JArray\&.cs\&.
.SS "static new \fBJArray\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.Load (\fBJsonReader\fPreader)\fC [static]\fP"

.PP
Loads an \fBJArray\fP from a \fBJsonReader\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIreader\fP A \fBJsonReader\fP that will be read for the content of the \fBJArray\fP\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBJArray\fP that contains the JSON that was read from the specified \fBJsonReader\fP\&.
.RE
.PP

.PP
Definition at line 112 of file JArray\&.cs\&.
.SS "static new \fBJArray\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.Parse (stringjson)\fC [static]\fP"

.PP
Load a \fBJArray\fP from a string that contains JSON\&. 
.PP
\fBParameters:\fP
.RS 4
\fIjson\fP A \fBString\fP that contains JSON\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBJArray\fP populated from the string that contains JSON\&.
.RE
.PP
\fC \fP
.PP
\fC \fP
.PP
Definition at line 144 of file JArray\&.cs\&.
.SS "bool Newtonsoft\&.Json\&.Linq\&.JArray\&.Remove (\fBJToken\fPitem)"

.PP
Removes the first occurrence of a specific object from the T:System\&.Collections\&.Generic\&.ICollection`1\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitem\fP The object to remove from the T:System\&.Collections\&.Generic\&.ICollection`1\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if \fIitem\fP  was successfully removed from the T:System\&.Collections\&.Generic\&.ICollection`1; otherwise, false\&. This method also returns false if \fIitem\fP  is not found in the original T:System\&.Collections\&.Generic\&.ICollection`1\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIT:System\&.NotSupportedException\fP The T:System\&.Collections\&.Generic\&.ICollection`1 is read-only\&.
.RE
.PP

.PP
Definition at line 347 of file JArray\&.cs\&.
.SS "void Newtonsoft\&.Json\&.Linq\&.JArray\&.RemoveAt (intindex)"

.PP
Removes the T:System\&.Collections\&.Generic\&.IList`1 item at the specified index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP The zero-based index of the item to remove\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIT:System\&.ArgumentOutOfRangeException\fP \fIindex\fP  is not a valid index in the T:System\&.Collections\&.Generic\&.IList`1\&.
.br
\fIT:System\&.NotSupportedException\fP The T:System\&.Collections\&.Generic\&.IList`1 is read-only\&.
.RE
.PP

.PP
Definition at line 269 of file JArray\&.cs\&.
.SS "override void Newtonsoft\&.Json\&.Linq\&.JArray\&.WriteTo (\fBJsonWriter\fPwriter, params \fBJsonConverter\fP[]converters)\fC [virtual]\fP"

.PP
Writes this token to a \fBJsonWriter\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIwriter\fP A \fBJsonWriter\fP into which this method will write\&.
.br
\fIconverters\fP A collection of \fBJsonConverter\fP which will be used when writing the token\&.
.RE
.PP

.PP
Implements \fBNewtonsoft\&.Json\&.Linq\&.JToken\fP\&.
.PP
Definition at line 187 of file JArray\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override IList<\fBJToken\fP> Newtonsoft\&.Json\&.Linq\&.JArray\&.ChildrenTokens\fC [get]\fP, \fC [protected]\fP"

.PP
Gets the container's children tokens\&. The container's children tokens\&.
.PP
Definition at line 49 of file JArray\&.cs\&.
.SS "bool Newtonsoft\&.Json\&.Linq\&.JArray\&.IsReadOnly\fC [get]\fP"

.PP
Gets a value indicating whether the T:System\&.Collections\&.Generic\&.ICollection`1 is read-only\&. 
.PP
\fBReturns:\fP
.RS 4
true if the T:System\&.Collections\&.Generic\&.ICollection`1 is read-only; otherwise, false\&.
.RE
.PP

.PP
Definition at line 335 of file JArray\&.cs\&.
.SS "\fBJToken\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.this[int index]\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the \fBNewtonsoft\&.Json\&.Linq\&.JToken\fP at the specified index\&. 
.PP
Definition at line 230 of file JArray\&.cs\&.
.SS "override \fBJToken\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.this[object key]\fC [get]\fP, \fC [set]\fP"

.PP
Gets the \fBJToken\fP with the specified key\&. The \fBJToken\fP with the specified key\&.
.PP
Definition at line 204 of file JArray\&.cs\&.
.SS "override \fBJTokenType\fP Newtonsoft\&.Json\&.Linq\&.JArray\&.Type\fC [get]\fP"

.PP
Gets the node type for this \fBJToken\fP\&. The type\&.
.PP
Definition at line 58 of file JArray\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
