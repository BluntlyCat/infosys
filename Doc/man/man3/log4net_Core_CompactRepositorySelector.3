.TH "log4net.Core.CompactRepositorySelector" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Core.CompactRepositorySelector \- 
.PP
The implementation of the \fBIRepositorySelector\fP interface suitable for use with the compact framework  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCompactRepositorySelector\fP (Type defaultRepositoryType)"
.br
.RI "\fICreate a new repository selector \fP"
.ti -1c
.RI "\fBILoggerRepository\fP \fBGetRepository\fP (Assembly assembly)"
.br
.RI "\fIGet the ILoggerRepository for the specified assembly \fP"
.ti -1c
.RI "\fBILoggerRepository\fP \fBGetRepository\fP (string repositoryName)"
.br
.RI "\fIGet the named ILoggerRepository \fP"
.ti -1c
.RI "\fBILoggerRepository\fP \fBCreateRepository\fP (Assembly assembly, Type repositoryType)"
.br
.RI "\fICreate a new repository for the assembly specified \fP"
.ti -1c
.RI "\fBILoggerRepository\fP \fBCreateRepository\fP (string repositoryName, Type repositoryType)"
.br
.RI "\fICreate a new repository for the repository specified \fP"
.ti -1c
.RI "bool \fBExistsRepository\fP (string repositoryName)"
.br
.RI "\fITest if a named repository exists \fP"
.ti -1c
.RI "\fBILoggerRepository\fP[] \fBGetAllRepositories\fP ()"
.br
.RI "\fIGets a list of ILoggerRepository objects \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBOnLoggerRepositoryCreatedEvent\fP (\fBILoggerRepository\fP repository)"
.br
.RI "\fINotify the registered listeners that the repository has been created \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBLoggerRepositoryCreationEventHandler\fP \fBLoggerRepositoryCreatedEvent\fP"
.br
.RI "\fIEvent to notify that a logger repository has been created\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The implementation of the \fBIRepositorySelector\fP interface suitable for use with the compact framework 

This \fBIRepositorySelector\fP implementation is a simple mapping between repository name and ILoggerRepository object\&. 
.PP
The \&.NET Compact Framework 1\&.0 does not support retrieving assembly level attributes therefore unlike the \fC\fBDefaultRepositorySelector\fP\fP this selector does not examine the calling assembly for attributes\&. 
.PP
<author>Nicko Cadell</author> 
.PP
Definition at line 48 of file CompactRepositorySelector\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "log4net\&.Core\&.CompactRepositorySelector\&.CompactRepositorySelector (TypedefaultRepositoryType)"

.PP
Create a new repository selector 
.PP
\fBParameters:\fP
.RS 4
\fIdefaultRepositoryType\fP the type of the repositories to create, must implement ILoggerRepository
.RE
.PP
.PP
Create an new compact repository selector\&. The default type for repositories must be specified, an appropriate value would be \fBlog4net\&.Repository\&.Hierarchy\&.Hierarchy\fP\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentNullException\fP throw if \fIdefaultRepositoryType\fP  is null
.br
\fIArgumentOutOfRangeException\fP throw if \fIdefaultRepositoryType\fP  does not implement ILoggerRepository
.RE
.PP

.PP
Definition at line 76 of file CompactRepositorySelector\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBILoggerRepository\fP log4net\&.Core\&.CompactRepositorySelector\&.CreateRepository (Assemblyassembly, TyperepositoryType)"

.PP
Create a new repository for the assembly specified 
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP not used
.br
\fIrepositoryType\fP the type of repository to create, must implement ILoggerRepository
.RE
.PP
\fBReturns:\fP
.RS 4
the repository created
.RE
.PP
.PP
The \fIassembly\fP  argument is not used\&. This selector does not create a separate repository for each assembly\&. 
.PP
If the \fIrepositoryType\fP  is \fCnull\fP then the default repository type specified to the constructor is used\&. 
.PP
As a named repository is not specified the default repository is returned\&. The default repository is named \fClog4net-default-repository\fP\&. 
.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 172 of file CompactRepositorySelector\&.cs\&.
.SS "\fBILoggerRepository\fP log4net\&.Core\&.CompactRepositorySelector\&.CreateRepository (stringrepositoryName, TyperepositoryType)"

.PP
Create a new repository for the repository specified 
.PP
\fBParameters:\fP
.RS 4
\fIrepositoryName\fP the repository to associate with the ILoggerRepository
.br
\fIrepositoryType\fP the type of repository to create, must implement ILoggerRepository\&. If this param is null then the default repository type is used\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the repository created
.RE
.PP
.PP
The ILoggerRepository created will be associated with the repository specified such that a call to \fBGetRepository(string)\fP with the same repository specified will return the same repository instance\&. 
.PP
If the named repository already exists an exception will be thrown\&. 
.PP
If \fIrepositoryType\fP  is \fCnull\fP then the default repository type specified to the constructor is used\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentNullException\fP throw if \fIrepositoryName\fP  is null
.br
\fI\fBLogException\fP\fP throw if the \fIrepositoryName\fP  already exists
.RE
.PP

.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 219 of file CompactRepositorySelector\&.cs\&.
.SS "bool log4net\&.Core\&.CompactRepositorySelector\&.ExistsRepository (stringrepositoryName)"

.PP
Test if a named repository exists 
.PP
\fBParameters:\fP
.RS 4
\fIrepositoryName\fP the named repository to check
.RE
.PP
\fBReturns:\fP
.RS 4
\fCtrue\fP if the repository exists
.RE
.PP
.PP
Test if a named repository exists\&. Use \fBCreateRepository(string, Type)\fP to create a new repository and \fBGetRepository(string)\fP to retrieve a repository\&. 
.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 275 of file CompactRepositorySelector\&.cs\&.
.SS "\fBILoggerRepository\fP [] log4net\&.Core\&.CompactRepositorySelector\&.GetAllRepositories ()"

.PP
Gets a list of ILoggerRepository objects 
.PP
\fBReturns:\fP
.RS 4
an array of all known ILoggerRepository objects
.RE
.PP
.PP
Gets an array of all of the repositories created by this selector\&. 
.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 292 of file CompactRepositorySelector\&.cs\&.
.SS "\fBILoggerRepository\fP log4net\&.Core\&.CompactRepositorySelector\&.GetRepository (Assemblyassembly)"

.PP
Get the ILoggerRepository for the specified assembly 
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP not used
.RE
.PP
\fBReturns:\fP
.RS 4
The default ILoggerRepository
.RE
.PP
.PP
The \fIassembly\fP  argument is not used\&. This selector does not create a separate repository for each assembly\&. 
.PP
As a named repository is not specified the default repository is returned\&. The default repository is named \fClog4net-default-repository\fP\&. 
.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 113 of file CompactRepositorySelector\&.cs\&.
.SS "\fBILoggerRepository\fP log4net\&.Core\&.CompactRepositorySelector\&.GetRepository (stringrepositoryName)"

.PP
Get the named ILoggerRepository 
.PP
\fBParameters:\fP
.RS 4
\fIrepositoryName\fP the name of the repository to lookup
.RE
.PP
\fBReturns:\fP
.RS 4
The named ILoggerRepository
.RE
.PP
.PP
Get the named ILoggerRepository\&. The default repository is \fClog4net-default-repository\fP\&. Other repositories must be created using the \fBCreateRepository(string, Type)\fP\&. If the named repository does not exist an exception is thrown\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentNullException\fP throw if \fIrepositoryName\fP  is null
.br
\fI\fBLogException\fP\fP throw if the \fIrepositoryName\fP  does not exist
.RE
.PP

.PP
Implements \fBlog4net\&.Core\&.IRepositorySelector\fP\&.
.PP
Definition at line 133 of file CompactRepositorySelector\&.cs\&.
.SS "virtual void log4net\&.Core\&.CompactRepositorySelector\&.OnLoggerRepositoryCreatedEvent (\fBILoggerRepository\fPrepository)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Notify the registered listeners that the repository has been created 
.PP
\fBParameters:\fP
.RS 4
\fIrepository\fP The repository that has been created
.RE
.PP
.PP
Raises the <event cref='LoggerRepositoryCreatedEvent'>LoggerRepositoryCreatedEvent</event> event\&. 
.PP
Definition at line 348 of file CompactRepositorySelector\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "\fBLoggerRepositoryCreationEventHandler\fP log4net\&.Core\&.CompactRepositorySelector\&.LoggerRepositoryCreatedEvent\fC [add]\fP, \fC [remove]\fP"

.PP
Event to notify that a logger repository has been created\&. Event to notify that a logger repository has been created\&. 
.PP
Event raised when a new repository is created\&. The event source will be this selector\&. The event args will be a \fBLoggerRepositoryCreationEventArgs\fP which holds the newly created ILoggerRepository\&. 
.PP
Definition at line 333 of file CompactRepositorySelector\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
