.TH "NHibernate.Test.Legacy.FooBarTest" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Test.Legacy.FooBarTest \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Test\&.TestCase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBCollectionVersioning\fP ()"
.br
.ti -1c
.RI "void \fBForCertain\fP ()"
.br
.ti -1c
.RI "void \fBBagMultipleElements\fP ()"
.br
.ti -1c
.RI "void \fBWierdSession\fP ()"
.br
.ti -1c
.RI "void \fBDereferenceLazyCollection\fP ()"
.br
.ti -1c
.RI "void \fBMoveLazyCollection\fP ()"
.br
.ti -1c
.RI "void \fBCriteriaCollection\fP ()"
.br
.ti -1c
.RI "void \fBQuery\fP ()"
.br
.ti -1c
.RI "void \fBCascadeDeleteDetached\fP ()"
.br
.ti -1c
.RI "void \fBForeignKeys\fP ()"
.br
.ti -1c
.RI "void \fBNonlazyCollections\fP ()"
.br
.ti -1c
.RI "void \fBReuseDeletedCollection\fP ()"
.br
.ti -1c
.RI "void \fBPropertyRef\fP ()"
.br
.ti -1c
.RI "void \fBQueryCollectionOfValues\fP ()"
.br
.ti -1c
.RI "void \fBBatchLoad\fP ()"
.br
.ti -1c
.RI "void \fBFetchInitializedCollection\fP ()"
.br
.ti -1c
.RI "void \fBLateCollectionAdd\fP ()"
.br
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.ti -1c
.RI "void \fBListRemove\fP ()"
.br
.ti -1c
.RI "void \fBFetchInitializedCollectionDupe\fP ()"
.br
.ti -1c
.RI "void \fBSortables\fP ()"
.br
.ti -1c
.RI "void \fBFetchList\fP ()"
.br
.ti -1c
.RI "void \fBBagOneToMany\fP ()"
.br
.ti -1c
.RI "void \fBQueryLockMode\fP ()"
.br
.ti -1c
.RI "void \fBManyToManyBag\fP ()"
.br
.ti -1c
.RI "void \fBIdBag\fP ()"
.br
.ti -1c
.RI "void \fBForceOuterJoin\fP ()"
.br
.ti -1c
.RI "void \fBEmptyCollection\fP ()"
.br
.ti -1c
.RI "void \fBOneToOneGenerator\fP ()"
.br
.ti -1c
.RI "void \fBLimit\fP ()"
.br
.ti -1c
.RI "void \fBCustom\fP ()"
.br
.ti -1c
.RI "void \fBSaveAddDelete\fP ()"
.br
.ti -1c
.RI "void \fBNamedParams\fP ()"
.br
.ti -1c
.RI "void \fBVerifyParameterNamedMissing\fP ()"
.br
.ti -1c
.RI "void \fBVerifyParameterPositionalMissing\fP ()"
.br
.ti -1c
.RI "void \fBVerifyParameterPositionalInQuotes\fP ()"
.br
.ti -1c
.RI "void \fBVerifyParameterPositionalInQuotes2\fP ()"
.br
.ti -1c
.RI "void \fBVerifyParameterPositionalMissing2\fP ()"
.br
.ti -1c
.RI "void \fBDyna\fP ()"
.br
.ti -1c
.RI "void \fBFindByCriteria\fP ()"
.br
.ti -1c
.RI "void \fBAfterDelete\fP ()"
.br
.ti -1c
.RI "void \fBCollectionWhere\fP ()"
.br
.ti -1c
.RI "void \fBComponentParent\fP ()"
.br
.ti -1c
.RI "void \fBCollectionCache\fP ()"
.br
.ti -1c
.RI "void \fBAssociationId\fP ()"
.br
.ti -1c
.RI "void \fBCascadeSave\fP ()"
.br
.ti -1c
.RI "void \fBCompositeKeyPathExpressions\fP ()"
.br
.ti -1c
.RI "void \fBCollectionsInSelect\fP ()"
.br
.ti -1c
.RI "void \fBNewFlushing\fP ()"
.br
.ti -1c
.RI "void \fBPersistCollections\fP ()"
.br
.ti -1c
.RI "void \fBSaveFlush\fP ()"
.br
.ti -1c
.RI "void \fBCreateUpdate\fP ()"
.br
.ti -1c
.RI "void \fBUpdateCollections\fP ()"
.br
.ti -1c
.RI "void \fBLoad\fP ()"
.br
.ti -1c
.RI "void \fBCreate\fP ()"
.br
.ti -1c
.RI "void \fBCallback\fP ()"
.br
.ti -1c
.RI "void \fBPolymorphism\fP ()"
.br
.ti -1c
.RI "void \fBRemoveContains\fP ()"
.br
.ti -1c
.RI "void \fBCollectionOfSelf\fP ()"
.br
.ti -1c
.RI "void \fBFind\fP ()"
.br
.ti -1c
.RI "void \fBDeleteRecursive\fP ()"
.br
.ti -1c
.RI "void \fBReachability\fP ()"
.br
.ti -1c
.RI "void \fBPersistentLifecycle\fP ()"
.br
.ti -1c
.RI "void \fBEnumerable\fP ()"
.br
.ti -1c
.RI "void \fBEnumerableDisposable\fP ()"
.br
.RI "\fIAdding a test to verify that a database action can occur in the middle of an Enumeration\&. Under certain conditions an open DataReader can be kept open and cause any other action to fail\&. \fP"
.ti -1c
.RI "void \fBVersioning\fP ()"
.br
.ti -1c
.RI "void \fBVersionedCollections\fP ()"
.br
.ti -1c
.RI "void \fBRecursiveLoad\fP ()"
.br
.ti -1c
.RI "void \fBMultiColumnQueries\fP ()"
.br
.ti -1c
.RI "void \fBDeleteTransient\fP ()"
.br
.ti -1c
.RI "void \fBDeleteUpdatedTransient\fP ()"
.br
.ti -1c
.RI "void \fBUpdateOrder\fP ()"
.br
.ti -1c
.RI "void \fBUpdateFromTransient\fP ()"
.br
.ti -1c
.RI "void \fBArraysOfTimes\fP ()"
.br
.ti -1c
.RI "void \fBComponents\fP ()"
.br
.ti -1c
.RI "void \fBEnum\fP ()"
.br
.ti -1c
.RI "void \fBNoForeignKeyViolations\fP ()"
.br
.ti -1c
.RI "void \fBLazyCollections\fP ()"
.br
.ti -1c
.RI "void \fBNewSessionLifecycle\fP ()"
.br
.ti -1c
.RI "void \fBDisconnect\fP ()"
.br
.ti -1c
.RI "void \fBOrderBy\fP ()"
.br
.ti -1c
.RI "void \fBManyToOne\fP ()"
.br
.ti -1c
.RI "void \fBSaveDelete\fP ()"
.br
.ti -1c
.RI "void \fBProxyArray\fP ()"
.br
.ti -1c
.RI "void \fBCache\fP ()"
.br
.ti -1c
.RI "void \fBFindLoad\fP ()"
.br
.ti -1c
.RI "void \fBRefresh\fP ()"
.br
.ti -1c
.RI "void \fBRefreshTransient\fP ()"
.br
.ti -1c
.RI "void \fBAutoFlush\fP ()"
.br
.ti -1c
.RI "void \fBVeto\fP ()"
.br
.ti -1c
.RI "void \fBSerializableType\fP ()"
.br
.ti -1c
.RI "void \fBAutoFlushCollections\fP ()"
.br
.ti -1c
.RI "void \fBUserProvidedConnection\fP ()"
.br
.ti -1c
.RI "void \fBCachedCollection\fP ()"
.br
.ti -1c
.RI "void \fBComplicatedQuery\fP ()"
.br
.ti -1c
.RI "void \fBLoadAfterDelete\fP ()"
.br
.ti -1c
.RI "void \fBObjectType\fP ()"
.br
.ti -1c
.RI "void \fBAny\fP ()"
.br
.ti -1c
.RI "void \fBEmbeddedCompositeID\fP ()"
.br
.ti -1c
.RI "void \fBAutosaveChildren\fP ()"
.br
.ti -1c
.RI "void \fBOrphanDelete\fP ()"
.br
.ti -1c
.RI "void \fBTransientOrphanDelete\fP ()"
.br
.ti -1c
.RI "void \fBProxiesInCollections\fP ()"
.br
.ti -1c
.RI "void \fBPSCache\fP ()"
.br
.ti -1c
.RI "void \fBFormula\fP ()"
.br
.ti -1c
.RI "void \fBAddAll\fP ()"
.br
.RI "\fIThis test verifies that the \fBAddAll()\fP method works correctly for a persistent Set\&. \fP"
.ti -1c
.RI "void \fBCopy\fP ()"
.br
.ti -1c
.RI "void \fBParameterInHavingClause\fP ()"
.br
.ti -1c
.RI "void \fBParameterInOrderByClause\fP ()"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override IList \fBMappings\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 24 of file FooBarTest\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void NHibernate\&.Test\&.Legacy\&.FooBarTest\&.AddAll ()"

.PP
This test verifies that the \fBAddAll()\fP method works correctly for a persistent Set\&. 
.PP
Definition at line 5460 of file FooBarTest\&.cs\&.
.SS "void NHibernate\&.Test\&.Legacy\&.FooBarTest\&.EnumerableDisposable ()"

.PP
Adding a test to verify that a database action can occur in the middle of an Enumeration\&. Under certain conditions an open DataReader can be kept open and cause any other action to fail\&. 
.PP
Definition at line 3484 of file FooBarTest\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
