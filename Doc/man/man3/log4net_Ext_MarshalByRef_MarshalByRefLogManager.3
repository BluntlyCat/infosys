.TH "log4net.Ext.MarshalByRef.MarshalByRefLogManager" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Ext.MarshalByRef.MarshalByRefLogManager \- 
.PP
\fBLogManager\fP that returns \fBMarshalByRefLogImpl\fP loggers\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBILog\fP \fBExists\fP (string name)"
.br
.RI "\fIReturns the named logger if it exists \fP"
.ti -1c
.RI "static \fBILog\fP \fBExists\fP (string domain, string name)"
.br
.RI "\fIReturns the named logger if it exists \fP"
.ti -1c
.RI "static \fBILog\fP \fBExists\fP (Assembly assembly, string name)"
.br
.RI "\fIReturns the named logger if it exists \fP"
.ti -1c
.RI "static \fBILog\fP[] \fBGetCurrentLoggers\fP ()"
.br
.RI "\fIReturns all the currently defined loggers in the default domain\&. \fP"
.ti -1c
.RI "static \fBILog\fP[] \fBGetCurrentLoggers\fP (string domain)"
.br
.RI "\fIReturns all the currently defined loggers in the specified domain\&. \fP"
.ti -1c
.RI "static \fBILog\fP[] \fBGetCurrentLoggers\fP (Assembly assembly)"
.br
.RI "\fIReturns all the currently defined loggers in the specified assembly's domain\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (string name)"
.br
.RI "\fIRetrieve or create a named logger\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (string domain, string name)"
.br
.RI "\fIRetrieve or create a named logger\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (Assembly assembly, string name)"
.br
.RI "\fIRetrieve or create a named logger\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (Type type)"
.br
.RI "\fIShorthand for \fBLogManager\&.GetLogger(string)\fP\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (string domain, Type type)"
.br
.RI "\fIShorthand for \fBLogManager\&.GetLogger(string)\fP\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBGetLogger\fP (Assembly assembly, Type type)"
.br
.RI "\fIShorthand for \fBLogManager\&.GetLogger(string)\fP\&. \fP"
.ti -1c
.RI "static \fBILog\fP \fBWrapLogger\fP (\fBILogger\fP logger)"
.br
.RI "\fILookup the wrapper object for the logger specified \fP"
.ti -1c
.RI "static \fBILog\fP[] \fBWrapLoggers\fP (\fBILogger\fP[] loggers)"
.br
.RI "\fILookup the wrapper objects for the loggers specified \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBLogManager\fP that returns \fBMarshalByRefLogImpl\fP loggers\&. 


.PP
Definition at line 37 of file MarshalByRefLogManager\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.Exists (stringname)\fC [static]\fP"

.PP
Returns the named logger if it exists If the named logger exists (in the default hierarchy) then it returns a reference to the logger, otherwise it returns \fCnull\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The fully qualified logger name to look for
.RE
.PP
\fBReturns:\fP
.RS 4
The logger found, or null
.RE
.PP

.PP
Definition at line 69 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.Exists (stringdomain, stringname)\fC [static]\fP"

.PP
Returns the named logger if it exists If the named logger exists (in the specified domain) then it returns a reference to the logger, otherwise it returns \fCnull\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIdomain\fP the domain to lookup in
.br
\fIname\fP The fully qualified logger name to look for
.RE
.PP
\fBReturns:\fP
.RS 4
The logger found, or null
.RE
.PP

.PP
Definition at line 85 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.Exists (Assemblyassembly, stringname)\fC [static]\fP"

.PP
Returns the named logger if it exists If the named logger exists (in the specified assembly's domain) then it returns a reference to the logger, otherwise it returns \fCnull\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP the assembly to use to lookup the domain
.br
\fIname\fP The fully qualified logger name to look for
.RE
.PP
\fBReturns:\fP
.RS 4
The logger found, or null
.RE
.PP

.PP
Definition at line 101 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP [] log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetCurrentLoggers ()\fC [static]\fP"

.PP
Returns all the currently defined loggers in the default domain\&. The root logger is \fBnot\fP included in the returned array\&.
.PP
\fBReturns:\fP
.RS 4
All the defined loggers
.RE
.PP

.PP
Definition at line 113 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP [] log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetCurrentLoggers (stringdomain)\fC [static]\fP"

.PP
Returns all the currently defined loggers in the specified domain\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdomain\fP the domain to lookup in
.RE
.PP
.PP
The root logger is \fBnot\fP included in the returned array\&. 
.PP
\fBReturns:\fP
.RS 4
All the defined loggers
.RE
.PP

.PP
Definition at line 126 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP [] log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetCurrentLoggers (Assemblyassembly)\fC [static]\fP"

.PP
Returns all the currently defined loggers in the specified assembly's domain\&. 
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP the assembly to use to lookup the domain
.RE
.PP
.PP
The root logger is \fBnot\fP included in the returned array\&. 
.PP
\fBReturns:\fP
.RS 4
All the defined loggers
.RE
.PP

.PP
Definition at line 139 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (stringname)\fC [static]\fP"

.PP
Retrieve or create a named logger\&. Retrieve a logger named as the \fIname\fP  parameter\&. If the named logger already exists, then the existing instance will be returned\&. Otherwise, a new instance is created\&.
.PP
By default, loggers do not have a set level but inherit it from the hierarchy\&. This is one of the central features of \fBlog4net\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 159 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (stringdomain, stringname)\fC [static]\fP"

.PP
Retrieve or create a named logger\&. Retrieve a logger named as the \fIname\fP  parameter\&. If the named logger already exists, then the existing instance will be returned\&. Otherwise, a new instance is created\&.
.PP
By default, loggers do not have a set level but inherit it from the hierarchy\&. This is one of the central features of \fBlog4net\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIdomain\fP the domain to lookup in
.br
\fIname\fP The name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 180 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (Assemblyassembly, stringname)\fC [static]\fP"

.PP
Retrieve or create a named logger\&. Retrieve a logger named as the \fIname\fP  parameter\&. If the named logger already exists, then the existing instance will be returned\&. Otherwise, a new instance is created\&.
.PP
By default, loggers do not have a set level but inherit it from the hierarchy\&. This is one of the central features of \fBlog4net\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP the assembly to use to lookup the domain
.br
\fIname\fP The name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 201 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (Typetype)\fC [static]\fP"

.PP
Shorthand for \fBLogManager\&.GetLogger(string)\fP\&. Get the logger for the fully qualified name of the type specified\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP The full name of \fItype\fP  will be used as the name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 215 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (stringdomain, Typetype)\fC [static]\fP"

.PP
Shorthand for \fBLogManager\&.GetLogger(string)\fP\&. Get the logger for the fully qualified name of the type specified\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdomain\fP the domain to lookup in
.br
\fItype\fP The full name of \fItype\fP  will be used as the name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 230 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.GetLogger (Assemblyassembly, Typetype)\fC [static]\fP"

.PP
Shorthand for \fBLogManager\&.GetLogger(string)\fP\&. Get the logger for the fully qualified name of the type specified\&. 
.PP
\fBParameters:\fP
.RS 4
\fIassembly\fP the assembly to use to lookup the domain
.br
\fItype\fP The full name of \fItype\fP  will be used as the name of the logger to retrieve\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the logger with the name specified
.RE
.PP

.PP
Definition at line 245 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.WrapLogger (\fBILogger\fPlogger)\fC [static]\fP"

.PP
Lookup the wrapper object for the logger specified 
.PP
\fBParameters:\fP
.RS 4
\fIlogger\fP the logger to get the wrapper for
.RE
.PP
\fBReturns:\fP
.RS 4
the wrapper for the logger specified
.RE
.PP

.PP
Definition at line 259 of file MarshalByRefLogManager\&.cs\&.
.SS "static \fBILog\fP [] log4net\&.Ext\&.MarshalByRef\&.MarshalByRefLogManager\&.WrapLoggers (\fBILogger\fP[]loggers)\fC [static]\fP"

.PP
Lookup the wrapper objects for the loggers specified 
.PP
\fBParameters:\fP
.RS 4
\fIloggers\fP the loggers to get the wrappers for
.RE
.PP
\fBReturns:\fP
.RS 4
Lookup the wrapper objects for the loggers specified
.RE
.PP

.PP
Definition at line 269 of file MarshalByRefLogManager\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
