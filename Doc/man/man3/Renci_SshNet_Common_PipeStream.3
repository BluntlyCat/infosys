.TH "Renci.SshNet.Common.PipeStream" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Renci.SshNet.Common.PipeStream \- 
.PP
\fBPipeStream\fP is a thread-safe read/write data stream for use between two threads in a single-producer/single-consumer type problem\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits Stream\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBFlush\fP ()"
.br
.ti -1c
.RI "override long \fBSeek\fP (long offset, SeekOrigin origin)"
.br
.ti -1c
.RI "override void \fBSetLength\fP (long value)"
.br
.ti -1c
.RI "override int \fBRead\fP (byte[] buffer, int offset, int count)"
.br
.ti -1c
.RI "override void \fBWrite\fP (byte[] buffer, int offset, int count)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "long \fBMaxBufferLength\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the maximum number of bytes to store in the buffer\&. \fP"
.ti -1c
.RI "bool \fBBlockLastReadBuffer\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets a value indicating whether to block last read method before the buffer is empty\&. When true, Read() will block until it can fill the passed in buffer and count\&. When false, Read() will not block, returning all the available buffer data\&. \fP"
.ti -1c
.RI "override bool \fBCanRead\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBCanSeek\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBCanWrite\fP\fC [get]\fP"
.br
.ti -1c
.RI "override long \fBLength\fP\fC [get]\fP"
.br
.ti -1c
.RI "override long \fBPosition\fP\fC [get, set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBPipeStream\fP is a thread-safe read/write data stream for use between two threads in a single-producer/single-consumer type problem\&. 

<version>2006/10/13 1\&.0</version> 
.PP
Update on 2008/10/9 1\&.1 - uses Monitor instead of Manual Reset events for more elegant synchronicity\&.
.PP
<license> Copyright (c) 2006 James Kolpack (james dot kolpack at google mail)
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&. </license> 
.PP
Definition at line 34 of file PipeStream\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void Renci\&.SshNet\&.Common\&.PipeStream\&.Flush ()"
summary> When overridden in a derived class, sets the position within the current stream\&. /summary> returns> The new position within the current stream\&. /returns> param name='offset'>A byte offset relative to the origin parameter\&. 
.PP
param name='origin'>A value of type \fBT:System\&.IO\&.SeekOrigin\fP indicating the reference point used to obtain the new position\&. 
.PP
exception cref='T:System\&.IO\&.IOException'>An I/O error occurs\&. 
.PP
exception cref='T:System\&.NotSupportedException'>The stream does not support seeking, such as if the stream is constructed from a pipe or console output\&. 
.PP
exception cref='T:System\&.ObjectDisposedException'>Methods were called after the stream was closed\&. 
.PP
<filterpriority>1</filterpriority> 
.PP
Definition at line 110 of file PipeStream\&.cs\&.
.SS "override long Renci\&.SshNet\&.Common\&.PipeStream\&.Seek (longoffset, SeekOriginorigin)"
summary> When overridden in a derived class, sets the length of the current stream\&. /summary> param name='value'>The desired length of the current stream in bytes\&. 
.PP
exception cref='T:System\&.NotSupportedException'>The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output\&. 
.PP
exception cref='T:System\&.IO\&.IOException'>An I/O error occurs\&. 
.PP
exception cref='T:System\&.ObjectDisposedException'>Methods were called after the stream was closed\&. 
.PP
<filterpriority>2</filterpriority> 
.PP
Definition at line 128 of file PipeStream\&.cs\&.
.SS "override void Renci\&.SshNet\&.Common\&.PipeStream\&.SetLength (longvalue)"
summary> When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read\&. /summary> returns> The total number of bytes read into the buffer\&. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached\&. /returns> param name='offset'>The zero-based byte offset in buffer at which to begin storing the data read from the current stream\&. 
.PP
param name='count'>The maximum number of bytes to be read from the current stream\&. 
.PP
param name='buffer'>An array of bytes\&. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source\&. 
.PP
exception cref='T:System\&.ArgumentException'>The sum of offset and count is larger than the buffer length\&. 
.PP
exception cref='T:System\&.ObjectDisposedException'>Methods were called after the stream was closed\&. 
.PP
exception cref='T:System\&.NotSupportedException'>The stream does not support reading\&. 
.PP
exception cref='T:System\&.ArgumentNullException'>buffer is null\&. 
.PP
exception cref='T:System\&.IO\&.IOException'>An I/O error occurs\&. 
.PP
exception cref='T:System\&.ArgumentOutOfRangeException'>offset or count is negative\&. 
.PP
<filterpriority>1</filterpriority> 
.PP
Definition at line 140 of file PipeStream\&.cs\&.
.SS "override void Renci\&.SshNet\&.Common\&.PipeStream\&.Write (byte[]buffer, intoffset, intcount)"
summary> When overridden in a derived class, gets a value indicating whether the current stream supports reading\&. /summary> returns> true if the stream supports reading; otherwise, false\&. /returns> filterpriority>1</filterpriority> 
.PP
Definition at line 217 of file PipeStream\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "bool Renci\&.SshNet\&.Common\&.PipeStream\&.BlockLastReadBuffer\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets a value indicating whether to block last read method before the buffer is empty\&. When true, Read() will block until it can fill the passed in buffer and count\&. When false, Read() will not block, returning all the available buffer data\&. Setting to true will remove the possibility of ending a stream reader prematurely\&. 
.PP
\fCtrue\fP if block last read method before the buffer is empty; otherwise, \fCfalse\fP\&. 
.PP
summary> When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device\&. /summary>
.PP
exception cref='T:System\&.IO\&.IOException'>An I/O error occurs\&. 
.PP
<filterpriority>2</filterpriority> 
.PP
Definition at line 88 of file PipeStream\&.cs\&.
.SS "override bool Renci\&.SshNet\&.Common\&.PipeStream\&.CanRead\fC [get]\fP"
summary> When overridden in a derived class, gets a value indicating whether the current stream supports seeking\&. /summary> returns> true if the stream supports seeking; otherwise, false\&. /returns> filterpriority>1</filterpriority> 
.PP
Definition at line 254 of file PipeStream\&.cs\&.
.SS "override bool Renci\&.SshNet\&.Common\&.PipeStream\&.CanSeek\fC [get]\fP"
summary> When overridden in a derived class, gets a value indicating whether the current stream supports writing\&. /summary> returns> true if the stream supports writing; otherwise, false\&. /returns> filterpriority>1</filterpriority> 
.PP
Definition at line 266 of file PipeStream\&.cs\&.
.SS "override bool Renci\&.SshNet\&.Common\&.PipeStream\&.CanWrite\fC [get]\fP"
summary> When overridden in a derived class, gets the length in bytes of the stream\&. /summary> returns> A long value representing the length of the stream in bytes\&. /returns>
.PP
exception cref='T:System\&.NotSupportedException'>A class derived from Stream does not support seeking\&. 
.PP
exception cref='T:System\&.ObjectDisposedException'>Methods were called after the stream was closed\&. 
.PP
<filterpriority>1</filterpriority> 
.PP
Definition at line 278 of file PipeStream\&.cs\&.
.SS "override long Renci\&.SshNet\&.Common\&.PipeStream\&.Length\fC [get]\fP"
summary> When overridden in a derived class, gets or sets the position within the current stream\&. /summary> returns> The current position within the stream\&. /returns> exception cref='T:System\&.IO\&.IOException'>An I/O error occurs\&. 
.PP
exception cref='T:System\&.NotSupportedException'>The stream does not support seeking\&. 
.PP
exception cref='T:System\&.ObjectDisposedException'>Methods were called after the stream was closed\&. 
.PP
<filterpriority>1</filterpriority> 
.PP
Definition at line 292 of file PipeStream\&.cs\&.
.SS "long Renci\&.SshNet\&.Common\&.PipeStream\&.MaxBufferLength\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the maximum number of bytes to store in the buffer\&. The length of the max buffer\&.
.PP
Definition at line 71 of file PipeStream\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
