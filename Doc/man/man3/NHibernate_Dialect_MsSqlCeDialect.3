.TH "NHibernate.Dialect.MsSqlCeDialect" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Dialect.MsSqlCeDialect \- 
.PP
A dialect for SQL Server Everywhere (SQL Server CE)\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Inherited by \fBNHibernate\&.Dialect\&.MsSqlCe40Dialect\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override \fBIDataBaseSchema\fP \fBGetDataBaseSchema\fP (DbConnection connection)"
.br
.ti -1c
.RI "override \fBSqlString\fP \fBGetLimitString\fP (\fBSqlString\fP querySqlString, \fBSqlString\fP offset, \fBSqlString\fP limit)"
.br
.RI "\fIAttempts to add a \fCLIMIT\fP clause to the given SQL \fCSELECT\fP\&. Expects any database-specific offset and limit adjustments to have already been performed (ex\&. UseMaxForLimit, OffsetStartsAtOne)\&. \fP"
.ti -1c
.RI "override string \fBQualify\fP (string catalog, string schema, string table)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override string \fBAddColumnString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBNullColumnString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBQualifyIndexName\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBForUpdateString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsIdentityColumns\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBIdentitySelectString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBIdentityColumnString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override string \fBSelectGUIDString\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsLimit\fP\fC [get]\fP"
.br
.ti -1c
.RI "override bool \fBSupportsLimitOffset\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A dialect for SQL Server Everywhere (SQL Server CE)\&. 


.PP
Definition at line 16 of file MsSqlCeDialect\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override \fBSqlString\fP NHibernate\&.Dialect\&.MsSqlCeDialect\&.GetLimitString (\fBSqlString\fPqueryString, \fBSqlString\fPoffset, \fBSqlString\fPlimit)\fC [virtual]\fP"

.PP
Attempts to add a \fCLIMIT\fP clause to the given SQL \fCSELECT\fP\&. Expects any database-specific offset and limit adjustments to have already been performed (ex\&. UseMaxForLimit, OffsetStartsAtOne)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIqueryString\fP The SqlString to base the limit query off\&.
.br
\fIoffset\fP Offset of the first row to be returned by the query\&. This may be represented as a parameter, a string literal, or a null value if no limit is requested\&. This should have already been adjusted to account for OffsetStartsAtOne\&.
.br
\fIlimit\fP Maximum number of rows to be returned by the query\&. This may be represented as a parameter, a string literal, or a null value if no offset is requested\&. This should have already been adjusted to account for UseMaxForLimit\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A new SqlString that contains the \fCLIMIT\fP clause\&. Returns \fCnull\fP if \fIqueryString\fP  represents a SQL statement to which a limit clause cannot be added, for example when the query string is custom SQL invoking a stored procedure\&.
.RE
.PP

.PP
Reimplemented from \fBNHibernate\&.Dialect\&.Dialect\fP\&.
.PP
Definition at line 129 of file MsSqlCeDialect\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
