.TH "log4net.Util.EmptyDictionary" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Util.EmptyDictionary \- 
.PP
An always empty IDictionary\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IDictionary\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBCopyTo\fP (System\&.Array array, int index)"
.br
.RI "\fICopies the elements of the ICollection to an Array, starting at a particular Array index\&. \fP"
.ti -1c
.RI "void \fBAdd\fP (object key, object value)"
.br
.RI "\fIAdds an element with the provided key and value to the \fBEmptyDictionary\fP\&. \fP"
.ti -1c
.RI "void \fBClear\fP ()"
.br
.RI "\fIRemoves all elements from the \fBEmptyDictionary\fP\&. \fP"
.ti -1c
.RI "bool \fBContains\fP (object key)"
.br
.RI "\fIDetermines whether the \fBEmptyDictionary\fP contains an element with the specified key\&. \fP"
.ti -1c
.RI "IDictionaryEnumerator \fBGetEnumerator\fP ()"
.br
.RI "\fIReturns an enumerator that can iterate through a collection\&. \fP"
.ti -1c
.RI "void \fBRemove\fP (object key)"
.br
.RI "\fIRemoves the element with the specified key from the \fBEmptyDictionary\fP\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "static \fBEmptyDictionary\fP \fBInstance\fP\fC [get]\fP"
.br
.RI "\fIGets the singleton instance of the \fBEmptyDictionary\fP\&. \fP"
.ti -1c
.RI "bool \fBIsSynchronized\fP\fC [get]\fP"
.br
.RI "\fIGets a value indicating if access to the ICollection is synchronized (thread-safe)\&. \fP"
.ti -1c
.RI "int \fBCount\fP\fC [get]\fP"
.br
.RI "\fIGets the number of elements contained in the ICollection \fP"
.ti -1c
.RI "object \fBSyncRoot\fP\fC [get]\fP"
.br
.RI "\fIGets an object that can be used to synchronize access to the ICollection\&. \fP"
.ti -1c
.RI "bool \fBIsFixedSize\fP\fC [get]\fP"
.br
.RI "\fIGets a value indicating whether the \fBEmptyDictionary\fP has a fixed size\&. \fP"
.ti -1c
.RI "bool \fBIsReadOnly\fP\fC [get]\fP"
.br
.RI "\fIGets a value indicating whether the \fBEmptyDictionary\fP is read-only\&. \fP"
.ti -1c
.RI "System\&.Collections\&.ICollection \fBKeys\fP\fC [get]\fP"
.br
.RI "\fIGets an ICollection containing the keys of the \fBEmptyDictionary\fP\&. \fP"
.ti -1c
.RI "System\&.Collections\&.ICollection \fBValues\fP\fC [get]\fP"
.br
.RI "\fIGets an ICollection containing the values of the \fBEmptyDictionary\fP\&. \fP"
.ti -1c
.RI "object \fBthis[object key]\fP\fC [get, set]\fP"
.br
.RI "\fIGets or sets the element with the specified key\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
An always empty IDictionary\&. 

A singleton implementation of the IDictionary interface that always represents an empty collection\&. 
.PP
<author>Nicko Cadell</author> <author>Gert Driesen</author> 
.PP
Definition at line 39 of file EmptyDictionary\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void log4net\&.Util\&.EmptyDictionary\&.Add (objectkey, objectvalue)"

.PP
Adds an element with the provided key and value to the \fBEmptyDictionary\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The object to use as the key of the element to add\&.
.br
\fIvalue\fP The object to use as the value of the element to add\&.
.RE
.PP
.PP
As the collection is empty no new values can be added\&. A InvalidOperationException is thrown if this method is called\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidOperationException\fP This dictionary is always empty and cannot be modified\&.
.RE
.PP

.PP
Definition at line 184 of file EmptyDictionary\&.cs\&.
.SS "void log4net\&.Util\&.EmptyDictionary\&.Clear ()"

.PP
Removes all elements from the \fBEmptyDictionary\fP\&. As the collection is empty no values can be removed\&. A InvalidOperationException is thrown if this method is called\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidOperationException\fP This dictionary is always empty and cannot be modified\&.
.RE
.PP

.PP
Definition at line 199 of file EmptyDictionary\&.cs\&.
.SS "bool log4net\&.Util\&.EmptyDictionary\&.Contains (objectkey)"

.PP
Determines whether the \fBEmptyDictionary\fP contains an element with the specified key\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key to locate in the \fBEmptyDictionary\fP\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCfalse\fP
.RE
.PP
.PP
As the collection is empty the \fBContains\fP method always returns \fCfalse\fP\&. 
.PP
Definition at line 215 of file EmptyDictionary\&.cs\&.
.SS "void log4net\&.Util\&.EmptyDictionary\&.CopyTo (System\&.Arrayarray, intindex)"

.PP
Copies the elements of the ICollection to an Array, starting at a particular Array index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIarray\fP The one-dimensional Array that is the destination of the elements copied from ICollection\&. The Array must have zero-based indexing\&.
.br
\fIindex\fP The zero-based index in array at which copying begins\&.
.RE
.PP
.PP
As the collection is empty no values are copied into the array\&. 
.PP
Definition at line 92 of file EmptyDictionary\&.cs\&.
.SS "IDictionaryEnumerator log4net\&.Util\&.EmptyDictionary\&.GetEnumerator ()"

.PP
Returns an enumerator that can iterate through a collection\&. 
.PP
\fBReturns:\fP
.RS 4
An IEnumerator that can be used to iterate through the collection\&. 
.RE
.PP
.PP
As the collection is empty a \fBNullEnumerator\fP is returned\&. 
.PP
Definition at line 232 of file EmptyDictionary\&.cs\&.
.SS "void log4net\&.Util\&.EmptyDictionary\&.Remove (objectkey)"

.PP
Removes the element with the specified key from the \fBEmptyDictionary\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key of the element to remove\&.
.RE
.PP
.PP
As the collection is empty no values can be removed\&. A InvalidOperationException is thrown if this method is called\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidOperationException\fP This dictionary is always empty and cannot be modified\&.
.RE
.PP

.PP
Definition at line 248 of file EmptyDictionary\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "int log4net\&.Util\&.EmptyDictionary\&.Count\fC [get]\fP"

.PP
Gets the number of elements contained in the ICollection The number of elements contained in the ICollection\&. 
.PP
As the collection is empty the \fBCount\fP is always \fC0\fP\&. 
.PP
Definition at line 125 of file EmptyDictionary\&.cs\&.
.SS "\fBEmptyDictionary\fP log4net\&.Util\&.EmptyDictionary\&.Instance\fC [static]\fP, \fC [get]\fP"

.PP
Gets the singleton instance of the \fBEmptyDictionary\fP\&. 
.PP
\fBReturns:\fP
.RS 4
The singleton instance of the \fBEmptyDictionary\fP\&.
.RE
.PP
.PP
Gets the singleton instance of the \fBEmptyDictionary\fP\&. 
.PP
Definition at line 69 of file EmptyDictionary\&.cs\&.
.SS "bool log4net\&.Util\&.EmptyDictionary\&.IsFixedSize\fC [get]\fP"

.PP
Gets a value indicating whether the \fBEmptyDictionary\fP has a fixed size\&. \fCtrue\fP
.PP
As the collection is empty \fBIsFixedSize\fP always returns \fCtrue\fP\&. 
.PP
Definition at line 263 of file EmptyDictionary\&.cs\&.
.SS "bool log4net\&.Util\&.EmptyDictionary\&.IsReadOnly\fC [get]\fP"

.PP
Gets a value indicating whether the \fBEmptyDictionary\fP is read-only\&. \fCtrue\fP
.PP
As the collection is empty \fBIsReadOnly\fP always returns \fCtrue\fP\&. 
.PP
Definition at line 277 of file EmptyDictionary\&.cs\&.
.SS "bool log4net\&.Util\&.EmptyDictionary\&.IsSynchronized\fC [get]\fP"

.PP
Gets a value indicating if access to the ICollection is synchronized (thread-safe)\&. \fBtrue\fP if access to the ICollection is synchronized (thread-safe); otherwise, \fBfalse\fP\&. 
.PP
For the \fBEmptyCollection\fP this property is always \fBtrue\fP\&. 
.PP
Definition at line 109 of file EmptyDictionary\&.cs\&.
.SS "System\&.Collections\&.ICollection log4net\&.Util\&.EmptyDictionary\&.Keys\fC [get]\fP"

.PP
Gets an ICollection containing the keys of the \fBEmptyDictionary\fP\&. An ICollection containing the keys of the \fBEmptyDictionary\fP\&.
.PP
As the collection is empty a \fBEmptyCollection\fP is returned\&. 
.PP
Definition at line 291 of file EmptyDictionary\&.cs\&.
.SS "object log4net\&.Util\&.EmptyDictionary\&.SyncRoot\fC [get]\fP"

.PP
Gets an object that can be used to synchronize access to the ICollection\&. An object that can be used to synchronize access to the ICollection\&. 
.PP
As the collection is empty and thread safe and synchronized this instance is also the \fBSyncRoot\fP object\&. 
.PP
Definition at line 142 of file EmptyDictionary\&.cs\&.
.SS "object log4net\&.Util\&.EmptyDictionary\&.this[object key]\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the element with the specified key\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key of the element to get or set\&.
.RE
.PP
.PP
\fCnull\fP
.PP
As the collection is empty no values can be looked up or stored\&. If the index getter is called then \fCnull\fP is returned\&. A InvalidOperationException is thrown if the setter is called\&. 
.PP
\fBExceptions:\fP
.RS 4
\fIInvalidOperationException\fP This dictionary is always empty and cannot be modified\&.
.RE
.PP

.PP
Definition at line 323 of file EmptyDictionary\&.cs\&.
.SS "System\&.Collections\&.ICollection log4net\&.Util\&.EmptyDictionary\&.Values\fC [get]\fP"

.PP
Gets an ICollection containing the values of the \fBEmptyDictionary\fP\&. An ICollection containing the values of the \fBEmptyDictionary\fP\&.
.PP
As the collection is empty a \fBEmptyCollection\fP is returned\&. 
.PP
Definition at line 305 of file EmptyDictionary\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
