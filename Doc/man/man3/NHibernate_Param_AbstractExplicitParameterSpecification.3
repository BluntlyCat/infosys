.TH "NHibernate.Param.AbstractExplicitParameterSpecification" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Param.AbstractExplicitParameterSpecification \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBNHibernate\&.Param\&.IPageableParameterSpecification\fP\&.
.PP
Inherited by \fBNHibernate\&.Param\&.NamedParameterSpecification\fP, and \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "abstract string \fBRenderDisplayInfo\fP ()"
.br
.RI "\fIRender this parameter into displayable info (for logging, etc)\&. \fP"
.ti -1c
.RI "abstract IEnumerable< string > \fBGetIdsForBackTrack\fP (\fBIMapping\fP sessionFactory)"
.br
.RI "\fIAn string array to unique identify this parameter-span inside an \fBNHibernate\&.SqlCommand\&.SqlString\fP\&. \fP"
.ti -1c
.RI "abstract void \fBBind\fP (IDbCommand command, IList< \fBParameter\fP > sqlQueryParametersList, \fBQueryParameters\fP queryParameters, \fBISessionImplementor\fP session)"
.br
.RI "\fIBind the appropriate value into the given command\&. \fP"
.ti -1c
.RI "abstract void \fBBind\fP (IDbCommand command, IList< \fBParameter\fP > multiSqlQueryParametersList, int singleSqlParametersOffset, IList< \fBParameter\fP > sqlQueryParametersList, \fBQueryParameters\fP queryParameters, \fBISessionImplementor\fP session)"
.br
.RI "\fIBind the appropriate value into the given command\&. \fP"
.ti -1c
.RI "abstract void \fBSetEffectiveType\fP (\fBQueryParameters\fP queryParameters)"
.br
.RI "\fIExplicit parameters may have no set the \fBIParameterSpecification\&.ExpectedType\fP during query parse\&. \fP"
.ti -1c
.RI "abstract int \fBGetSkipValue\fP (\fBQueryParameters\fP queryParameters)"
.br
.RI "\fIRetrieve the skip/offset value for the query \fP"
.ti -1c
.RI "void \fBIsSkipParameter\fP ()"
.br
.RI "\fINotifies the parameter that it is a 'skip' parameter, and should calculate its value using the dialect settings \fP"
.ti -1c
.RI "void \fBIsTakeParameterWithSkipParameter\fP (\fBIPageableParameterSpecification\fP skipParameter)"
.br
.RI "\fINotifies the parameter that it is a 'take' parameter, and should calculate its value using the dialect settings and the value of the supplied skipParameter\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBAbstractExplicitParameterSpecification\fP (int sourceLine, int sourceColumn)"
.br
.RI "\fIConstructs an \fBAbstractExplicitParameterSpecification\fP\&. \fP"
.ti -1c
.RI "int \fBGetParemeterSpan\fP (\fBIMapping\fP sessionFactory)"
.br
.ti -1c
.RI "object \fBGetPagingValue\fP (object value, \fBDialect\&.Dialect\fP dialect, \fBQueryParameters\fP queryParameters)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "int \fBSourceLine\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBSourceColumn\fP\fC [get]\fP"
.br
.ti -1c
.RI "\fBIType\fP \fBExpectedType\fP\fC [get, set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 10 of file AbstractExplicitParameterSpecification\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.AbstractExplicitParameterSpecification (intsourceLine, intsourceColumn)\fC [protected]\fP"

.PP
Constructs an \fBAbstractExplicitParameterSpecification\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceLine\fP sourceLine
.br
\fIsourceColumn\fP sourceColumn
.RE
.PP

.PP
Definition at line 24 of file AbstractExplicitParameterSpecification\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "abstract void NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.Bind (IDbCommandcommand, IList< \fBParameter\fP >sqlQueryParametersList, \fBQueryParameters\fPqueryParameters, \fBISessionImplementor\fPsession)\fC [pure virtual]\fP"

.PP
Bind the appropriate value into the given command\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcommand\fP The command into which the value should be bound\&.
.br
\fIsqlQueryParametersList\fP The list of Sql query parameter in the exact sequence they are present in the query\&.
.br
\fIqueryParameters\fP The defined values for the current query execution\&.
.br
\fIsession\fP The session against which the current execution is occuring\&.
.RE
.PP

.PP
Implements \fBNHibernate\&.Param\&.IParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.NamedParameterSpecification\fP, and \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP\&.
.SS "abstract void NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.Bind (IDbCommandcommand, IList< \fBParameter\fP >multiSqlQueryParametersList, intsingleSqlParametersOffset, IList< \fBParameter\fP >sqlQueryParametersList, \fBQueryParameters\fPqueryParameters, \fBISessionImplementor\fPsession)\fC [pure virtual]\fP"

.PP
Bind the appropriate value into the given command\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcommand\fP The command into which the value should be bound\&.
.br
\fImultiSqlQueryParametersList\fP The parameter-list of the whole query of the command\&.
.br
\fIsingleSqlParametersOffset\fP The offset from where start the list of IDataParameter in the given \fIcommand\fP  for the query where this \fBIParameterSpecification\fP was used\&. 
.br
\fIsqlQueryParametersList\fP The list of Sql query parameter in the exact sequence they are present in the query where this \fBIParameterSpecification\fP was used\&.
.br
\fIqueryParameters\fP The defined values for the query where this \fBIParameterSpecification\fP was used\&.
.br
\fIsession\fP The session against which the current execution is occuring\&.
.RE
.PP
.PP
Suppose the \fIcommand\fP  is composed by two queries\&. The \fIsingleSqlParametersOffset\fP  for the first query is zero\&. If the first query in \fIcommand\fP  has 12 parameters (size of its SqlType array) the offset to bind all \fBIParameterSpecification\fPs of the second query in the \fIcommand\fP  is 12 (for the first query we are using from 0 to 11)\&. 
.PP
Implements \fBNHibernate\&.Param\&.IParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.NamedParameterSpecification\fP, and \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP\&.
.SS "abstract IEnumerable<string> NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.GetIdsForBackTrack (\fBIMapping\fPsessionFactory)\fC [pure virtual]\fP"

.PP
An string array to unique identify this parameter-span inside an \fBNHibernate\&.SqlCommand\&.SqlString\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsessionFactory\fP The session-factory (used only because required by IType)\&.
.RE
.PP
.PP
The each id-for-backtrack is supposed to be unique in the context of a query\&. 
.PP
The number of elements returned depend on the column-span of the ExpectedType\&. 
.PP
Implements \fBNHibernate\&.Param\&.IParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.NamedParameterSpecification\fP, and \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP\&.
.SS "abstract int NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.GetSkipValue (\fBQueryParameters\fPqueryParameters)\fC [pure virtual]\fP"

.PP
Retrieve the skip/offset value for the query 
.PP
\fBParameters:\fP
.RS 4
\fIqueryParameters\fP The parameters for the query
.RE
.PP
\fBReturns:\fP
.RS 4
The paging skip/offset value
.RE
.PP

.PP
Implements \fBNHibernate\&.Param\&.IPageableParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP, and \fBNHibernate\&.Param\&.NamedParameterSpecification\fP\&.
.SS "void NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.IsSkipParameter ()"

.PP
Notifies the parameter that it is a 'skip' parameter, and should calculate its value using the dialect settings 
.PP
Implements \fBNHibernate\&.Param\&.IPageableParameterSpecification\fP\&.
.PP
Definition at line 51 of file AbstractExplicitParameterSpecification\&.cs\&.
.SS "void NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.IsTakeParameterWithSkipParameter (\fBIPageableParameterSpecification\fPskipParameter)"

.PP
Notifies the parameter that it is a 'take' parameter, and should calculate its value using the dialect settings and the value of the supplied skipParameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIskipParameter\fP The associated skip parameter (null if there is none)\&.
.RE
.PP

.PP
Implements \fBNHibernate\&.Param\&.IPageableParameterSpecification\fP\&.
.PP
Definition at line 56 of file AbstractExplicitParameterSpecification\&.cs\&.
.SS "abstract string NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.RenderDisplayInfo ()\fC [pure virtual]\fP"

.PP
Render this parameter into displayable info (for logging, etc)\&. 
.PP
\fBReturns:\fP
.RS 4
The displayable info
.RE
.PP

.PP
Implements \fBNHibernate\&.Param\&.IParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP, and \fBNHibernate\&.Param\&.NamedParameterSpecification\fP\&.
.SS "abstract void NHibernate\&.Param\&.AbstractExplicitParameterSpecification\&.SetEffectiveType (\fBQueryParameters\fPqueryParameters)\fC [pure virtual]\fP"

.PP
Explicit parameters may have no set the \fBIParameterSpecification\&.ExpectedType\fP during query parse\&. 
.PP
\fBParameters:\fP
.RS 4
\fIqueryParameters\fP The defined values for the current query execution\&.
.RE
.PP
.PP
This method should be removed when the parameter type is inferred during the parse\&. 
.PP
Implements \fBNHibernate\&.Param\&.IExplicitParameterSpecification\fP\&.
.PP
Implemented in \fBNHibernate\&.Param\&.PositionalParameterSpecification\fP, and \fBNHibernate\&.Param\&.NamedParameterSpecification\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
