.TH "log4net.Filter.LoggerMatchFilter" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4net.Filter.LoggerMatchFilter \- 
.PP
Simple filter to match a string in the event's logger name\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBlog4net\&.Filter\&.FilterSkeleton\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLoggerMatchFilter\fP ()"
.br
.RI "\fIDefault constructor \fP"
.ti -1c
.RI "override \fBFilterDecision\fP \fBDecide\fP (\fBLoggingEvent\fP loggingEvent)"
.br
.RI "\fICheck if this filter should allow the event to be logged \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBAcceptOnMatch\fP\fC [get, set]\fP"
.br
.RI "\fIFilterDecision\&.Accept when matching \fBLoggerToMatch\fP \fP"
.ti -1c
.RI "string \fBLoggerToMatch\fP\fC [get, set]\fP"
.br
.RI "\fIThe LoggingEvent\&.LoggerName that the filter will match \fP"
.in -1c
.SH "Detailed Description"
.PP 
Simple filter to match a string in the event's logger name\&. 

The works very similar to the \fBLevelMatchFilter\fP\&. It admits two options \fBLoggerToMatch\fP and \fBAcceptOnMatch\fP\&. If the LoggingEvent\&.LoggerName of the LoggingEvent starts with the value of the \fBLoggerToMatch\fP option, then the \fBDecide\fP method returns FilterDecision\&.Accept in case the \fBAcceptOnMatch\fP option value is set to \fCtrue\fP, if it is \fCfalse\fP then FilterDecision\&.Deny is returned\&. 
.PP
<author>Daniel Cazzulino</author> 
.PP
Definition at line 43 of file LoggerMatchFilter\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "log4net\&.Filter\&.LoggerMatchFilter\&.LoggerMatchFilter ()"

.PP
Default constructor 
.PP
Definition at line 64 of file LoggerMatchFilter\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override \fBFilterDecision\fP log4net\&.Filter\&.LoggerMatchFilter\&.Decide (\fBLoggingEvent\fPloggingEvent)\fC [virtual]\fP"

.PP
Check if this filter should allow the event to be logged 
.PP
\fBParameters:\fP
.RS 4
\fIloggingEvent\fP the event being logged
.RE
.PP
\fBReturns:\fP
.RS 4
see remarks
.RE
.PP
.PP
The rendered message is matched against the \fBLoggerToMatch\fP\&. If the \fBLoggerToMatch\fP equals the beginning of the incoming LoggingEvent\&.LoggerName (String\&.StartsWith(string)) then a match will have occurred\&. If no match occurs this function will return FilterDecision\&.Neutral allowing other filters to check the event\&. If a match occurs then the value of \fBAcceptOnMatch\fP is checked\&. If it is true then FilterDecision\&.Accept is returned otherwise FilterDecision\&.Deny is returned\&. 
.PP
Implements \fBlog4net\&.Filter\&.FilterSkeleton\fP\&.
.PP
Definition at line 132 of file LoggerMatchFilter\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "bool log4net\&.Filter\&.LoggerMatchFilter\&.AcceptOnMatch\fC [get]\fP, \fC [set]\fP"

.PP
FilterDecision\&.Accept when matching \fBLoggerToMatch\fP The \fBAcceptOnMatch\fP property is a flag that determines the behavior when a matching Level is found\&. If the flag is set to true then the filter will FilterDecision\&.Accept the logging event, otherwise it will FilterDecision\&.Deny the event\&. 
.PP
The default is \fCtrue\fP i\&.e\&. to FilterDecision\&.Accept the event\&. 
.PP
Definition at line 87 of file LoggerMatchFilter\&.cs\&.
.SS "string log4net\&.Filter\&.LoggerMatchFilter\&.LoggerToMatch\fC [get]\fP, \fC [set]\fP"

.PP
The LoggingEvent\&.LoggerName that the filter will match This filter will attempt to match this value against logger name in the following way\&. The match will be done against the beginning of the logger name (using String\&.StartsWith(string))\&. The match is case sensitive\&. If a match is found then the result depends on the value of \fBAcceptOnMatch\fP\&. 
.PP
Definition at line 105 of file LoggerMatchFilter\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
