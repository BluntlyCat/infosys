.TH "NHibernate.Properties" 3 "Fri Jul 5 2013" "Version 1.0" "HSA.InfoSys" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NHibernate.Properties \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBackFieldStrategy\fP"
.br
.ti -1c
.RI "struct \fBUnknownBackrefProperty\fP"
.br
.ti -1c
.RI "class \fBBackrefPropertyAccessor\fP"
.br
.RI "\fIRepresents a 'back-reference' to the id of a collection owner\&. \fP"
.ti -1c
.RI "class \fBBasicPropertyAccessor\fP"
.br
.RI "\fIAccesses mapped property values via a get/set pair, which may be nonpublic\&. The default (and recommended strategy)\&. \fP"
.ti -1c
.RI "class \fBCamelCaseMUnderscoreStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are prefixed with an \fCm_\fP and the PropertyName is changed to camelCase\&. \fP"
.ti -1c
.RI "class \fBCamelCaseStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are the camelCase version of the PropertyName \fP"
.ti -1c
.RI "class \fBCamelCaseUnderscoreStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are prefixed with an underscore and the PropertyName is changed to camelCase\&. \fP"
.ti -1c
.RI "class \fBChainedPropertyAccessor\fP"
.br
.ti -1c
.RI "class \fBEmbeddedPropertyAccessor\fP"
.br
.ti -1c
.RI "class \fBFieldAccessor\fP"
.br
.RI "\fIAccess the mapped property by using a Field to \fCget\fP and \fCset\fP the value\&. \fP"
.ti -1c
.RI "interface \fBIFieldNamingStrategy\fP"
.br
.RI "\fIA Strategy for converting a mapped property name to a Field name\&. \fP"
.ti -1c
.RI "interface \fBIGetter\fP"
.br
.RI "\fIGets values of a particular mapped property\&. \fP"
.ti -1c
.RI "class \fBIndexPropertyAccessor\fP"
.br
.RI "\fIRepresents a 'back-reference' to the index of a collection\&. \fP"
.ti -1c
.RI "interface \fBIOptimizableGetter\fP"
.br
.RI "\fIAn \fBIGetter\fP that can emit IL to get the property value\&. \fP"
.ti -1c
.RI "interface \fBIOptimizableSetter\fP"
.br
.RI "\fIAn \fBISetter\fP that can emit IL to set the property value\&. \fP"
.ti -1c
.RI "interface \fBIPropertyAccessor\fP"
.br
.RI "\fIAbstracts the notion of a 'property'\&. Defines a strategy for accessing the value of a mapped property\&. \fP"
.ti -1c
.RI "interface \fBISetter\fP"
.br
.RI "\fISets values of a particular mapped property\&. \fP"
.ti -1c
.RI "class \fBLowerCaseStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are the PropertyName in all LowerCase characters\&. \fP"
.ti -1c
.RI "class \fBLowerCaseUnderscoreStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are prefixed with an underscore and the PropertyName is changed to lower case\&. \fP"
.ti -1c
.RI "class \fBMapAccessor\fP"
.br
.ti -1c
.RI "class \fBNoopAccessor\fP"
.br
.RI "\fIUsed to declare properties not represented at the pojo level \fP"
.ti -1c
.RI "class \fBNoSetterAccessor\fP"
.br
.RI "\fIAccess the mapped property through a Property \fCget\fP to get the value and go directly to the Field to set the value\&. \fP"
.ti -1c
.RI "class \fBPascalCaseMStrategy\fP"
.br
.ti -1c
.RI "class \fBPascalCaseMUnderscoreStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are prefixed with an \fCm_\fP and the first character in PropertyName capitalized\&. \fP"
.ti -1c
.RI "class \fBPascalCaseUnderscoreStrategy\fP"
.br
.RI "\fIImplementation of \fBIFieldNamingStrategy\fP for fields that are prefixed with an \fC_\fP and the first character in PropertyName capitalized\&. \fP"
.ti -1c
.RI "class \fBPropertyAccessorFactory\fP"
.br
.RI "\fIFactory for creating the various PropertyAccessor strategies\&. \fP"
.ti -1c
.RI "class \fBReadOnlyAccessor\fP"
.br
.RI "\fIAccess the mapped property through a Property \fCget\fP to get the value and do nothing to set the value\&. \fP"
.ti -1c
.RI "class \fBXmlAccessor\fP"
.br
.RI "\fIResponsible for accessing property values represented as a XmlElement or XmlAttribute\&. \fP"
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for HSA\&.InfoSys from the source code\&.
